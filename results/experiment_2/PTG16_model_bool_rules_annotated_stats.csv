,Unnamed: 0,concept,is_bool,item_num,set_num,answer,hyes,hno,p(yes),lambda_rule,rule_expression,manual_code,object,concept_num,set,data_answer,model_answer,code_eval,human_lq,chance,coverage_manual_code,full_coverage_manual_code,consistency
0,0,circle and not blue,True,0,0,0,8,16,0.4374886153022998,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg13,0,False,False,True,0.965675057208238,0.7440420341527492,,0.1506849315068493,False
1,1,circle and not blue,True,1,0,0,11,13,0.4805260888002749,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg13,0,False,False,True,0.965675057208238,0.7440420341527492,0.0,0.1506849315068493,False
2,2,circle and not blue,True,2,1,0,11,13,0.2636245082492223,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg13,1,False,False,False,0.965675057208238,0.7440420341527492,1.0,0.8493150684931506,True
3,3,circle and not blue,True,3,1,0,13,11,0.2580622647743666,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg13,1,False,False,False,0.965675057208238,0.7440420341527492,1.0,0.8493150684931506,True
4,4,circle and not blue,True,4,1,0,12,12,0.2499213972389497,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg13,1,False,False,False,0.965675057208238,0.7440420341527492,1.0,0.8493150684931506,True
5,5,circle and not blue,True,5,2,0,10,14,0.2469120069375776,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg13,2,False,False,False,0.965675057208238,0.7440420341527492,1.0,0.8493150684931506,True
6,6,circle and not blue,True,6,2,1,14,10,0.3691010882009777,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg13,2,True,False,False,0.965675057208238,0.7440420341527492,1.0,0.8493150684931506,True
7,7,circle and not blue,True,7,2,0,10,14,0.3333885977156114,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg13,2,False,False,False,0.965675057208238,0.7440420341527492,0.8571428571428571,0.8493150684931506,True
8,8,circle and not blue,True,8,3,0,2,22,0.0864164131547795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg13,3,False,False,False,0.965675057208238,0.7440420341527492,0.875,0.8493150684931506,True
9,9,circle and not blue,True,9,3,0,2,22,0.1659525017772693,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg13,3,False,False,False,0.965675057208238,0.7440420341527492,0.8888888888888888,0.8493150684931506,True
10,10,circle and not blue,True,10,4,0,6,17,0.2780272033922983,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg13,4,False,False,False,0.965675057208238,0.7440420341527492,0.9,0.8493150684931506,True
11,11,circle and not blue,True,11,4,0,2,21,0.195602436207082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg13,4,False,False,False,0.965675057208238,0.7440420341527492,0.9090909090909091,0.8493150684931506,True
12,12,circle and not blue,True,12,4,0,3,20,0.1512795791854841,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg13,4,False,False,False,0.965675057208238,0.7440420341527492,0.9166666666666666,0.8493150684931506,True
13,13,circle and not blue,True,13,4,0,3,20,0.1694885452832295,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg13,4,False,False,False,0.965675057208238,0.7440420341527492,0.9230769230769231,0.8493150684931506,True
14,14,circle and not blue,True,14,4,0,3,20,0.1000756203018227,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg13,4,False,False,False,0.965675057208238,0.7440420341527492,0.9285714285714286,0.8493150684931506,True
15,15,circle and not blue,True,15,5,0,2,21,0.0511593607905069,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg13,5,False,False,False,0.965675057208238,0.7440420341527492,0.9333333333333333,0.8493150684931506,True
16,16,circle and not blue,True,16,5,0,0,23,0.0369479453215717,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg13,5,False,False,False,0.965675057208238,0.7440420341527492,0.9375,0.8493150684931506,True
17,17,circle and not blue,True,17,6,0,3,20,0.1812629932708205,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg13,6,False,False,False,0.965675057208238,0.7440420341527492,0.9411764705882353,0.8493150684931506,True
18,18,circle and not blue,True,18,6,0,2,21,0.0769868013522909,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg13,6,False,False,False,0.965675057208238,0.7440420341527492,0.9444444444444444,0.8493150684931506,True
19,19,circle and not blue,True,19,6,0,1,22,0.0758577483296676,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg13,6,False,False,False,0.965675057208238,0.7440420341527492,0.9473684210526315,0.8493150684931506,True
20,20,circle and not blue,True,20,6,1,2,21,0.3297284458946023,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg13,6,True,False,False,0.965675057208238,0.7440420341527492,0.95,0.8493150684931506,True
21,21,circle and not blue,True,21,6,0,2,21,0.172805045832888,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg13,6,False,False,False,0.965675057208238,0.7440420341527492,0.9047619047619048,0.8493150684931506,True
22,22,circle and not blue,True,22,7,0,2,21,0.0510014640332201,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg13,7,False,False,False,0.965675057208238,0.7440420341527492,0.9090909090909091,0.8493150684931506,True
23,23,circle and not blue,True,23,7,0,1,22,0.0247767830048815,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg13,7,False,False,False,0.965675057208238,0.7440420341527492,0.9130434782608695,0.8493150684931506,True
24,24,circle and not blue,True,24,8,0,2,21,0.0433214632159888,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg13,8,False,False,False,0.965675057208238,0.7440420341527492,0.9166666666666666,0.8493150684931506,True
25,25,circle and not blue,True,25,8,0,1,22,0.0399915558093653,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg13,8,False,False,False,0.965675057208238,0.7440420341527492,0.92,0.8493150684931506,True
26,26,circle and not blue,True,26,8,0,1,22,0.0619131538923056,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg13,8,False,False,False,0.965675057208238,0.7440420341527492,0.9230769230769231,0.8493150684931506,True
27,27,circle and not blue,True,27,8,1,15,8,0.5234722366997175,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg13,8,True,True,False,0.965675057208238,0.7440420341527492,0.9259259259259259,0.8493150684931506,False
28,28,circle and not blue,True,28,9,0,1,22,0.050357944410166,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium blue triangle,hg13,9,False,False,False,0.965675057208238,0.7440420341527492,0.9642857142857143,0.958904109589041,True
29,29,circle and not blue,True,29,9,0,0,23,0.0201715674602382,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium blue rectangle,hg13,9,False,False,False,0.965675057208238,0.7440420341527492,0.9655172413793104,0.958904109589041,True
30,30,circle and not blue,True,30,10,0,0,23,0.0240717678262853,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg13,10,False,False,False,0.965675057208238,0.7440420341527492,0.9,0.8493150684931506,True
31,31,circle and not blue,True,31,10,0,2,21,0.0157219859984252,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg13,10,False,False,False,0.965675057208238,0.7440420341527492,0.9032258064516129,0.8493150684931506,True
32,32,circle and not blue,True,32,11,0,1,22,0.057038405213575,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg13,11,False,False,False,0.965675057208238,0.7440420341527492,0.90625,0.8493150684931506,True
33,33,circle and not blue,True,33,11,0,2,21,0.0713354899742171,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg13,11,False,False,False,0.965675057208238,0.7440420341527492,0.9090909090909091,0.8493150684931506,True
34,34,circle and not blue,True,34,11,1,18,5,0.590541908313412,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg13,11,True,True,False,0.965675057208238,0.7440420341527492,0.9117647058823529,0.8493150684931506,False
35,35,circle and not blue,True,35,12,0,1,22,0.0174579177331679,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg13,12,False,False,False,0.965675057208238,0.7440420341527492,0.9142857142857143,0.9315068493150684,True
36,36,circle and not blue,True,36,13,1,21,2,0.750221350617494,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg13,13,True,True,False,0.965675057208238,0.7440420341527492,0.8888888888888888,0.8493150684931506,False
37,37,circle and not blue,True,37,14,0,0,23,0.0162140387877798,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg13,14,False,False,False,0.965675057208238,0.7440420341527492,0.918918918918919,0.9315068493150684,True
38,38,circle and not blue,True,38,14,0,2,21,0.018052057905038,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow triangle,hg13,14,False,False,False,0.965675057208238,0.7440420341527492,0.9210526315789473,0.9315068493150684,True
39,39,circle and not blue,True,39,15,0,1,22,0.0241788204887143,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg13,15,False,False,False,0.965675057208238,0.7440420341527492,0.9230769230769231,0.9315068493150684,True
40,40,circle and not blue,True,40,15,1,20,3,0.6332656308918558,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green circle,hg13,15,True,True,True,0.965675057208238,0.7440420341527492,0.925,0.9315068493150684,True
41,41,circle and not blue,True,41,15,0,0,23,0.0253586652548847,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green rectangle,hg13,15,False,False,False,0.965675057208238,0.7440420341527492,0.926829268292683,0.9315068493150684,True
42,42,circle and not blue,True,42,15,1,23,0,0.8122818060980989,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow circle,hg13,15,True,True,True,0.965675057208238,0.7440420341527492,0.9285714285714286,0.9315068493150684,True
43,43,circle and not blue,True,43,15,1,20,3,0.8126090560895136,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg13,15,True,True,True,0.965675057208238,0.7440420341527492,0.9302325581395349,0.9315068493150684,True
44,44,circle and not blue,True,44,16,0,2,21,0.0020709498558062,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green triangle,hg13,16,False,False,False,0.965675057208238,0.7440420341527492,0.9318181818181818,0.9315068493150684,True
45,45,circle and not blue,True,45,16,0,0,23,0.0050169882468935,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green rectangle,hg13,16,False,False,False,0.965675057208238,0.7440420341527492,0.9333333333333333,0.9315068493150684,True
46,46,circle and not blue,True,46,16,0,1,22,0.0176633059223831,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg13,16,False,False,False,0.965675057208238,0.7440420341527492,0.9347826086956522,0.9315068493150684,True
47,47,circle and not blue,True,47,17,0,0,23,0.009354467059552,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg13,17,False,False,False,0.965675057208238,0.7440420341527492,0.9361702127659575,0.9315068493150684,True
48,48,circle and not blue,True,48,17,0,0,23,0.0024953120791906,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green rectangle,hg13,17,False,False,False,0.965675057208238,0.7440420341527492,0.9375,0.9315068493150684,True
49,49,circle and not blue,True,49,17,1,22,1,0.970464255272077,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow circle,hg13,17,True,True,True,0.965675057208238,0.7440420341527492,0.9387755102040817,0.9315068493150684,True
50,50,circle and not blue,True,50,18,0,2,21,0.002729185434191,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg13,18,False,False,False,0.965675057208238,0.7440420341527492,0.94,0.9315068493150684,True
51,51,circle and not blue,True,51,18,0,0,23,0.0057743486363506,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow rectangle,hg13,18,False,False,False,0.965675057208238,0.7440420341527492,0.9411764705882353,0.9315068493150684,True
52,52,circle and not blue,True,52,19,1,22,1,0.9565081350893933,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg13,19,True,True,True,0.965675057208238,0.7440420341527492,0.9423076923076923,0.9315068493150684,True
53,53,circle and not blue,True,53,19,0,0,23,0.0065360316814349,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow rectangle,hg13,19,False,False,False,0.965675057208238,0.7440420341527492,0.9433962264150944,0.9315068493150684,True
54,54,circle and not blue,True,54,19,0,3,20,0.4475942017750185,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue circle,hg13,19,False,False,True,0.965675057208238,0.7440420341527492,0.9444444444444444,0.9315068493150684,False
55,55,circle and not blue,True,55,20,0,0,23,0.002941141932979,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small yellow triangle,hg13,20,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
56,56,circle and not blue,True,56,20,0,0,23,0.0079232328988609,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large blue triangle,hg13,20,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
57,57,circle and not blue,True,57,20,0,1,22,0.0078681416163135,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small blue rectangle,hg13,20,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
58,58,circle and not blue,True,58,20,0,1,22,0.0021721316038565,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green triangle,hg13,20,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
59,59,circle and not blue,True,59,20,0,0,23,0.0085608317941705,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small blue triangle,hg13,20,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
60,60,circle and not blue,True,60,21,0,0,23,0.0036737187284643,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium green triangle,hg13,21,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
61,61,circle and not blue,True,61,21,0,0,23,0.006113361166399,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large green triangle,hg13,21,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
62,62,circle and not blue,True,62,21,0,1,22,0.0019695826917995,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green rectangle,hg13,21,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
63,63,circle and not blue,True,63,21,0,4,19,0.2552755974166984,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large blue circle,hg13,21,False,False,False,0.965675057208238,0.7440420341527492,1.0,1.0,True
64,64,circle and not blue,True,64,22,0,0,23,0.005191706426558,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium green triangle,hg13,22,False,False,False,0.965675057208238,0.7440420341527492,0.96875,0.958904109589041,True
65,65,circle and not blue,True,65,23,0,1,22,0.0019225372033133,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium green triangle,hg13,23,False,False,False,0.965675057208238,0.7440420341527492,0.9692307692307692,0.958904109589041,True
66,66,circle and not blue,True,66,23,0,0,23,0.0036127311688005,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",small yellow triangle,hg13,23,False,False,False,0.965675057208238,0.7440420341527492,0.9696969696969697,0.958904109589041,True
67,67,circle and not blue,True,67,23,0,0,23,0.0019656148299418,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",large green rectangle,hg13,23,False,False,False,0.965675057208238,0.7440420341527492,0.9701492537313433,0.958904109589041,True
68,68,circle and not blue,True,68,24,0,0,23,0.0114705639061867,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",large blue rectangle,hg13,24,False,False,False,0.965675057208238,0.7440420341527492,0.9705882352941176,0.958904109589041,True
69,69,circle and not blue,True,69,24,0,0,23,0.0057578421109383,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium green rectangle,hg13,24,False,False,False,0.965675057208238,0.7440420341527492,0.9710144927536232,0.958904109589041,True
70,70,circle and not blue,True,70,24,0,2,21,0.0084136683464066,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",large yellow triangle,hg13,24,False,False,False,0.965675057208238,0.7440420341527492,0.9714285714285714,0.958904109589041,True
71,71,circle and not blue,True,71,24,1,22,1,0.7307726847102458,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",large green circle,hg13,24,True,True,False,0.965675057208238,0.7440420341527492,0.971830985915493,0.958904109589041,False
72,72,circle and not blue,True,72,24,0,1,22,0.0064981434794617,"""λx.apply1(compose11(compose8(and,circle),yellow),x.o)""
",circle and yellow,"def is_rule(obj):
    return obj.circle and obj.yellow",medium yellow triangle,hg13,24,False,False,False,0.965675057208238,0.7440420341527492,0.9583333333333334,0.958904109589041,True
73,390,false,True,0,0,0,11,12,0.4924532991209389,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg02,0,False,False,True,0.9325,1.0,0.0,0.0,False
74,391,false,True,1,0,0,12,11,0.4695215416776363,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg02,0,False,False,True,0.9325,1.0,0.0,0.0,False
75,392,false,True,2,0,0,10,13,0.4950939551363262,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg02,0,False,False,True,0.9325,1.0,0.0,0.0,False
76,393,false,True,3,0,0,8,15,0.4016727621939253,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg02,0,False,False,True,0.9325,1.0,0.0,0.0,False
77,394,false,True,4,0,0,10,13,0.4218091262005145,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg02,0,False,False,True,0.9325,1.0,0.0,0.0,False
78,395,false,True,5,1,0,1,22,0.1125575876878883,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg02,1,False,False,False,0.9325,1.0,1.0,1.0,True
79,396,false,True,6,1,0,1,22,0.1142999437165599,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg02,1,False,False,False,0.9325,1.0,1.0,1.0,True
80,397,false,True,7,1,0,15,8,0.3527308231044798,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg02,1,False,False,False,0.9325,1.0,1.0,1.0,True
81,398,false,True,8,1,0,11,12,0.3429014047260352,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg02,1,False,False,False,0.9325,1.0,1.0,1.0,True
82,399,false,True,9,1,0,17,6,0.367410521753186,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg02,1,False,False,False,0.9325,1.0,1.0,1.0,True
83,400,false,True,10,2,0,8,14,0.1361596482762479,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg02,2,False,False,False,0.9325,1.0,1.0,1.0,True
84,401,false,True,11,3,0,6,16,0.0959627746650539,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg02,3,False,False,False,0.9325,1.0,1.0,1.0,True
85,402,false,True,12,3,0,5,17,0.183952420542937,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg02,3,False,False,False,0.9325,1.0,1.0,1.0,True
86,403,false,True,13,4,0,5,17,0.150581012300563,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg02,4,False,False,False,0.9325,1.0,1.0,1.0,True
87,404,false,True,14,4,0,5,17,0.0812570754990247,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg02,4,False,False,False,0.9325,1.0,1.0,1.0,True
88,405,false,True,15,4,0,4,18,0.2161730714900613,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg02,4,False,False,False,0.9325,1.0,1.0,1.0,True
89,406,false,True,16,4,0,3,19,0.095493096664768,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg02,4,False,False,False,0.9325,1.0,1.0,1.0,True
90,407,false,True,17,4,0,6,16,0.1509899955101445,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg02,4,False,False,False,0.9325,1.0,1.0,1.0,True
91,408,false,True,18,5,0,5,16,0.1760101116548185,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg02,5,False,False,False,0.9325,1.0,1.0,1.0,True
92,409,false,True,19,5,0,5,16,0.1152551913530714,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg02,5,False,False,False,0.9325,1.0,1.0,1.0,True
93,410,false,True,20,5,0,0,21,0.05506049875612,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg02,5,False,False,False,0.9325,1.0,1.0,1.0,True
94,411,false,True,21,5,0,4,17,0.1015308925119597,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg02,5,False,False,False,0.9325,1.0,1.0,1.0,True
95,412,false,True,22,5,0,1,20,0.0843596275479967,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg02,5,False,False,False,0.9325,1.0,1.0,1.0,True
96,413,false,True,23,6,0,2,18,0.0918816697728743,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg02,6,False,False,False,0.9325,1.0,1.0,1.0,True
97,414,false,True,24,7,0,1,19,0.1569507339170286,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg02,7,False,False,False,0.9325,1.0,1.0,1.0,True
98,415,false,True,25,7,0,0,20,0.0790785275590906,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg02,7,False,False,False,0.9325,1.0,1.0,1.0,True
99,416,false,True,26,7,0,1,19,0.0996676079962526,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg02,7,False,False,False,0.9325,1.0,1.0,1.0,True
100,417,false,True,27,7,0,2,18,0.1095716462809832,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg02,7,False,False,False,0.9325,1.0,1.0,1.0,True
101,418,false,True,28,7,0,0,20,0.0476829346328031,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg02,7,False,False,False,0.9325,1.0,1.0,1.0,True
102,419,false,True,29,8,0,1,19,0.078087510978662,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg02,8,False,False,False,0.9325,1.0,1.0,1.0,True
103,420,false,True,30,8,0,1,19,0.0547588671673793,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg02,8,False,False,False,0.9325,1.0,1.0,1.0,True
104,421,false,True,31,8,0,2,18,0.1046246009673268,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg02,8,False,False,False,0.9325,1.0,1.0,1.0,True
105,422,false,True,32,8,0,3,17,0.0757459394969828,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg02,8,False,False,False,0.9325,1.0,1.0,1.0,True
106,423,false,True,33,9,0,1,19,0.0709441965040014,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg02,9,False,False,False,0.9325,1.0,1.0,1.0,True
107,424,false,True,34,9,0,0,20,0.0359265180488819,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg02,9,False,False,False,0.9325,1.0,1.0,1.0,True
108,425,false,True,35,9,0,1,19,0.1057403505017191,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg02,9,False,False,False,0.9325,1.0,1.0,1.0,True
109,426,false,True,36,10,0,1,19,0.0686149902060151,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg02,10,False,False,False,0.9325,1.0,1.0,1.0,True
110,427,false,True,37,11,0,1,19,0.1427438788959989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg02,11,False,False,False,0.9325,1.0,1.0,1.0,True
111,428,false,True,38,11,0,2,18,0.1804824136072511,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg02,11,False,False,False,0.9325,1.0,1.0,1.0,True
112,429,false,True,39,12,0,2,18,0.0791718228713307,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg02,12,False,False,False,0.9325,1.0,1.0,1.0,True
113,430,false,True,40,12,0,2,18,0.0582930544012469,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg02,12,False,False,False,0.9325,1.0,1.0,1.0,True
114,431,false,True,41,13,0,0,20,0.1690679642622399,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg02,13,False,False,False,0.9325,1.0,1.0,1.0,True
115,432,false,True,42,14,0,1,19,0.0528929853878707,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg02,14,False,False,False,0.9325,1.0,1.0,1.0,True
116,433,false,True,43,14,0,2,18,0.0310742401071593,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg02,14,False,False,False,0.9325,1.0,1.0,1.0,True
117,434,false,True,44,14,0,1,19,0.069390486587622,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg02,14,False,False,False,0.9325,1.0,1.0,1.0,True
118,435,false,True,45,14,0,2,18,0.121306547991594,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg02,14,False,False,False,0.9325,1.0,1.0,1.0,True
119,436,false,True,46,14,0,1,19,0.0550042117023394,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg02,14,False,False,False,0.9325,1.0,1.0,1.0,True
120,437,false,True,47,15,0,0,20,0.0603148803064641,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg02,15,False,False,False,0.9325,1.0,1.0,1.0,True
121,438,false,True,48,15,0,0,20,0.1508515347310321,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg02,15,False,False,False,0.9325,1.0,1.0,1.0,True
122,439,false,True,49,16,0,1,19,0.0429601609694145,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg02,16,False,False,False,0.9325,1.0,1.0,1.0,True
123,440,false,True,50,16,0,0,20,0.0497730931310798,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg02,16,False,False,False,0.9325,1.0,1.0,1.0,True
124,441,false,True,51,16,0,0,20,0.0491010640388367,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg02,16,False,False,False,0.9325,1.0,1.0,1.0,True
125,442,false,True,52,17,0,1,19,0.0872434006180355,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg02,17,False,False,False,0.9325,1.0,1.0,1.0,True
126,443,false,True,53,18,0,0,20,0.0872210846316647,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg02,18,False,False,False,0.9325,1.0,1.0,1.0,True
127,444,false,True,54,18,0,1,19,0.0278223568583371,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg02,18,False,False,False,0.9325,1.0,1.0,1.0,True
128,445,false,True,55,18,0,1,19,0.0781259218692866,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg02,18,False,False,False,0.9325,1.0,1.0,1.0,True
129,446,false,True,56,18,0,0,20,0.0159617462051073,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg02,18,False,False,False,0.9325,1.0,1.0,1.0,True
130,447,false,True,57,19,0,1,19,0.0733725433254903,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg02,19,False,False,False,0.9325,1.0,1.0,1.0,True
131,448,false,True,58,19,0,0,20,0.0584835777520993,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg02,19,False,False,False,0.9325,1.0,1.0,1.0,True
132,449,false,True,59,19,0,1,19,0.0316574264514883,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg02,19,False,False,False,0.9325,1.0,1.0,1.0,True
133,450,false,True,60,19,0,0,20,0.0457785646148067,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg02,19,False,False,False,0.9325,1.0,1.0,1.0,True
134,451,false,True,61,19,0,1,19,0.0533210224471076,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg02,19,False,False,False,0.9325,1.0,1.0,1.0,True
135,452,false,True,62,20,0,0,20,0.0544679530619305,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg02,20,False,False,False,0.9325,1.0,1.0,1.0,True
136,453,false,True,63,20,0,1,19,0.0143252465763907,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg02,20,False,False,False,0.9325,1.0,1.0,1.0,True
137,454,false,True,64,20,0,1,19,0.020409985198512,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg02,20,False,False,False,0.9325,1.0,1.0,1.0,True
138,455,false,True,65,20,0,2,18,0.08971223490812,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg02,20,False,False,False,0.9325,1.0,1.0,1.0,True
139,456,false,True,66,20,0,1,19,0.040663888537324,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg02,20,False,False,False,0.9325,1.0,1.0,1.0,True
140,457,false,True,67,21,0,2,18,0.0403615388006528,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg02,21,False,False,False,0.9325,1.0,1.0,1.0,True
141,458,false,True,68,21,0,1,19,0.0467684754028141,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg02,21,False,False,False,0.9325,1.0,1.0,1.0,True
142,459,false,True,69,22,0,1,19,0.0189602055552313,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg02,22,False,False,False,0.9325,1.0,1.0,1.0,True
143,460,false,True,70,22,0,0,20,0.0755265709409513,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg02,22,False,False,False,0.9325,1.0,1.0,1.0,True
144,461,false,True,71,23,0,1,19,0.0609660306236037,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg02,23,False,False,False,0.9325,1.0,1.0,1.0,True
145,462,false,True,72,23,0,1,19,0.0193685215773484,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg02,23,False,False,False,0.9325,1.0,1.0,1.0,True
146,463,false,True,73,23,0,1,19,0.0171958029796996,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg02,23,False,False,False,0.9325,1.0,1.0,1.0,True
147,464,false,True,74,23,0,1,19,0.0582296497082097,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg02,23,False,False,False,0.9325,1.0,1.0,1.0,True
148,465,false,True,75,23,0,1,19,0.0541807945576238,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg02,23,False,False,False,0.9325,1.0,1.0,1.0,True
149,466,false,True,76,24,0,0,20,0.0596094823205248,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg02,24,False,False,False,0.9325,1.0,1.0,1.0,True
150,467,false,True,77,24,0,1,19,0.0339848600010554,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg02,24,False,False,False,0.9325,1.0,1.0,1.0,True
151,546,circle xor (not blue),True,0,0,1,7,15,0.5196910857276861,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg16,0,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
152,547,circle xor (not blue),True,1,0,1,5,17,0.4211788482275551,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg16,0,True,False,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,False
153,548,circle xor (not blue),True,2,0,1,13,9,0.4352943050009798,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg16,0,True,False,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,False
154,549,circle xor (not blue),True,3,1,1,8,14,0.6129668037423243,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg16,1,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
155,550,circle xor (not blue),True,4,2,0,16,6,0.784790767704294,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg16,2,False,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
156,551,circle xor (not blue),True,5,2,1,18,4,0.7034637770412928,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg16,2,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
157,552,circle xor (not blue),True,6,2,1,17,5,0.8571466033391743,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg16,2,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
158,553,circle xor (not blue),True,7,2,1,13,9,0.6731772680244603,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg16,2,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
159,554,circle xor (not blue),True,8,2,0,14,8,0.6497891584435819,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg16,2,False,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
160,555,circle xor (not blue),True,9,3,1,19,3,0.8768141152364705,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green rectangle,hg16,3,True,True,True,0.7941176470588236,0.5041322314049587,0.8484848484848485,0.8484848484848485,True
161,556,circle xor (not blue),True,10,4,1,16,6,0.7551027845521502,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg16,4,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
162,557,circle xor (not blue),True,11,4,1,18,4,0.8550456212961989,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg16,4,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
163,558,circle xor (not blue),True,12,4,1,16,6,0.8448024550588115,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg16,4,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
164,559,circle xor (not blue),True,13,5,0,10,12,0.5430283754411676,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg16,5,False,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
165,560,circle xor (not blue),True,14,5,0,11,11,0.7514672814565982,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg16,5,False,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
166,561,circle xor (not blue),True,15,6,1,17,5,0.8911286429166693,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small green rectangle,hg16,6,True,True,True,0.7941176470588236,0.5041322314049587,0.7727272727272727,0.7727272727272727,True
167,562,circle xor (not blue),True,16,6,1,17,5,0.8522837447454776,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small yellow rectangle,hg16,6,True,True,True,0.7941176470588236,0.5041322314049587,0.7727272727272727,0.7727272727272727,True
168,563,circle xor (not blue),True,17,6,1,21,1,0.8537255767477063,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small yellow triangle,hg16,6,True,True,True,0.7941176470588236,0.5041322314049587,0.7727272727272727,0.7727272727272727,True
169,564,circle xor (not blue),True,18,6,1,16,6,0.8237735912740618,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",medium yellow rectangle,hg16,6,True,True,True,0.7941176470588236,0.5041322314049587,0.7727272727272727,0.7727272727272727,True
170,565,circle xor (not blue),True,19,7,0,11,11,0.3550256588313231,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg16,7,False,False,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,False
171,566,circle xor (not blue),True,20,7,0,12,10,0.347098931366645,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg16,7,False,False,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,False
172,567,circle xor (not blue),True,21,7,0,9,13,0.4637665356211755,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg16,7,False,False,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,False
173,568,circle xor (not blue),True,22,7,1,17,5,0.96804726127084,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg16,7,True,True,True,0.7941176470588236,0.5041322314049587,0.5454545454545454,0.5454545454545454,True
174,569,circle xor (not blue),True,23,8,1,16,6,0.4975784213467022,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue circle,hg16,8,True,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
175,570,circle xor (not blue),True,24,8,1,21,1,0.9661607104422956,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green rectangle,hg16,8,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
176,571,circle xor (not blue),True,25,8,0,8,14,0.09436083442381,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue rectangle,hg16,8,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
177,572,circle xor (not blue),True,26,9,0,6,16,0.0658662999099988,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",medium blue rectangle,hg16,9,False,False,False,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,True
178,573,circle xor (not blue),True,27,9,1,19,3,0.9911532095404708,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",small green triangle,hg16,9,True,True,True,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,True
179,574,circle xor (not blue),True,28,9,1,20,2,0.975867656996229,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",medium green rectangle,hg16,9,True,True,True,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,True
180,575,circle xor (not blue),True,29,10,0,5,17,0.0297271731000137,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",medium blue triangle,hg16,10,False,False,False,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,True
181,576,circle xor (not blue),True,30,11,1,18,4,0.9809824638389272,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",large green rectangle,hg16,11,True,True,True,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,True
182,577,circle xor (not blue),True,31,11,1,16,6,0.857302961251662,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",large yellow triangle,hg16,11,True,True,False,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,False
183,578,circle xor (not blue),True,32,11,1,17,5,0.8603492861568611,"""λx.apply1(compose11(compose8(or,small),green),x.o)""
",small or green,"def is_rule(obj):
    return obj.small or obj.green",medium yellow rectangle,hg16,11,True,True,False,0.7941176470588236,0.5041322314049587,0.6363636363636364,0.6363636363636364,False
184,579,circle xor (not blue),True,33,12,0,10,12,0.4413713612091214,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",medium green circle,hg16,12,False,False,True,0.7941176470588236,0.5041322314049587,0.7727272727272727,0.7727272727272727,False
185,580,circle xor (not blue),True,34,13,0,6,16,0.0953179142946964,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg16,13,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
186,581,circle xor (not blue),True,35,13,0,9,13,0.1655251309978211,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue rectangle,hg16,13,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
187,582,circle xor (not blue),True,36,13,1,16,6,0.9684674332308986,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg16,13,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
188,583,circle xor (not blue),True,37,14,0,5,17,0.2309630216348068,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow circle,hg16,14,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
189,584,circle xor (not blue),True,38,15,0,6,16,0.1024698906296634,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow circle,hg16,15,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
190,585,circle xor (not blue),True,39,15,1,21,1,0.9662205276104032,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg16,15,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
191,586,circle xor (not blue),True,40,15,1,18,4,0.9641945350171,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow rectangle,hg16,15,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
192,587,circle xor (not blue),True,41,15,0,5,17,0.0370127388471246,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg16,15,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
193,588,circle xor (not blue),True,42,15,1,19,3,0.9704087415968842,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg16,15,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
194,589,circle xor (not blue),True,43,16,1,20,2,0.981193832936924,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow triangle,hg16,16,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
195,590,circle xor (not blue),True,44,16,0,7,15,0.0142473220940928,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue triangle,hg16,16,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
196,591,circle xor (not blue),True,45,16,0,6,16,0.0247077811139888,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue rectangle,hg16,16,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
197,592,circle xor (not blue),True,46,16,0,6,16,0.0211984900595325,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue triangle,hg16,16,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
198,593,circle xor (not blue),True,47,16,0,5,17,0.0459859267798492,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow circle,hg16,16,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
199,594,circle xor (not blue),True,48,17,1,20,2,0.994057577875992,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg16,17,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
200,595,circle xor (not blue),True,49,18,0,4,18,0.0051061137340866,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue rectangle,hg16,18,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
201,596,circle xor (not blue),True,50,18,0,5,17,0.0053118880904321,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue rectangle,hg16,18,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
202,597,circle xor (not blue),True,51,19,1,18,4,0.983935620540592,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg16,19,True,True,True,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
203,598,circle xor (not blue),True,52,19,0,6,16,0.0014268249490214,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg16,19,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
204,599,circle xor (not blue),True,53,20,1,12,10,0.3943968411988407,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue circle,hg16,20,True,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
205,600,circle xor (not blue),True,54,20,0,5,17,0.1187618626585162,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green circle,hg16,20,False,False,False,0.7941176470588236,0.5041322314049587,0.9242424242424242,0.9242424242424242,True
206,601,circle xor (not blue),True,55,21,0,3,19,0.0051705463032476,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue rectangle,hg16,21,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
207,602,circle xor (not blue),True,56,21,0,5,17,0.0492581823581303,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green circle,hg16,21,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
208,603,circle xor (not blue),True,57,21,0,7,15,0.0501556628170192,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow circle,hg16,21,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
209,604,circle xor (not blue),True,58,21,1,19,3,0.9918717593919836,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow triangle,hg16,21,True,True,True,0.7941176470588236,0.5041322314049587,1.0,1.0,True
210,605,circle xor (not blue),True,59,21,1,19,3,0.991913685806594,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green rectangle,hg16,21,True,True,True,0.7941176470588236,0.5041322314049587,1.0,1.0,True
211,606,circle xor (not blue),True,60,22,1,19,3,0.5905554801929611,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue circle,hg16,22,True,True,True,0.7941176470588236,0.5041322314049587,1.0,1.0,True
212,607,circle xor (not blue),True,61,23,0,3,19,0.0248166417871971,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green circle,hg16,23,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
213,608,circle xor (not blue),True,62,23,0,3,19,0.0054461488772403,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue rectangle,hg16,23,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
214,609,circle xor (not blue),True,63,23,1,18,4,0.9950898821041392,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large yellow triangle,hg16,23,True,True,True,0.7941176470588236,0.5041322314049587,1.0,1.0,True
215,610,circle xor (not blue),True,64,23,0,5,17,0.0049762502187604,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue rectangle,hg16,23,False,False,False,0.7941176470588236,0.5041322314049587,1.0,1.0,True
216,611,circle xor (not blue),True,65,24,1,18,4,0.997459263243286,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow triangle,hg16,24,True,True,True,0.7941176470588236,0.5041322314049587,1.0,1.0,True
217,612,circle,True,0,0,0,14,12,0.3941442081030572,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg04,0,False,False,True,0.9671717171717172,0.6473469387755102,0.22857142857142856,0.22857142857142856,False
218,613,circle,True,1,1,0,5,21,0.2607084963896113,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg04,1,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
219,614,circle,True,2,1,0,8,18,0.4383595746223818,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg04,1,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
220,615,circle,True,3,1,0,8,18,0.4175918469371708,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg04,1,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
221,616,circle,True,4,2,0,2,24,0.2115236675268761,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg04,2,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
222,617,circle,True,5,2,0,4,22,0.2202872276949392,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg04,2,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
223,618,circle,True,6,2,0,3,23,0.2033039516800272,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg04,2,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
224,619,circle,True,7,2,0,5,21,0.2485738498202181,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg04,2,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
225,620,circle,True,8,3,0,1,23,0.0753850251523999,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg04,3,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
226,621,circle,True,9,3,0,2,22,0.1533737755062247,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg04,3,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
227,622,circle,True,10,3,0,2,22,0.0567867063064113,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg04,3,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
228,623,circle,True,11,3,0,5,19,0.0847565563019543,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg04,3,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
229,624,circle,True,12,3,0,2,22,0.055643673066811,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg04,3,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
230,625,circle,True,13,4,1,5,19,0.3537045171299268,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg04,4,True,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
231,626,circle,True,14,4,0,1,23,0.0599096943668655,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg04,4,False,False,False,0.9671717171717172,0.6473469387755102,0.7714285714285715,0.7714285714285715,True
232,627,circle,True,15,5,0,0,23,0.0734355552054921,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow triangle,hg04,5,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
233,628,circle,True,16,5,1,12,11,0.654177847018559,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green circle,hg04,5,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
234,629,circle,True,17,5,0,0,23,0.0805157448651243,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green triangle,hg04,5,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
235,630,circle,True,18,5,0,1,22,0.0516226901072514,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg04,5,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
236,631,circle,True,19,5,1,22,1,0.6426862504772543,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green circle,hg04,5,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
237,632,circle,True,20,6,1,21,2,0.9303655969135888,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green circle,hg04,6,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
238,633,circle,True,21,6,0,2,21,0.0268602692561898,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow rectangle,hg04,6,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
239,634,circle,True,22,7,1,15,8,0.5537429164364766,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue circle,hg04,7,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
240,635,circle,True,23,7,0,1,22,0.0341100022902764,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg04,7,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
241,636,circle,True,24,7,0,0,23,0.0227426771366481,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg04,7,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
242,637,circle,True,25,8,0,0,23,0.0266402175788016,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow rectangle,hg04,8,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
243,638,circle,True,26,8,1,23,0,0.8231794777793766,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue circle,hg04,8,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
244,639,circle,True,27,8,0,1,22,0.0240953286121339,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green rectangle,hg04,8,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
245,640,circle,True,28,8,1,23,0,0.9111745348374142,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green circle,hg04,8,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
246,641,circle,True,29,9,1,22,1,0.9277010413634345,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg04,9,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
247,642,circle,True,30,9,0,1,22,0.0273352536229367,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue rectangle,hg04,9,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
248,643,circle,True,31,10,1,21,2,0.957982046321149,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green circle,hg04,10,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
249,644,circle,True,32,10,0,2,21,0.0152176265130492,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg04,10,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
250,645,circle,True,33,10,1,23,0,0.965649614982908,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow circle,hg04,10,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
251,646,circle,True,34,10,0,0,23,0.0512382569961573,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue triangle,hg04,10,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
252,647,circle,True,35,11,0,0,23,0.0218255053395068,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow triangle,hg04,11,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
253,648,circle,True,36,11,0,0,23,0.0150683645704248,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,11,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
254,649,circle,True,37,12,1,20,3,0.9585268273804104,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow circle,hg04,12,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
255,650,circle,True,38,12,0,1,22,0.0114872777098753,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow triangle,hg04,12,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
256,651,circle,True,39,12,0,2,21,0.0242746779586013,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg04,12,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
257,652,circle,True,40,12,0,2,21,0.0226432979321771,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg04,12,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
258,653,circle,True,41,13,1,21,2,0.9654543845427952,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green circle,hg04,13,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
259,654,circle,True,42,13,0,1,22,0.0219602373844054,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg04,13,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
260,655,circle,True,43,13,1,21,2,0.8161476071265951,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue circle,hg04,13,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
261,656,circle,True,44,13,0,1,22,0.0041064910059276,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg04,13,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
262,657,circle,True,45,14,0,1,22,0.0024838946502541,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,14,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
263,658,circle,True,46,15,1,20,2,0.8970464576730137,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue circle,hg04,15,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
264,659,circle,True,47,15,1,20,2,0.9794196968954338,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow circle,hg04,15,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
265,660,circle,True,48,15,0,1,21,0.007057784145104,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green rectangle,hg04,15,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
266,661,circle,True,49,15,0,1,21,0.0016922707766298,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,15,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
267,662,circle,True,50,15,0,2,20,0.0041736031218988,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg04,15,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
268,663,circle,True,51,16,0,1,21,0.0009956453043287,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg04,16,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
269,664,circle,True,52,16,0,0,22,0.000426197678621,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,16,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
270,665,circle,True,53,17,0,0,22,0.0194267601807496,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow rectangle,hg04,17,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
271,666,circle,True,54,18,1,21,1,0.960625508756152,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow circle,hg04,18,True,True,True,0.9671717171717172,0.6473469387755102,1.0,1.0,True
272,667,circle,True,55,18,0,0,22,0.0152926098851366,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue rectangle,hg04,18,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
273,668,circle,True,56,18,0,2,20,0.0127575449505457,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow rectangle,hg04,18,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
274,669,circle,True,57,19,0,1,21,0.0234601777767693,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg04,19,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
275,670,circle,True,58,20,0,0,22,0.0077896187912074,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg04,20,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
276,671,circle,True,59,20,0,1,21,0.0068284572388392,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg04,20,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
277,672,circle,True,60,20,0,1,21,0.0027435210458861,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue rectangle,hg04,20,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
278,673,circle,True,61,20,0,0,22,0.0077712834320209,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green rectangle,hg04,20,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
279,674,circle,True,62,21,0,0,22,0.0009444744857773,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green rectangle,hg04,21,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
280,675,circle,True,63,21,0,0,22,0.0024986778462334,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,21,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
281,676,circle,True,64,22,0,2,20,0.0022787926644696,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green triangle,hg04,22,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
282,677,circle,True,65,23,0,0,22,0.0016934102592358,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green triangle,hg04,23,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
283,678,circle,True,66,24,0,1,21,0.0087927677031984,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue rectangle,hg04,24,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
284,679,circle,True,67,24,0,2,20,0.0018288748924533,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg04,24,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
285,680,circle,True,68,24,0,1,21,0.0082906549301924,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg04,24,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
286,681,circle,True,69,24,0,1,21,0.0065927341167935,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg04,24,False,False,False,0.9671717171717172,0.6473469387755102,1.0,1.0,True
287,968,true,True,0,0,1,16,6,0.3564421919421647,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg01,0,True,False,True,0.9971590909090908,1.0,1.0,1.0,False
288,969,true,True,1,1,1,14,8,0.4749728658866843,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg01,1,True,False,True,0.9971590909090908,1.0,1.0,1.0,False
289,970,true,True,2,2,1,5,17,0.5797109561979141,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg01,2,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
290,971,true,True,3,2,1,22,0,0.5999404287263131,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg01,2,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
291,972,true,True,4,2,1,1,21,0.5978018693964486,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg01,2,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
292,973,true,True,5,2,1,21,1,0.5864830730599805,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg01,2,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
293,974,true,True,6,3,1,18,4,0.8583975171284237,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg01,3,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
294,975,true,True,7,3,1,11,11,0.6752903806825543,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg01,3,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
295,976,true,True,8,3,1,22,0,0.8546957878901366,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg01,3,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
296,977,true,True,9,3,1,22,0,0.9038000386379962,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg01,3,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
297,978,true,True,10,4,1,22,0,0.8689251794479559,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg01,4,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
298,979,true,True,11,5,1,21,1,0.8188312027326674,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,5,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
299,980,true,True,12,5,1,20,2,0.7648279939641042,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg01,5,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
300,981,true,True,13,5,1,22,0,0.8588563406214007,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg01,5,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
301,982,true,True,14,6,1,22,0,0.8844442012325544,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg01,6,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
302,983,true,True,15,7,1,22,0,0.9416000768222827,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg01,7,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
303,984,true,True,16,7,1,22,0,0.7894579328255986,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg01,7,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
304,985,true,True,17,8,1,22,0,0.9688369942246026,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg01,8,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
305,986,true,True,18,9,1,22,0,0.9089024538925514,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg01,9,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
306,987,true,True,19,9,1,22,0,0.9594156774943484,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,9,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
307,988,true,True,20,10,1,22,0,0.8004136175937901,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg01,10,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
308,989,true,True,21,10,1,22,0,0.9893277573440856,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg01,10,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
309,990,true,True,22,10,1,22,0,0.8475425914865581,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg01,10,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
310,991,true,True,23,11,1,22,0,0.9884681562797368,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg01,11,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
311,992,true,True,24,11,1,22,0,0.9099007235741964,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg01,11,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
312,993,true,True,25,12,1,22,0,0.962618947020246,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg01,12,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
313,994,true,True,26,12,1,22,0,0.9666651469527778,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,12,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
314,995,true,True,27,12,1,22,0,0.8715151486933336,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg01,12,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
315,996,true,True,28,12,1,22,0,0.9388682243196625,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg01,12,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
316,997,true,True,29,13,1,22,0,0.9937503809564988,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg01,13,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
317,998,true,True,30,13,1,22,0,0.9628425546460448,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg01,13,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
318,999,true,True,31,13,1,22,0,0.9606663278442512,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg01,13,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
319,1000,true,True,32,13,1,22,0,0.8957193122669195,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg01,13,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
320,1001,true,True,33,13,1,22,0,0.989802824276012,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg01,13,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
321,1002,true,True,34,14,1,22,0,0.9462354371410128,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg01,14,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
322,1003,true,True,35,14,1,22,0,0.9445644567124418,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg01,14,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
323,1004,true,True,36,15,1,22,0,0.929282480963934,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg01,15,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
324,1005,true,True,37,16,1,22,0,0.984390311260654,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg01,16,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
325,1006,true,True,38,16,1,22,0,0.9171542738815788,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg01,16,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
326,1007,true,True,39,17,1,22,0,0.9583123226454971,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg01,17,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
327,1008,true,True,40,17,1,22,0,0.9793495723913564,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg01,17,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
328,1009,true,True,41,18,1,22,0,0.8371431387093934,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg01,18,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
329,1010,true,True,42,18,1,21,1,0.9653050290577312,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg01,18,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
330,1011,true,True,43,18,1,22,0,0.9866950166393736,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg01,18,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
331,1012,true,True,44,18,1,21,1,0.9867419865738613,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg01,18,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
332,1013,true,True,45,18,1,21,1,0.9780177078588393,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,18,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
333,1014,true,True,46,19,1,22,0,0.9858111981873208,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg01,19,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
334,1015,true,True,47,19,1,22,0,0.9853886724017684,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg01,19,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
335,1016,true,True,48,19,1,22,0,0.9595176759186188,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg01,19,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
336,1017,true,True,49,19,1,22,0,0.9560257564945686,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg01,19,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
337,1018,true,True,50,19,1,22,0,0.919754547913385,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg01,19,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
338,1019,true,True,51,20,1,22,0,0.9907881107194498,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg01,20,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
339,1020,true,True,52,20,1,22,0,0.9687664329404696,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg01,20,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
340,1021,true,True,53,20,1,22,0,0.9883452624694656,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg01,20,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
341,1022,true,True,54,20,1,22,0,0.9902660350736596,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,20,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
342,1023,true,True,55,20,1,22,0,0.9839684933335774,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg01,20,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
343,1024,true,True,56,21,1,22,0,0.962323201395975,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg01,21,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
344,1025,true,True,57,22,1,21,1,0.9939884962511768,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg01,22,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
345,1026,true,True,58,22,1,22,0,0.9842325479723968,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg01,22,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
346,1027,true,True,59,23,1,22,0,0.977667314621044,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg01,23,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
347,1028,true,True,60,23,1,22,0,0.992432954351898,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg01,23,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
348,1029,true,True,61,24,1,22,0,0.9830421363103596,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg01,24,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
349,1030,true,True,62,24,1,22,0,0.9799125922238544,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg01,24,True,True,True,0.9971590909090908,1.0,1.0,1.0,True
350,1412,(circle or blue) or  (triangle and green),True,0,0,1,11,10,0.4718217212345052,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg84,0,True,False,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,False
351,1413,(circle or blue) or  (triangle and green),True,1,1,1,14,7,0.51706834880531,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg84,1,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
352,1414,(circle or blue) or  (triangle and green),True,2,1,0,2,19,0.4704949543796601,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg84,1,False,False,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,False
353,1415,(circle or blue) or  (triangle and green),True,3,1,0,3,18,0.4615880674680283,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg84,1,False,False,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,False
354,1416,(circle or blue) or  (triangle and green),True,4,2,1,0,21,0.4061726863820922,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue rectangle,hg84,2,True,False,False,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,True
355,1417,(circle or blue) or  (triangle and green),True,5,2,1,2,19,0.500509959137389,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg84,2,True,True,True,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,True
356,1418,(circle or blue) or  (triangle and green),True,6,2,1,19,2,0.6922908555752655,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small blue circle,hg84,2,True,True,True,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,True
357,1419,(circle or blue) or  (triangle and green),True,7,3,1,17,4,0.6181737124198889,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green circle,hg84,3,True,True,False,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,False
358,1420,(circle or blue) or  (triangle and green),True,8,3,1,20,1,0.8344992624564611,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium blue rectangle,hg84,3,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
359,1421,(circle or blue) or  (triangle and green),True,9,3,1,18,3,0.8721069675033277,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small blue circle,hg84,3,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
360,1422,(circle or blue) or  (triangle and green),True,10,3,1,14,7,0.5776347743252472,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small green circle,hg84,3,True,True,False,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,False
361,1423,(circle or blue) or  (triangle and green),True,11,4,1,21,0,0.9749943874884364,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg84,4,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
362,1424,(circle or blue) or  (triangle and green),True,12,4,1,6,15,0.6132665554879395,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg84,4,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
363,1425,(circle or blue) or  (triangle and green),True,13,4,0,4,17,0.5223420077896889,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg84,4,False,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
364,1426,(circle or blue) or  (triangle and green),True,14,4,1,21,0,0.9735072139926614,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg84,4,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
365,1427,(circle or blue) or  (triangle and green),True,15,5,1,8,13,0.5907277918926183,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow circle,hg84,5,True,True,False,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,False
366,1428,(circle or blue) or  (triangle and green),True,16,5,1,21,0,0.9805006894114284,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg84,5,True,True,True,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
367,1429,(circle or blue) or  (triangle and green),True,17,5,1,21,0,0.8981010907191375,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg84,5,True,True,True,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
368,1430,(circle or blue) or  (triangle and green),True,18,6,0,12,9,0.6013466802378388,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg84,6,False,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
369,1431,(circle or blue) or  (triangle and green),True,19,6,1,20,1,0.9219620927475488,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg84,6,True,True,True,0.8862433862433864,0.512001586986709,0.5774647887323944,0.5774647887323944,True
370,1432,(circle or blue) or  (triangle and green),True,20,7,0,1,20,0.2412789492187812,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg84,7,False,False,False,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
371,1433,(circle or blue) or  (triangle and green),True,21,7,1,18,3,0.557111735387366,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg84,7,True,True,True,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
372,1434,(circle or blue) or  (triangle and green),True,22,7,1,19,2,0.9909491213726368,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg84,7,True,True,True,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
373,1435,(circle or blue) or  (triangle and green),True,23,8,0,4,17,0.291048536379094,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg84,8,False,False,False,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,True
374,1436,(circle or blue) or  (triangle and green),True,24,9,1,17,4,0.5296786690684029,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow circle,hg84,9,True,True,False,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,False
375,1437,(circle or blue) or  (triangle and green),True,25,10,0,2,19,0.2126312617585881,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow rectangle,hg84,10,False,False,False,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,True
376,1438,(circle or blue) or  (triangle and green),True,26,10,0,5,16,0.3124062632289223,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg84,10,False,False,False,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,True
377,1439,(circle or blue) or  (triangle and green),True,27,10,0,5,16,0.3942888660468497,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow triangle,hg84,10,False,False,True,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,False
378,1440,(circle or blue) or  (triangle and green),True,28,10,0,5,16,0.4271283319967551,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg84,10,False,False,True,0.8862433862433864,0.512001586986709,0.7746478873239436,0.7746478873239436,False
379,1441,(circle or blue) or  (triangle and green),True,29,11,0,2,19,0.0492617392569627,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow rectangle,hg84,11,False,False,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,True
380,1442,(circle or blue) or  (triangle and green),True,30,11,0,3,18,0.0953072194172364,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green rectangle,hg84,11,False,False,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,True
381,1443,(circle or blue) or  (triangle and green),True,31,11,0,3,18,0.0519250003752631,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg84,11,False,False,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,True
382,1444,(circle or blue) or  (triangle and green),True,32,12,1,18,3,0.7017401372119138,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue triangle,hg84,12,True,True,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,False
383,1445,(circle or blue) or  (triangle and green),True,33,12,1,18,3,0.6968691165182008,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg84,12,True,True,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,False
384,1446,(circle or blue) or  (triangle and green),True,34,12,1,18,3,0.5572149358960132,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue rectangle,hg84,12,True,True,False,0.8862433862433864,0.512001586986709,0.7464788732394366,0.7464788732394366,False
385,1447,(circle or blue) or  (triangle and green),True,35,13,1,20,1,0.9728601056840488,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium blue circle,hg84,13,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
386,1448,(circle or blue) or  (triangle and green),True,36,14,1,18,3,0.3611683153358171,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium green triangle,hg84,14,True,False,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,False
387,1449,(circle or blue) or  (triangle and green),True,37,14,1,21,0,0.9742142996228722,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small blue circle,hg84,14,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
388,1450,(circle or blue) or  (triangle and green),True,38,14,1,21,0,0.9809191097305074,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",large blue circle,hg84,14,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
389,1451,(circle or blue) or  (triangle and green),True,39,15,0,0,21,0.2538971155040599,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg84,15,False,False,True,0.8862433862433864,0.512001586986709,0.7887323943661971,0.7887323943661971,False
390,1452,(circle or blue) or  (triangle and green),True,40,16,0,2,19,0.0654717368481669,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small yellow rectangle,hg84,16,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
391,1453,(circle or blue) or  (triangle and green),True,41,16,0,2,19,0.2702014838165496,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium yellow triangle,hg84,16,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
392,1454,(circle or blue) or  (triangle and green),True,42,16,1,17,4,0.5350712620644344,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium green triangle,hg84,16,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
393,1455,(circle or blue) or  (triangle and green),True,43,16,0,1,20,0.13159674549604,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium green rectangle,hg84,16,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
394,1456,(circle or blue) or  (triangle and green),True,44,16,1,15,6,0.597818283790616,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",large yellow circle,hg84,16,True,True,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,False
395,1457,(circle or blue) or  (triangle and green),True,45,17,1,18,3,0.7028674535242772,"""λx.apply7(not,apply7(apply9(or,apply1(rectangle,x.o)),apply1(apply6(compose8(and,yellow),apply1(triangle,x.o)),x.o)))""
",not (rectangle or (yellow and triangle)),"def is_rule(obj):
    return not (obj.rectangle or (obj.yellow and obj.triangle))",small blue rectangle,hg84,17,True,True,False,0.8862433862433864,0.512001586986709,0.9014084507042254,0.9014084507042254,False
396,1458,(circle or blue) or  (triangle and green),True,46,17,0,0,21,0.0195863052917957,"""λx.apply7(not,apply7(apply9(or,apply1(rectangle,x.o)),apply1(apply6(compose8(and,yellow),apply1(triangle,x.o)),x.o)))""
",not (rectangle or (yellow and triangle)),"def is_rule(obj):
    return not (obj.rectangle or (obj.yellow and obj.triangle))",small yellow rectangle,hg84,17,False,False,False,0.8862433862433864,0.512001586986709,0.9014084507042254,0.9014084507042254,True
397,1459,(circle or blue) or  (triangle and green),True,47,17,0,1,20,0.0565311268167079,"""λx.apply7(not,apply7(apply9(or,apply1(rectangle,x.o)),apply1(apply6(compose8(and,yellow),apply1(triangle,x.o)),x.o)))""
",not (rectangle or (yellow and triangle)),"def is_rule(obj):
    return not (obj.rectangle or (obj.yellow and obj.triangle))",large green rectangle,hg84,17,False,False,False,0.8862433862433864,0.512001586986709,0.9014084507042254,0.9014084507042254,True
398,1460,(circle or blue) or  (triangle and green),True,48,17,0,3,18,0.1725531952859,"""λx.apply7(not,apply7(apply9(or,apply1(rectangle,x.o)),apply1(apply6(compose8(and,yellow),apply1(triangle,x.o)),x.o)))""
",not (rectangle or (yellow and triangle)),"def is_rule(obj):
    return not (obj.rectangle or (obj.yellow and obj.triangle))",small yellow triangle,hg84,17,False,False,False,0.8862433862433864,0.512001586986709,0.9014084507042254,0.9014084507042254,True
399,1461,(circle or blue) or  (triangle and green),True,49,18,0,1,20,0.0078722223267959,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small yellow rectangle,hg84,18,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
400,1462,(circle or blue) or  (triangle and green),True,50,18,0,0,21,0.0266187966590223,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small green rectangle,hg84,18,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
401,1463,(circle or blue) or  (triangle and green),True,51,18,1,20,1,0.990110243451113,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small blue circle,hg84,18,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
402,1464,(circle or blue) or  (triangle and green),True,52,18,1,19,2,0.4528119024986381,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium green triangle,hg84,18,True,False,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,False
403,1465,(circle or blue) or  (triangle and green),True,53,19,0,2,19,0.1226766256410201,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small yellow triangle,hg84,19,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
404,1466,(circle or blue) or  (triangle and green),True,54,19,1,17,4,0.6576037376594285,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium yellow circle,hg84,19,True,True,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,False
405,1467,(circle or blue) or  (triangle and green),True,55,19,1,18,3,0.8984784841367172,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",large green circle,hg84,19,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
406,1468,(circle or blue) or  (triangle and green),True,56,20,1,21,0,0.9933699512040448,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",large blue circle,hg84,20,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
407,1469,(circle or blue) or  (triangle and green),True,57,20,1,19,2,0.881827220710079,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",small yellow circle,hg84,20,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
408,1470,(circle or blue) or  (triangle and green),True,58,20,1,18,3,0.8250813300567187,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",medium blue rectangle,hg84,20,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
409,1471,(circle or blue) or  (triangle and green),True,59,21,1,18,3,0.9182223804006072,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",large blue rectangle,hg84,21,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
410,1472,(circle or blue) or  (triangle and green),True,60,21,0,2,19,0.0509103928210379,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",large green rectangle,hg84,21,False,False,False,0.8862433862433864,0.512001586986709,1.0,1.0,True
411,1473,(circle or blue) or  (triangle and green),True,61,21,0,2,19,0.0360880570469817,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",small green rectangle,hg84,21,False,False,False,0.8862433862433864,0.512001586986709,1.0,1.0,True
412,1474,(circle or blue) or  (triangle and green),True,62,21,0,3,18,0.0615176931236192,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",small yellow triangle,hg84,21,False,False,False,0.8862433862433864,0.512001586986709,1.0,1.0,True
413,1475,(circle or blue) or  (triangle and green),True,63,22,0,1,20,0.0059567662564177,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",small yellow rectangle,hg84,22,False,False,False,0.8862433862433864,0.512001586986709,1.0,1.0,True
414,1476,(circle or blue) or  (triangle and green),True,64,23,1,17,4,0.3726012451987799,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",medium green triangle,hg84,23,True,False,True,0.8862433862433864,0.512001586986709,1.0,1.0,False
415,1477,(circle or blue) or  (triangle and green),True,65,23,1,20,1,0.9244730175147424,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",large blue rectangle,hg84,23,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
416,1478,(circle or blue) or  (triangle and green),True,66,23,0,1,20,0.0363583591879432,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",small yellow triangle,hg84,23,False,False,False,0.8862433862433864,0.512001586986709,1.0,1.0,True
417,1479,(circle or blue) or  (triangle and green),True,67,23,1,20,1,0.9906427905766576,"""λx.apply1(compose11(compose8(or,compose11(compose8(and,green),triangle)),compose2(apply9(or,apply1(circle,x.o)),blue)),x.o)""
",(circle or blue) or (green and triangle),"def is_rule(obj):
    return (obj.circle or obj.blue) or (obj.green and obj.triangle)",large blue circle,hg84,23,True,True,True,0.8862433862433864,0.512001586986709,1.0,1.0,True
418,1480,(circle or blue) or  (triangle and green),True,68,24,1,17,4,0.965621809122922,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small blue triangle,hg84,24,True,True,True,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
419,1481,(circle or blue) or  (triangle and green),True,69,24,0,3,18,0.0080032323450041,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",small yellow rectangle,hg84,24,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
420,1482,(circle or blue) or  (triangle and green),True,70,24,0,3,18,0.0869573148495419,"""λx.apply1(compose2(not,compose11(compose8(or,compose11(compose8(and,rectangle),green)),yellow)),x.o)""
",not ((rectangle and green) or yellow),"def is_rule(obj):
    return not ((obj.rectangle and obj.green) or obj.yellow)",medium yellow triangle,hg84,24,False,False,False,0.8862433862433864,0.512001586986709,0.9295774647887324,0.9295774647887324,True
421,1637,(circle and blue) or (triangle and green),True,0,0,0,13,9,0.450513688943829,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg83,0,False,False,True,0.9545454545454546,0.593354671543972,0.2839506172839506,0.2839506172839506,False
422,1638,(circle and blue) or (triangle and green),True,1,0,0,12,10,0.471889476902561,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg83,0,False,False,True,0.9545454545454546,0.593354671543972,0.2839506172839506,0.2839506172839506,False
423,1639,(circle and blue) or (triangle and green),True,2,1,1,5,17,0.2860449093777788,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg83,1,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
424,1640,(circle and blue) or (triangle and green),True,3,1,0,6,16,0.3230791045533578,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg83,1,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
425,1641,(circle and blue) or (triangle and green),True,4,1,1,14,8,0.4915287560880869,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg83,1,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
426,1642,(circle and blue) or (triangle and green),True,5,1,1,5,17,0.3490002346818528,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg83,1,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
427,1643,(circle and blue) or (triangle and green),True,6,2,0,6,16,0.3600360680877656,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green rectangle,hg83,2,False,False,False,0.9545454545454546,0.593354671543972,0.5061728395061729,0.5061728395061729,True
428,1644,(circle and blue) or (triangle and green),True,7,2,0,12,10,0.4691459531402415,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg83,2,False,False,True,0.9545454545454546,0.593354671543972,0.5061728395061729,0.5061728395061729,False
429,1645,(circle and blue) or (triangle and green),True,8,2,0,12,10,0.6220415948845356,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow circle,hg83,2,False,True,True,0.9545454545454546,0.593354671543972,0.5061728395061729,0.5061728395061729,True
430,1646,(circle and blue) or (triangle and green),True,9,2,0,7,15,0.4121758211019823,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow rectangle,hg83,2,False,False,False,0.9545454545454546,0.593354671543972,0.5061728395061729,0.5061728395061729,True
431,1647,(circle and blue) or (triangle and green),True,10,3,1,17,5,0.2415550705355826,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",large green triangle,hg83,3,True,False,True,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,False
432,1648,(circle and blue) or (triangle and green),True,11,3,0,8,14,0.3552486408395907,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",large blue triangle,hg83,3,False,False,True,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,False
433,1649,(circle and blue) or (triangle and green),True,12,3,1,19,3,0.6117823564122772,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",large blue circle,hg83,3,True,True,True,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,True
434,1650,(circle and blue) or (triangle and green),True,13,4,0,5,17,0.2627930860249989,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",large blue rectangle,hg83,4,False,False,False,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,True
435,1651,(circle and blue) or (triangle and green),True,14,4,0,2,20,0.3813813953362341,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",medium yellow circle,hg83,4,False,False,False,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,True
436,1652,(circle and blue) or (triangle and green),True,15,4,0,2,20,0.2731877802007147,"""λx.apply1(compose2(not,compose11(compose8(or,rectangle),yellow)),x.o)""
",not (rectangle or yellow),"def is_rule(obj):
    return not (obj.rectangle or obj.yellow)",large blue triangle,hg83,4,False,False,True,0.9545454545454546,0.593354671543972,0.7777777777777778,0.7777777777777778,False
437,1653,(circle and blue) or (triangle and green),True,16,5,0,0,22,0.1687634815168621,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow circle,hg83,5,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
438,1654,(circle and blue) or (triangle and green),True,17,6,0,1,21,0.1268241579394953,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg83,6,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
439,1655,(circle and blue) or (triangle and green),True,18,6,0,3,19,0.1614493417911262,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg83,6,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
440,1656,(circle and blue) or (triangle and green),True,19,6,0,4,18,0.2105255076021421,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg83,6,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
441,1657,(circle and blue) or (triangle and green),True,20,6,0,2,20,0.1404422101132922,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg83,6,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
442,1658,(circle and blue) or (triangle and green),True,21,6,0,0,22,0.1363187447564087,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg83,6,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
443,1659,(circle and blue) or (triangle and green),True,22,7,0,1,21,0.0320439404831631,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg83,7,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
444,1660,(circle and blue) or (triangle and green),True,23,8,0,0,22,0.0648383208831546,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg83,8,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
445,1661,(circle and blue) or (triangle and green),True,24,8,0,0,22,0.1549926536010843,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg83,8,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
446,1662,(circle and blue) or (triangle and green),True,25,9,0,1,21,0.0930987310905493,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg83,9,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
447,1663,(circle and blue) or (triangle and green),True,26,9,0,4,18,0.1745551379315202,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg83,9,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
448,1664,(circle and blue) or (triangle and green),True,27,9,0,1,21,0.1914469719521321,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg83,9,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
449,1665,(circle and blue) or (triangle and green),True,28,10,1,19,3,0.2442309067430414,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg83,10,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
450,1666,(circle and blue) or (triangle and green),True,29,10,0,0,22,0.0790791750569042,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg83,10,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
451,1667,(circle and blue) or (triangle and green),True,30,10,0,1,21,0.1379357065549129,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg83,10,False,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
452,1668,(circle and blue) or (triangle and green),True,31,10,1,14,8,0.2245226381066913,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg83,10,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
453,1669,(circle and blue) or (triangle and green),True,32,10,1,19,3,0.4368997925067787,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg83,10,True,False,False,0.9545454545454546,0.593354671543972,0.7160493827160493,0.7160493827160493,True
454,1670,(circle and blue) or (triangle and green),True,33,11,0,2,20,0.2569731780426991,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green rectangle,hg83,11,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
455,1671,(circle and blue) or (triangle and green),True,34,11,0,2,20,0.0221891498057402,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium yellow triangle,hg83,11,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
456,1672,(circle and blue) or (triangle and green),True,35,11,0,2,20,0.0701516251976954,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large yellow triangle,hg83,11,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
457,1673,(circle and blue) or (triangle and green),True,36,12,1,18,4,0.4174532298230815,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small green triangle,hg83,12,True,False,True,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
458,1674,(circle and blue) or (triangle and green),True,37,12,0,4,18,0.1971681119081267,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green circle,hg83,12,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
459,1675,(circle and blue) or (triangle and green),True,38,12,1,17,5,0.4650901392850528,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium blue circle,hg83,12,True,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
460,1676,(circle and blue) or (triangle and green),True,39,13,0,2,20,0.1447735316766056,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue triangle,hg83,13,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
461,1677,(circle and blue) or (triangle and green),True,40,13,0,1,21,0.1007372378472837,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green circle,hg83,13,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
462,1678,(circle and blue) or (triangle and green),True,41,13,1,19,3,0.6268146807012726,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue circle,hg83,13,True,True,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
463,1679,(circle and blue) or (triangle and green),True,42,14,1,21,1,0.7978720629087092,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium blue circle,hg83,14,True,True,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
464,1680,(circle and blue) or (triangle and green),True,43,14,0,2,20,0.0439047081549688,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue triangle,hg83,14,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
465,1681,(circle and blue) or (triangle and green),True,44,14,0,3,19,0.0384311008192526,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small green circle,hg83,14,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
466,1682,(circle and blue) or (triangle and green),True,45,14,0,0,22,0.0680592665747781,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large yellow rectangle,hg83,14,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
467,1683,(circle and blue) or (triangle and green),True,46,15,0,1,21,0.0101026738869904,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large yellow triangle,hg83,15,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
468,1684,(circle and blue) or (triangle and green),True,47,15,0,0,22,0.0128267569914441,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow triangle,hg83,15,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
469,1685,(circle and blue) or (triangle and green),True,48,16,0,1,21,0.004939422026382,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow triangle,hg83,16,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
470,1686,(circle and blue) or (triangle and green),True,49,16,1,19,3,0.7875972362542142,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium blue circle,hg83,16,True,True,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
471,1687,(circle and blue) or (triangle and green),True,50,17,0,0,22,0.0884695231336536,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small green rectangle,hg83,17,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
472,1688,(circle and blue) or (triangle and green),True,51,17,0,0,22,0.111307637869686,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large blue rectangle,hg83,17,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
473,1689,(circle and blue) or (triangle and green),True,52,17,0,3,19,0.0962037650893989,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium blue triangle,hg83,17,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
474,1690,(circle and blue) or (triangle and green),True,53,17,1,20,2,0.8576162277400953,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small blue circle,hg83,17,True,True,True,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
475,1691,(circle and blue) or (triangle and green),True,54,18,0,0,22,0.0181803221272502,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small blue triangle,hg83,18,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
476,1692,(circle and blue) or (triangle and green),True,55,18,1,18,4,0.1001902412059507,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small green triangle,hg83,18,True,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
477,1693,(circle and blue) or (triangle and green),True,56,18,0,1,21,0.0279396742561175,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium blue rectangle,hg83,18,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
478,1694,(circle and blue) or (triangle and green),True,57,18,0,0,22,0.0156296376441105,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large blue triangle,hg83,18,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
479,1695,(circle and blue) or (triangle and green),True,58,18,0,0,22,0.016085388988813,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow rectangle,hg83,18,False,False,False,0.9545454545454546,0.593354671543972,0.8765432098765432,0.8765432098765432,True
480,1696,(circle and blue) or (triangle and green),True,59,19,0,1,21,0.1919251172730582,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",large yellow circle,hg83,19,False,False,False,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
481,1697,(circle and blue) or (triangle and green),True,60,19,1,19,3,0.3445948975842156,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",large green triangle,hg83,19,True,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
482,1698,(circle and blue) or (triangle and green),True,61,19,0,2,20,0.0615804701864135,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",large green circle,hg83,19,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
483,1699,(circle and blue) or (triangle and green),True,62,20,1,19,3,0.6257677225316911,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium green triangle,hg83,20,True,True,True,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
484,1700,(circle and blue) or (triangle and green),True,63,20,1,20,2,0.6234026855667025,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green triangle,hg83,20,True,True,True,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
485,1701,(circle and blue) or (triangle and green),True,64,20,0,0,22,0.0098294198452322,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium yellow triangle,hg83,20,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
486,1702,(circle and blue) or (triangle and green),True,65,20,0,0,22,0.0119553987883591,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large yellow triangle,hg83,20,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
487,1703,(circle and blue) or (triangle and green),True,66,20,1,22,0,0.6603443280797591,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large blue circle,hg83,20,True,True,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
488,1704,(circle and blue) or (triangle and green),True,67,21,0,1,21,0.0175605438154207,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",small blue triangle,hg83,21,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
489,1705,(circle and blue) or (triangle and green),True,68,22,0,1,21,0.1187565030421637,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium yellow circle,hg83,22,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
490,1706,(circle and blue) or (triangle and green),True,69,22,1,19,3,0.7088069483944536,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue circle,hg83,22,True,True,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,False
491,1707,(circle and blue) or (triangle and green),True,70,22,0,1,21,0.0069865029369111,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow triangle,hg83,22,False,False,False,0.9545454545454546,0.593354671543972,0.8395061728395061,0.8395061728395061,True
492,1708,(circle and blue) or (triangle and green),True,71,23,0,0,22,0.0327244500183496,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",medium green circle,hg83,23,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
493,1709,(circle and blue) or (triangle and green),True,72,23,1,22,0,0.8783964147962706,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",small blue circle,hg83,23,True,True,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
494,1710,(circle and blue) or (triangle and green),True,73,23,1,21,1,0.565602651596464,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",small green triangle,hg83,23,True,True,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
495,1711,(circle and blue) or (triangle and green),True,74,23,0,0,22,0.0230202708034994,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",medium blue triangle,hg83,23,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
496,1712,(circle and blue) or (triangle and green),True,75,23,0,1,21,0.0151963051308712,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",medium yellow rectangle,hg83,23,False,False,False,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
497,1713,(circle and blue) or (triangle and green),True,76,24,1,21,1,0.9188680666945857,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",medium blue circle,hg83,24,True,True,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
498,1714,(circle and blue) or (triangle and green),True,77,24,0,1,21,0.012332433759866,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",small yellow rectangle,hg83,24,False,False,False,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
499,1715,(circle and blue) or (triangle and green),True,78,24,0,0,22,0.0168010174769506,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",medium yellow rectangle,hg83,24,False,False,False,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,True
500,1716,(circle and blue) or (triangle and green),True,79,24,0,1,21,0.0055822477398805,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",small yellow triangle,hg83,24,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
501,1717,(circle and blue) or (triangle and green),True,80,24,0,0,22,0.3642423264660692,"""λx.apply7(apply9(compose5(and,not),apply1(compose11(compose7(or,yellow),rectangle),x.o)),apply1(compose11(compose8(iff,green),triangle),x.o))""
",not ((yellow or rectangle) and (green iff triangle)),"def is_rule(obj):
    return not((obj.rectangle or obj.yellow) and ((obj.green and obj.triangle) or (not obj.green and not obj.triangle)))",large green rectangle,hg83,24,False,False,True,0.9545454545454546,0.593354671543972,0.5185185185185185,0.5185185185185185,False
502,1718,medium or small,True,0,0,1,13,9,0.4469010387829257,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg23,0,True,False,True,0.9586776859504134,0.5457003785830179,0.6511627906976745,0.6511627906976745,False
503,1719,medium or small,True,1,1,0,16,6,0.6458586491356754,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg23,1,False,True,True,0.9586776859504134,0.5457003785830179,0.6511627906976745,0.6511627906976745,True
504,1720,medium or small,True,2,1,1,16,6,0.5892623389077016,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg23,1,True,True,True,0.9586776859504134,0.5457003785830179,0.6511627906976745,0.6511627906976745,True
505,1721,medium or small,True,3,1,0,3,19,0.5011446701455498,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg23,1,False,True,True,0.9586776859504134,0.5457003785830179,0.6511627906976745,0.6511627906976745,True
506,1722,medium or small,True,4,1,0,4,18,0.5249992014948929,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg23,1,False,True,True,0.9586776859504134,0.5457003785830179,0.6511627906976745,0.6511627906976745,True
507,1723,medium or small,True,5,2,0,2,20,0.2341811535326314,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow triangle,hg23,2,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
508,1724,medium or small,True,6,2,1,10,12,0.4180386397808888,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow rectangle,hg23,2,True,False,True,0.9586776859504134,0.5457003785830179,1.0,1.0,False
509,1725,medium or small,True,7,2,0,2,20,0.2044477655377932,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg23,2,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
510,1726,medium or small,True,8,3,0,1,21,0.1662140688996487,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green circle,hg23,3,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
511,1727,medium or small,True,9,3,1,18,4,0.5476068996127877,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue triangle,hg23,3,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
512,1728,medium or small,True,10,3,0,2,20,0.1338207845949455,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue circle,hg23,3,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
513,1729,medium or small,True,11,3,1,19,3,0.6186292298873468,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow circle,hg23,3,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
514,1730,medium or small,True,12,4,1,20,2,0.7655469137639556,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg23,4,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
515,1731,medium or small,True,13,4,1,18,4,0.7709378754933595,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue rectangle,hg23,4,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
516,1732,medium or small,True,14,4,0,1,21,0.0616026149015169,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green rectangle,hg23,4,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
517,1733,medium or small,True,15,4,0,1,21,0.0323326174276417,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green circle,hg23,4,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
518,1734,medium or small,True,16,4,1,16,6,0.8567102113323699,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue circle,hg23,4,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
519,1735,medium or small,True,17,5,0,3,19,0.0535455791391541,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green triangle,hg23,5,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
520,1736,medium or small,True,18,6,1,20,2,0.8634306398803346,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue circle,hg23,6,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
521,1737,medium or small,True,19,6,0,1,21,0.0403255242606519,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow triangle,hg23,6,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
522,1738,medium or small,True,20,7,1,17,5,0.773314425814533,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg23,7,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
523,1739,medium or small,True,21,7,1,20,2,0.8494373931571317,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue circle,hg23,7,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
524,1740,medium or small,True,22,7,1,19,3,0.8186757652242704,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue triangle,hg23,7,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
525,1741,medium or small,True,23,8,1,21,1,0.954166019793888,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green circle,hg23,8,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
526,1742,medium or small,True,24,8,0,0,22,0.0873961391234843,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue rectangle,hg23,8,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
527,1743,medium or small,True,25,9,1,19,3,0.9550614317554392,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow circle,hg23,9,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
528,1744,medium or small,True,26,9,1,18,4,0.9439219426196814,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow rectangle,hg23,9,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
529,1745,medium or small,True,27,9,1,19,3,0.9025544125181568,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg23,9,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
530,1746,medium or small,True,28,9,1,21,1,0.9071124422697494,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg23,9,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
531,1747,medium or small,True,29,10,0,1,21,0.0375523049649473,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg23,10,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
532,1748,medium or small,True,30,10,0,2,20,0.0318375961003312,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue circle,hg23,10,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
533,1749,medium or small,True,31,10,1,22,0,0.9826323835309267,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg23,10,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
534,1750,medium or small,True,32,10,1,21,1,0.9887344244560836,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue triangle,hg23,10,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
535,1751,medium or small,True,33,11,1,22,0,0.989462634423603,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green circle,hg23,11,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
536,1752,medium or small,True,34,11,0,1,21,0.0160808465006994,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green triangle,hg23,11,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
537,1753,medium or small,True,35,12,1,20,2,0.9880972438096478,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue rectangle,hg23,12,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
538,1754,medium or small,True,36,12,1,22,0,0.9935507540290018,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue circle,hg23,12,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
539,1755,medium or small,True,37,12,1,21,1,0.98580806143309,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow triangle,hg23,12,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
540,1756,medium or small,True,38,12,1,21,1,0.9877541013910331,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green circle,hg23,12,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
541,1757,medium or small,True,39,13,1,22,0,0.9974172027389158,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow circle,hg23,13,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
542,1758,medium or small,True,40,13,0,2,20,0.0166202812873734,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green rectangle,hg23,13,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
543,1759,medium or small,True,41,13,0,2,20,0.0133939181984032,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow circle,hg23,13,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
544,1760,medium or small,True,42,14,1,22,0,0.9980977216703196,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow rectangle,hg23,14,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
545,1761,medium or small,True,43,14,0,1,21,0.0030811640730235,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow circle,hg23,14,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
546,1762,medium or small,True,44,14,1,22,0,0.9979843554164062,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg23,14,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
547,1763,medium or small,True,45,14,0,2,20,0.010241059821169,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue triangle,hg23,14,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
548,1764,medium or small,True,46,15,1,22,0,0.984789175853848,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green circle,hg23,15,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
549,1765,medium or small,True,47,16,0,1,21,0.0102419516616691,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green rectangle,hg23,16,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
550,1766,medium or small,True,48,16,1,19,3,0.9963866886346296,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green circle,hg23,16,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
551,1767,medium or small,True,49,16,1,19,3,0.9960314746034556,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue circle,hg23,16,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
552,1768,medium or small,True,50,16,1,22,0,0.9932099976612108,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue circle,hg23,16,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
553,1769,medium or small,True,51,16,0,1,21,0.0067215983802952,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green circle,hg23,16,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
554,1770,medium or small,True,52,17,1,22,0,0.9943717788565892,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg23,17,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
555,1771,medium or small,True,53,17,1,22,0,0.995743154266961,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow circle,hg23,17,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
556,1772,medium or small,True,54,17,0,1,21,0.0024777136372904,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green rectangle,hg23,17,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
557,1773,medium or small,True,55,17,1,22,0,0.9955238725403888,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg23,17,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
558,1774,medium or small,True,56,18,1,22,0,0.998602255707965,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg23,18,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
559,1775,medium or small,True,57,18,1,21,1,0.9985086155335238,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue rectangle,hg23,18,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
560,1776,medium or small,True,58,18,1,20,2,0.9982410503573645,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg23,18,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
561,1777,medium or small,True,59,18,0,1,21,0.0026907854735327,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue rectangle,hg23,18,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
562,1778,medium or small,True,60,18,1,22,0,0.9987349526433036,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg23,18,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
563,1779,medium or small,True,61,19,1,19,3,0.9930283960097768,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow triangle,hg23,19,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
564,1780,medium or small,True,62,19,1,22,0,0.9951105276658154,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg23,19,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
565,1781,medium or small,True,63,19,1,19,3,0.9930969183301384,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue triangle,hg23,19,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
566,1782,medium or small,True,64,19,1,18,4,0.9930660363511378,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg23,19,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
567,1783,medium or small,True,65,20,0,1,21,0.0030599268498008,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue circle,hg23,20,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
568,1784,medium or small,True,66,20,0,1,21,0.0064982561198121,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large blue triangle,hg23,20,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
569,1785,medium or small,True,67,20,1,22,0,0.9994923843421474,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg23,20,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
570,1786,medium or small,True,68,20,1,22,0,0.9988769156664148,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green circle,hg23,20,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
571,1787,medium or small,True,69,21,1,22,0,0.9997300364528882,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg23,21,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
572,1788,medium or small,True,70,21,0,1,21,0.000697013471381,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green circle,hg23,21,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
573,1789,medium or small,True,71,21,1,20,2,0.9995990827635524,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow rectangle,hg23,21,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
574,1790,medium or small,True,72,22,1,20,2,0.9997465733531498,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg23,22,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
575,1791,medium or small,True,73,22,1,20,2,0.9996528230440161,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg23,22,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
576,1792,medium or small,True,74,22,1,21,1,0.9997258297332792,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg23,22,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
577,1793,medium or small,True,75,22,0,1,21,0.0044639230778784,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg23,22,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
578,1794,medium or small,True,76,22,1,20,2,0.9997212667828989,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue rectangle,hg23,22,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
579,1795,medium or small,True,77,23,1,21,1,0.9997889041297868,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg23,23,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
580,1796,medium or small,True,78,23,0,1,21,0.0015078463644613,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg23,23,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
581,1797,medium or small,True,79,23,0,1,21,0.0030322285755346,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow triangle,hg23,23,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
582,1798,medium or small,True,80,23,1,22,0,0.999748223553297,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow triangle,hg23,23,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
583,1799,medium or small,True,81,23,1,22,0,0.99973883171333,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg23,23,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
584,1800,medium or small,True,82,24,1,22,0,0.999513806155619,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green circle,hg23,24,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
585,1801,medium or small,True,83,24,0,0,22,0.0006027736733358,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large green rectangle,hg23,24,False,False,False,0.9586776859504134,0.5457003785830179,1.0,1.0,True
586,1802,medium or small,True,84,24,1,22,0,0.9998765634936716,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg23,24,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
587,1803,medium or small,True,85,24,1,22,0,0.9998535681722842,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg23,24,True,True,True,0.9586776859504134,0.5457003785830179,1.0,1.0,True
588,1804,large,True,0,0,1,17,9,0.4635740694637888,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg18,0,True,False,True,0.9555555555555554,0.5146938775510204,0.4142857142857143,0.4142857142857143,False
589,1805,large,True,1,0,0,11,15,0.5141802620145199,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg18,0,False,True,True,0.9555555555555554,0.5146938775510204,0.4142857142857143,0.4142857142857143,True
590,1806,large,True,2,0,1,15,11,0.4645095623660608,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg18,0,True,False,True,0.9555555555555554,0.5146938775510204,0.4142857142857143,0.4142857142857143,False
591,1807,large,True,3,0,0,7,19,0.4882680837423549,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg18,0,False,False,True,0.9555555555555554,0.5146938775510204,0.4142857142857143,0.4142857142857143,False
592,1808,large,True,4,1,0,15,11,0.5176930197635556,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green circle,hg18,1,False,True,False,0.9555555555555554,0.5146938775510204,1.0,1.0,False
593,1809,large,True,5,1,0,5,21,0.3817427099789938,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow triangle,hg18,1,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
594,1810,large,True,6,1,1,11,15,0.4947520187381542,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,1,True,False,True,0.9555555555555554,0.5146938775510204,1.0,1.0,False
595,1811,large,True,7,1,0,5,21,0.3168829549156271,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow rectangle,hg18,1,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
596,1812,large,True,8,2,1,18,8,0.6719656498623862,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow triangle,hg18,2,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
597,1813,large,True,9,2,0,2,24,0.1445804649526962,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue rectangle,hg18,2,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
598,1814,large,True,10,3,1,21,5,0.779471831555611,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow rectangle,hg18,3,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
599,1815,large,True,11,3,1,23,3,0.7758647714463222,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue rectangle,hg18,3,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
600,1816,large,True,12,3,0,1,25,0.1468106601582803,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow circle,hg18,3,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
601,1817,large,True,13,3,1,26,0,0.8208874101152333,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,3,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
602,1818,large,True,14,4,0,2,24,0.136216746985724,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue circle,hg18,4,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
603,1819,large,True,15,4,1,26,0,0.9273282590896768,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow triangle,hg18,4,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
604,1820,large,True,16,5,0,3,23,0.0494426137388472,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg18,5,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
605,1821,large,True,17,5,1,24,2,0.9453566571718284,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg18,5,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
606,1822,large,True,18,6,1,26,0,0.964102597972328,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,6,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
607,1823,large,True,19,6,1,26,0,0.9618591230416768,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow triangle,hg18,6,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
608,1824,large,True,20,6,1,24,2,0.9611781027612096,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg18,6,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
609,1825,large,True,21,6,0,0,26,0.0450839685763639,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg18,6,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
610,1826,large,True,22,7,1,25,1,0.9396404477760142,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,7,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
611,1827,large,True,23,8,1,25,1,0.9553465999429136,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow rectangle,hg18,8,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
612,1828,large,True,24,8,1,25,1,0.956501123482667,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow triangle,hg18,8,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
613,1829,large,True,25,9,1,24,2,0.9872676593352024,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,9,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
614,1830,large,True,26,9,0,0,26,0.1637009001722162,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green rectangle,hg18,9,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
615,1831,large,True,27,9,0,2,24,0.0741018100050041,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg18,9,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
616,1832,large,True,28,9,0,1,25,0.1776142112046272,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue rectangle,hg18,9,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
617,1833,large,True,29,9,1,25,1,0.9932970351775338,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow rectangle,hg18,9,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
618,1834,large,True,30,10,1,25,1,0.98038260990063,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue triangle,hg18,10,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
619,1835,large,True,31,10,0,0,26,0.0559697261172686,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg18,10,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
620,1836,large,True,32,11,1,24,1,0.9909005912023758,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg18,11,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
621,1837,large,True,33,11,0,0,25,0.0407484277781122,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow triangle,hg18,11,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
622,1838,large,True,34,11,0,0,25,0.0180826582868576,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg18,11,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
623,1839,large,True,35,11,1,22,3,0.994765427616926,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow rectangle,hg18,11,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
624,1840,large,True,36,12,0,5,20,0.092355251292588,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green rectangle,hg18,12,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
625,1841,large,True,37,12,0,1,24,0.0335379338467873,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue rectangle,hg18,12,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
626,1842,large,True,38,12,0,0,25,0.0754088363518121,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green circle,hg18,12,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
627,1843,large,True,39,13,0,0,25,0.0140305912209441,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow triangle,hg18,13,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
628,1844,large,True,40,13,0,0,25,0.0187876331381175,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue circle,hg18,13,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
629,1845,large,True,41,13,1,24,1,0.9943972978010152,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg18,13,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
630,1846,large,True,42,13,0,0,25,0.0048634781963983,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg18,13,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
631,1847,large,True,43,13,0,0,25,0.0065246919522223,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green triangle,hg18,13,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
632,1848,large,True,44,14,1,24,1,0.9949606127073592,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow circle,hg18,14,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
633,1849,large,True,45,15,0,0,25,0.0493458778878448,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green circle,hg18,15,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
634,1850,large,True,46,15,0,0,25,0.054827693239531,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow circle,hg18,15,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
635,1851,large,True,47,15,0,0,25,0.0501652739612836,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue circle,hg18,15,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
636,1852,large,True,48,16,0,0,25,0.0012579685608216,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue circle,hg18,16,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
637,1853,large,True,49,16,1,22,3,0.9934034488138648,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg18,16,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
638,1854,large,True,50,16,0,0,25,0.0211925769756362,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg18,16,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
639,1855,large,True,51,16,0,0,25,0.0031800571630355,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg18,16,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
640,1856,large,True,52,16,0,0,25,0.0030329038124818,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green circle,hg18,16,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
641,1857,large,True,53,17,1,25,0,0.996859537245882,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg18,17,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
642,1858,large,True,54,18,0,1,24,0.0354711346071781,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg18,18,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
643,1859,large,True,55,18,0,2,23,0.0215771645904396,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue rectangle,hg18,18,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
644,1860,large,True,56,19,1,25,0,0.9910532131251556,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg18,19,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
645,1861,large,True,57,19,0,0,25,0.0124602753463705,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg18,19,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
646,1862,large,True,58,20,0,3,22,0.0159129210425135,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green triangle,hg18,20,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
647,1863,large,True,59,20,1,22,3,0.9960445227654872,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow circle,hg18,20,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
648,1864,large,True,60,21,0,1,24,0.0123985259787104,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green rectangle,hg18,21,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
649,1865,large,True,61,21,0,0,25,0.0026452628210336,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green circle,hg18,21,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
650,1866,large,True,62,21,0,0,25,0.0043078907472136,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green triangle,hg18,21,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
651,1867,large,True,63,21,1,25,0,0.9945803047066873,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow triangle,hg18,21,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
652,1868,large,True,64,22,0,0,25,0.0121201748856947,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue rectangle,hg18,22,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
653,1869,large,True,65,23,0,1,24,0.0039762517097869,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green rectangle,hg18,23,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
654,1870,large,True,66,24,0,1,24,0.0159996259865238,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg18,24,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
655,1871,large,True,67,24,0,0,25,0.0085359074365669,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green triangle,hg18,24,False,False,False,0.9555555555555554,0.5146938775510204,1.0,1.0,True
656,1872,large,True,68,24,1,23,2,0.9880419892210738,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg18,24,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
657,1873,large,True,69,24,1,23,2,0.990058657560212,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue rectangle,hg18,24,True,True,True,0.9555555555555554,0.5146938775510204,1.0,1.0,True
658,2472,circle or blue,True,0,0,1,13,12,0.502588229699313,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg06,0,True,True,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,True
659,2473,circle or blue,True,1,0,1,12,13,0.5000134812278247,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg06,0,True,True,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,True
660,2474,circle or blue,True,2,0,1,12,13,0.4482645477061169,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg06,0,True,False,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,False
661,2475,circle or blue,True,3,0,1,14,11,0.537700003938653,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg06,0,True,True,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,True
662,2476,circle or blue,True,4,0,1,13,12,0.4795295935350623,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg06,0,True,False,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,False
663,2477,circle or blue,True,5,1,0,17,7,0.6647771276802814,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg06,1,False,True,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,True
664,2478,circle or blue,True,6,1,1,18,6,0.8339188065466487,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg06,1,True,True,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,True
665,2479,circle or blue,True,7,2,0,5,19,0.2868142713310817,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg06,2,False,False,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,False
666,2480,circle or blue,True,8,2,0,7,17,0.2943076255866117,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg06,2,False,False,True,0.8869565217391304,0.5013149243918474,0.5256410256410257,0.5256410256410257,False
667,2481,circle or blue,True,9,3,1,21,3,0.8224127641751692,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg06,3,True,True,True,0.8869565217391304,0.5013149243918474,0.6538461538461539,0.6538461538461539,True
668,2482,circle or blue,True,10,3,0,10,14,0.328692000086562,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large yellow rectangle,hg06,3,False,False,True,0.8869565217391304,0.5013149243918474,0.6538461538461539,0.6538461538461539,False
669,2483,circle or blue,True,11,3,0,10,14,0.3681970319983065,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow rectangle,hg06,3,False,False,True,0.8869565217391304,0.5013149243918474,0.6538461538461539,0.6538461538461539,False
670,2484,circle or blue,True,12,3,0,3,21,0.1649473960339946,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow triangle,hg06,3,False,False,False,0.8869565217391304,0.5013149243918474,0.6538461538461539,0.6538461538461539,True
671,2485,circle or blue,True,13,4,1,23,1,0.9058887113670834,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg06,4,True,True,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
672,2486,circle or blue,True,14,4,1,18,6,0.6575216382802864,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg06,4,True,True,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
673,2487,circle or blue,True,15,4,1,19,5,0.6836681821532692,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue triangle,hg06,4,True,True,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
674,2488,circle or blue,True,16,5,0,1,23,0.0822212677662719,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg06,5,False,False,False,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
675,2489,circle or blue,True,17,6,0,2,22,0.137711643732473,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg06,6,False,False,False,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
676,2490,circle or blue,True,18,6,1,22,2,0.8154752363883517,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg06,6,True,True,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
677,2491,circle or blue,True,19,7,0,1,23,0.1375744454373943,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg06,7,False,False,False,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
678,2492,circle or blue,True,20,7,1,19,5,0.6623154091462311,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg06,7,True,True,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,True
679,2493,circle or blue,True,21,7,0,14,10,0.3874781649786882,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg06,7,False,False,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,False
680,2494,circle or blue,True,22,7,0,13,11,0.3212963337675773,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg06,7,False,False,True,0.8869565217391304,0.5013149243918474,0.7435897435897436,0.7435897435897436,False
681,2495,circle or blue,True,23,8,1,19,5,0.7233570282180608,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow circle,hg06,8,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
682,2496,circle or blue,True,24,8,0,2,22,0.0440184880227434,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg06,8,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
683,2497,circle or blue,True,25,8,1,21,3,0.9228971706095308,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue circle,hg06,8,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
684,2498,circle or blue,True,26,8,1,22,2,0.8689718608096654,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg06,8,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
685,2499,circle or blue,True,27,9,1,18,6,0.8846162195957276,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg06,9,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
686,2500,circle or blue,True,28,9,1,22,2,0.9713398330767404,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg06,9,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
687,2501,circle or blue,True,29,10,1,20,4,0.817427364960622,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue rectangle,hg06,10,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
688,2502,circle or blue,True,30,11,1,19,5,0.7230454244089514,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow circle,hg06,11,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
689,2503,circle or blue,True,31,11,0,5,19,0.2468782198548069,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg06,11,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
690,2504,circle or blue,True,32,11,1,20,4,0.9484519114852218,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue triangle,hg06,11,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
691,2505,circle or blue,True,33,11,0,5,19,0.2072756307446752,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg06,11,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
692,2506,circle or blue,True,34,12,1,21,2,0.961165312054618,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue circle,hg06,12,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
693,2507,circle or blue,True,35,12,0,2,21,0.0287892762727324,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg06,12,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
694,2508,circle or blue,True,36,12,0,2,21,0.050269567092755,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow rectangle,hg06,12,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
695,2509,circle or blue,True,37,12,1,20,3,0.9595993361085676,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg06,12,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
696,2510,circle or blue,True,38,13,0,2,21,0.0205362531797845,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow triangle,hg06,13,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
697,2511,circle or blue,True,39,13,0,1,22,0.0397318924677847,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow triangle,hg06,13,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
698,2512,circle or blue,True,40,13,1,20,3,0.8759643057433095,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green circle,hg06,13,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
699,2513,circle or blue,True,41,14,0,1,22,0.0295444225250776,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow rectangle,hg06,14,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
700,2514,circle or blue,True,42,14,0,4,19,0.0985931585627213,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green triangle,hg06,14,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
701,2515,circle or blue,True,43,15,0,1,22,0.0190895117278842,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow rectangle,hg06,15,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
702,2516,circle or blue,True,44,15,0,1,22,0.0116292342172528,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg06,15,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
703,2517,circle or blue,True,45,15,1,19,4,0.859384236761798,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue rectangle,hg06,15,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
704,2518,circle or blue,True,46,16,0,3,20,0.0386742283732246,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg06,16,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
705,2519,circle or blue,True,47,16,1,18,5,0.8570425548628008,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg06,16,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
706,2520,circle or blue,True,48,16,1,21,2,0.8559828980090742,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg06,16,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
707,2521,circle or blue,True,49,16,1,20,3,0.9575055838429308,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue circle,hg06,16,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
708,2522,circle or blue,True,50,16,0,1,22,0.0594261167229888,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green triangle,hg06,16,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
709,2523,circle or blue,True,51,17,1,22,1,0.9866710957147689,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green circle,hg06,17,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
710,2524,circle or blue,True,52,17,1,19,4,0.9686957601519453,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow circle,hg06,17,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
711,2525,circle or blue,True,53,17,0,4,19,0.0154406540807485,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg06,17,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
712,2526,circle or blue,True,54,17,1,22,1,0.9857427216638824,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue circle,hg06,17,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
713,2527,circle or blue,True,55,17,0,3,20,0.0057558424576882,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg06,17,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
714,2528,circle or blue,True,56,18,1,21,2,0.9919314137708852,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow circle,hg06,18,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
715,2529,circle or blue,True,57,18,1,22,1,0.9944248898007116,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg06,18,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
716,2530,circle or blue,True,58,18,1,20,3,0.9911083165438868,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue circle,hg06,18,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
717,2531,circle or blue,True,59,19,0,1,22,0.0112309141773039,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow rectangle,hg06,19,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
718,2532,circle or blue,True,60,19,0,2,21,0.0040553898737698,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg06,19,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
719,2533,circle or blue,True,61,19,0,3,20,0.0129669331938657,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg06,19,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
720,2534,circle or blue,True,62,19,0,2,21,0.0031745758578836,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg06,19,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
721,2535,circle or blue,True,63,19,1,20,3,0.9057404017080444,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg06,19,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
722,2536,circle or blue,True,64,20,0,3,20,0.0002423643750262,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg06,20,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
723,2537,circle or blue,True,65,20,0,0,23,0.0016739491027237,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow rectangle,hg06,20,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
724,2538,circle or blue,True,66,21,1,22,1,0.98417511441869,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg06,21,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
725,2539,circle or blue,True,67,22,0,3,20,0.0193932842333879,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg06,22,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
726,2540,circle or blue,True,68,22,1,17,6,0.921291492882915,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg06,22,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
727,2541,circle or blue,True,69,22,1,15,8,0.8368719262372223,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue rectangle,hg06,22,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
728,2542,circle or blue,True,70,22,1,21,2,0.9925022481246514,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg06,22,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
729,2543,circle or blue,True,71,23,1,21,2,0.9961468224036024,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg06,23,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
730,2544,circle or blue,True,72,23,0,2,21,0.0166357368399303,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green triangle,hg06,23,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
731,2545,circle or blue,True,73,23,1,21,2,0.9711972689968889,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg06,23,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
732,2546,circle or blue,True,74,24,0,3,20,0.0028071818225043,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow triangle,hg06,24,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
733,2547,circle or blue,True,75,24,0,3,20,0.0039069122663022,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green rectangle,hg06,24,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
734,2548,circle or blue,True,76,24,1,23,0,0.9969029355114573,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg06,24,True,True,True,0.8869565217391304,0.5013149243918474,1.0,1.0,True
735,2549,circle or blue,True,77,24,0,1,22,0.0008969707513415,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow triangle,hg06,24,False,False,False,0.8869565217391304,0.5013149243918474,1.0,1.0,True
736,2622,small and blue,True,0,0,0,10,12,0.4443855905408327,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg24,0,False,False,True,0.9477272727272728,0.7912049861495845,0.11842105263157894,0.11842105263157894,False
737,2623,small and blue,True,1,0,0,13,9,0.5113045643447549,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg24,0,False,True,True,0.9477272727272728,0.7912049861495845,0.11842105263157894,0.11842105263157894,True
738,2624,small and blue,True,2,0,0,10,12,0.4710398994485558,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg24,0,False,False,True,0.9477272727272728,0.7912049861495845,0.11842105263157894,0.11842105263157894,False
739,2625,small and blue,True,3,0,0,8,14,0.4427260056338582,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg24,0,False,False,True,0.9477272727272728,0.7912049861495845,0.11842105263157894,0.11842105263157894,False
740,2626,small and blue,True,4,0,0,11,11,0.4710570220925092,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg24,0,False,False,True,0.9477272727272728,0.7912049861495845,0.11842105263157894,0.11842105263157894,False
741,2627,small and blue,True,5,1,0,5,17,0.1580614770490456,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg24,1,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
742,2628,small and blue,True,6,1,1,3,19,0.2269604146893016,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg24,1,True,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
743,2629,small and blue,True,7,1,0,10,12,0.2541049618449733,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg24,1,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
744,2630,small and blue,True,8,2,1,8,14,0.3784528410631082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg24,2,True,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
745,2631,small and blue,True,9,2,0,5,17,0.2320647822687078,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg24,2,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
746,2632,small and blue,True,10,2,0,5,17,0.0907358323170228,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg24,2,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
747,2633,small and blue,True,11,2,0,13,9,0.2261873554583644,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg24,2,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
748,2634,small and blue,True,12,3,0,1,21,0.0726492604823079,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",large yellow rectangle,hg24,3,False,False,False,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
749,2635,small and blue,True,13,3,0,2,20,0.0604035051674145,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",large yellow triangle,hg24,3,False,False,False,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
750,2636,small and blue,True,14,3,1,18,4,0.6097606244965162,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",small blue rectangle,hg24,3,True,True,True,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
751,2637,small and blue,True,15,3,0,6,16,0.414069431060966,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",medium blue circle,hg24,3,False,False,True,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,False
752,2638,small and blue,True,16,4,0,6,16,0.1024993298597109,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small yellow circle,hg24,4,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
753,2639,small and blue,True,17,5,0,3,19,0.2318885226767406,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg24,5,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
754,2640,small and blue,True,18,5,0,1,21,0.0456498026412646,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg24,5,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
755,2641,small and blue,True,19,6,0,2,20,0.092022423319463,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg24,6,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
756,2642,small and blue,True,20,6,1,20,2,0.483224935256203,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg24,6,True,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
757,2643,small and blue,True,21,7,0,0,22,0.0643421890974877,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",large green circle,hg24,7,False,False,False,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
758,2644,small and blue,True,22,8,0,0,22,0.1069386977213753,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg24,8,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
759,2645,small and blue,True,23,8,1,20,2,0.6196877924789987,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg24,8,True,True,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,False
760,2646,small and blue,True,24,8,0,0,22,0.0372757982765961,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg24,8,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
761,2647,small and blue,True,25,9,0,4,18,0.1499750720645351,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",small green rectangle,hg24,9,False,False,False,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
762,2648,small and blue,True,26,9,0,5,17,0.2967678035546441,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",medium blue rectangle,hg24,9,False,False,True,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,False
763,2649,small and blue,True,27,9,0,4,18,0.2959453928906441,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",medium blue circle,hg24,9,False,False,True,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,False
764,2650,small and blue,True,28,9,0,1,21,0.0429494666208256,"""λx.apply1(compose11(compose8(and,blue),compose2(not,large)),x.o)""
",blue and (not large),"def is_rule(obj):
    return obj.blue and not (obj.large)",medium green circle,hg24,9,False,False,False,0.9477272727272728,0.7912049861495845,0.8947368421052632,0.8947368421052632,True
765,2651,small and blue,True,29,10,0,2,20,0.0688068471447422,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg24,10,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
766,2652,small and blue,True,30,10,0,4,18,0.1445084786707866,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg24,10,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
767,2653,small and blue,True,31,10,0,1,21,0.0324483461831732,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg24,10,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
768,2654,small and blue,True,32,10,0,2,20,0.0772945714306843,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg24,10,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
769,2655,small and blue,True,33,11,0,1,21,0.0206015108373094,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg24,11,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
770,2656,small and blue,True,34,12,0,0,22,0.0246810078548378,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg24,12,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
771,2657,small and blue,True,35,12,0,2,20,0.0365722443056029,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg24,12,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
772,2658,small and blue,True,36,12,0,3,19,0.0607149711024703,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg24,12,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
773,2659,small and blue,True,37,13,0,1,21,0.0088425617034317,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg24,13,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
774,2660,small and blue,True,38,13,0,1,21,0.0392207746566555,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg24,13,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
775,2661,small and blue,True,39,13,0,4,18,0.0731222771771626,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg24,13,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
776,2662,small and blue,True,40,14,0,1,21,0.0518598642210008,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg24,14,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
777,2663,small and blue,True,41,14,1,20,2,0.5875835531496704,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg24,14,True,True,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,False
778,2664,small and blue,True,42,15,0,0,22,0.4223041942949521,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium blue triangle,hg24,15,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
779,2665,small and blue,True,43,15,1,22,0,0.7196645881872427,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small blue rectangle,hg24,15,True,True,True,0.9477272727272728,0.7912049861495845,1.0,1.0,True
780,2666,small and blue,True,44,15,0,1,21,0.0053279574530051,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large yellow circle,hg24,15,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
781,2667,small and blue,True,45,15,0,1,21,0.2414482508696664,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large blue rectangle,hg24,15,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
782,2668,small and blue,True,46,16,0,2,20,0.071376658621375,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium blue rectangle,hg24,16,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
783,2669,small and blue,True,47,17,0,1,21,0.0214750765344433,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large green rectangle,hg24,17,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
784,2670,small and blue,True,48,17,0,1,21,0.0142728850851199,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large yellow rectangle,hg24,17,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
785,2671,small and blue,True,49,17,0,3,19,0.0298306903601996,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium green rectangle,hg24,17,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
786,2672,small and blue,True,50,18,0,1,21,0.0055157811482331,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg24,18,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
787,2673,small and blue,True,51,18,0,1,21,0.0179680933690633,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg24,18,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
788,2674,small and blue,True,52,18,1,21,1,0.7048014117070805,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg24,18,True,True,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,False
789,2675,small and blue,True,53,18,0,1,21,0.0681403794657171,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg24,18,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
790,2676,small and blue,True,54,18,0,4,18,0.062181333354033,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg24,18,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
791,2677,small and blue,True,55,19,0,0,22,0.1589139988636816,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large blue triangle,hg24,19,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
792,2678,small and blue,True,56,19,0,0,22,0.0102739086763676,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium yellow triangle,hg24,19,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
793,2679,small and blue,True,57,19,0,2,20,0.0578512383248153,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium blue rectangle,hg24,19,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
794,2680,small and blue,True,58,20,0,2,20,0.1113377444103207,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small yellow triangle,hg24,20,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
795,2681,small and blue,True,59,20,0,1,21,0.0236312532533702,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium blue rectangle,hg24,20,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
796,2682,small and blue,True,60,21,0,0,22,0.017084495219251,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg24,21,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
797,2683,small and blue,True,61,21,0,2,20,0.0395807550654581,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg24,21,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
798,2684,small and blue,True,62,21,0,0,22,0.0096186518145486,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg24,21,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
799,2685,small and blue,True,63,21,0,1,21,0.0134522868230533,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg24,21,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
800,2686,small and blue,True,64,21,0,1,21,0.0062145376490434,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg24,21,False,False,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,True
801,2687,small and blue,True,65,22,1,20,2,0.6992625214918462,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg24,22,True,True,False,0.9477272727272728,0.7912049861495845,0.881578947368421,0.881578947368421,False
802,2688,small and blue,True,66,23,0,0,22,0.0502057665556776,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium blue rectangle,hg24,23,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
803,2689,small and blue,True,67,23,0,0,22,0.0064368112167585,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",large green circle,hg24,23,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
804,2690,small and blue,True,68,23,0,2,20,0.0898287650370548,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small yellow rectangle,hg24,23,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
805,2691,small and blue,True,69,23,0,1,21,0.0060972486897981,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium yellow rectangle,hg24,23,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
806,2692,small and blue,True,70,23,0,1,21,0.0092140783965533,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium yellow circle,hg24,23,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
807,2693,small and blue,True,71,24,0,1,21,0.0054797859143036,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium green circle,hg24,24,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
808,2694,small and blue,True,72,24,0,2,20,0.0070631556633315,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium green rectangle,hg24,24,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
809,2695,small and blue,True,73,24,0,2,20,0.0237340919924236,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small yellow circle,hg24,24,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
810,2696,small and blue,True,74,24,0,1,21,0.0241355239676295,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",small yellow triangle,hg24,24,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
811,2697,small and blue,True,75,24,0,2,20,0.0134976408656939,"""λx.apply1(compose11(compose8(and,small),blue),x.o)""
",small and blue,"def is_rule(obj):
    return obj.small and obj.blue",medium green triangle,hg24,24,False,False,False,0.9477272727272728,0.7912049861495845,1.0,1.0,True
812,3025,circle or (blue and triangle),True,0,0,1,9,15,0.4469010387829257,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg85,0,True,False,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,False
813,3026,circle or (blue and triangle),True,1,1,1,6,18,0.580434903869559,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg85,1,True,True,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,True
814,3027,circle or (blue and triangle),True,2,1,1,11,13,0.5065095570585071,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg85,1,True,True,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,True
815,3028,circle or (blue and triangle),True,3,2,1,20,3,0.7845022078083729,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg85,2,True,True,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,True
816,3029,circle or (blue and triangle),True,4,2,0,14,9,0.7292459646697579,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg85,2,False,True,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,True
817,3030,circle or (blue and triangle),True,5,2,0,12,11,0.6244960541258706,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg85,2,False,True,True,0.918158567774936,0.5010024504343951,0.47761194029850745,0.47761194029850745,True
818,3031,circle or (blue and triangle),True,6,3,0,16,7,0.3971238310726903,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow triangle,hg85,3,False,False,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,False
819,3032,circle or (blue and triangle),True,7,3,0,13,10,0.3864185860486486,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow triangle,hg85,3,False,False,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,False
820,3033,circle or (blue and triangle),True,8,3,1,17,6,0.7242015448073289,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green circle,hg85,3,True,True,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
821,3034,circle or (blue and triangle),True,9,3,0,3,20,0.1940662815205769,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg85,3,False,False,False,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
822,3035,circle or (blue and triangle),True,10,3,1,19,4,0.7811638627742922,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue circle,hg85,3,True,True,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
823,3036,circle or (blue and triangle),True,11,4,0,3,20,0.2725833564829827,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg85,4,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
824,3037,circle or (blue and triangle),True,12,4,1,22,1,0.8885285489569696,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green circle,hg85,4,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
825,3038,circle or (blue and triangle),True,13,5,1,16,7,0.8249283088534866,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg85,5,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
826,3039,circle or (blue and triangle),True,14,5,0,5,18,0.1072145849135495,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow triangle,hg85,5,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
827,3040,circle or (blue and triangle),True,15,6,1,18,5,0.919805739275489,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg85,6,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
828,3041,circle or (blue and triangle),True,16,6,0,3,20,0.0748480076076702,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green rectangle,hg85,6,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
829,3042,circle or (blue and triangle),True,17,6,0,2,21,0.0618097126161956,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg85,6,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
830,3043,circle or (blue and triangle),True,18,6,1,19,4,0.880912517446859,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue circle,hg85,6,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
831,3044,circle or (blue and triangle),True,19,7,1,12,11,0.4128889446504899,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg85,7,True,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
832,3045,circle or (blue and triangle),True,20,7,0,3,20,0.1483461294535572,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue rectangle,hg85,7,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
833,3046,circle or (blue and triangle),True,21,8,1,18,5,0.4003867606051016,"""λx.apply1(compose11(compose8(or,circle),large),x.o)""
",circle or large,"def is_rule(obj):
    return obj.circle or obj.large",medium blue triangle,hg85,8,True,False,False,0.918158567774936,0.5010024504343951,0.7761194029850746,0.7761194029850746,True
834,3047,circle or (blue and triangle),True,22,9,0,9,14,0.3607718995365303,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large green triangle,hg85,9,False,False,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,False
835,3048,circle or (blue and triangle),True,23,9,0,5,18,0.2683404536194302,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg85,9,False,False,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,False
836,3049,circle or (blue and triangle),True,24,9,1,19,4,0.8382569407962137,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow circle,hg85,9,True,True,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
837,3050,circle or (blue and triangle),True,25,9,1,20,3,0.8118255472836609,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg85,9,True,True,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
838,3051,circle or (blue and triangle),True,26,9,1,21,2,0.90747126822248,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small blue circle,hg85,9,True,True,True,0.918158567774936,0.5010024504343951,0.7611940298507462,0.7611940298507462,True
839,3052,circle or (blue and triangle),True,27,10,0,5,18,0.0313266802666021,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium yellow triangle,hg85,10,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
840,3053,circle or (blue and triangle),True,28,10,0,2,21,0.3762027345101159,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue rectangle,hg85,10,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
841,3054,circle or (blue and triangle),True,29,10,0,2,21,0.0869120112486143,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium green rectangle,hg85,10,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
842,3055,circle or (blue and triangle),True,30,10,1,22,1,0.9789665350999712,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue circle,hg85,10,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
843,3056,circle or (blue and triangle),True,31,10,1,23,0,0.9600290368515516,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium green circle,hg85,10,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
844,3057,circle or (blue and triangle),True,32,11,0,1,22,0.013332367174371,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg85,11,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
845,3058,circle or (blue and triangle),True,33,11,1,22,1,0.9879916667252928,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue circle,hg85,11,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
846,3059,circle or (blue and triangle),True,34,11,0,2,21,0.0356979308247673,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg85,11,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
847,3060,circle or (blue and triangle),True,35,12,1,22,1,0.9476871254953492,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow circle,hg85,12,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
848,3061,circle or (blue and triangle),True,36,12,0,1,22,0.0912247210046643,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow rectangle,hg85,12,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
849,3062,circle or (blue and triangle),True,37,12,0,0,23,0.1597304226992264,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue rectangle,hg85,12,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
850,3063,circle or (blue and triangle),True,38,12,0,3,20,0.0846163712548104,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow triangle,hg85,12,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
851,3064,circle or (blue and triangle),True,39,12,0,2,21,0.0079394451776124,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow triangle,hg85,12,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
852,3065,circle or (blue and triangle),True,40,13,1,23,0,0.9737689345186026,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue circle,hg85,13,True,True,True,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
853,3066,circle or (blue and triangle),True,41,14,0,3,20,0.0537408307907298,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green triangle,hg85,14,False,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
854,3067,circle or (blue and triangle),True,42,14,1,19,4,0.4844997605677008,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg85,14,True,False,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,True
855,3068,circle or (blue and triangle),True,43,15,1,22,1,0.9845418252547232,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue circle,hg85,15,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
856,3069,circle or (blue and triangle),True,44,16,1,20,3,0.6488260166280497,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue triangle,hg85,16,True,True,False,0.918158567774936,0.5010024504343951,0.8656716417910447,0.8656716417910447,False
857,3070,circle or (blue and triangle),True,45,17,0,2,21,0.0593417476350168,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large green rectangle,hg85,17,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
858,3071,circle or (blue and triangle),True,46,17,1,19,4,0.9234146547897808,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small green circle,hg85,17,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
859,3072,circle or (blue and triangle),True,47,17,0,0,23,0.0376998526995748,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium yellow rectangle,hg85,17,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
860,3073,circle or (blue and triangle),True,48,17,0,0,23,0.04958333072625,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small yellow rectangle,hg85,17,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
861,3074,circle or (blue and triangle),True,49,17,1,22,1,0.9813363207009616,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large blue circle,hg85,17,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
862,3075,circle or (blue and triangle),True,50,18,0,1,22,0.0320302851442875,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small yellow triangle,hg85,18,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
863,3076,circle or (blue and triangle),True,51,18,1,22,1,0.7906604010386217,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue triangle,hg85,18,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
864,3077,circle or (blue and triangle),True,52,19,1,22,1,0.989660380600867,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue circle,hg85,19,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
865,3078,circle or (blue and triangle),True,53,19,1,23,0,0.9151203117821752,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small blue triangle,hg85,19,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
866,3079,circle or (blue and triangle),True,54,19,0,3,20,0.0936600936175864,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium green triangle,hg85,19,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
867,3080,circle or (blue and triangle),True,55,19,0,1,22,0.0203911929484092,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large green rectangle,hg85,19,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
868,3081,circle or (blue and triangle),True,56,20,1,22,1,0.9932895292894272,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large blue circle,hg85,20,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
869,3082,circle or (blue and triangle),True,57,20,0,1,22,0.0102883596565561,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small green rectangle,hg85,20,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
870,3083,circle or (blue and triangle),True,58,21,1,22,1,0.906574964551055,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small yellow circle,hg85,21,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
871,3084,circle or (blue and triangle),True,59,22,0,2,21,0.0057151789666249,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium green rectangle,hg85,22,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
872,3085,circle or (blue and triangle),True,60,22,0,2,21,0.3688805709581401,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large blue rectangle,hg85,22,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
873,3086,circle or (blue and triangle),True,61,22,1,21,2,0.9710186799256916,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small yellow circle,hg85,22,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
874,3087,circle or (blue and triangle),True,62,22,0,5,18,0.053205869172757,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small green triangle,hg85,22,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
875,3088,circle or (blue and triangle),True,63,23,0,1,22,0.0076060319429416,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium yellow rectangle,hg85,23,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
876,3089,circle or (blue and triangle),True,64,23,0,1,22,0.0158008900300501,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",large yellow triangle,hg85,23,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
877,3090,circle or (blue and triangle),True,65,23,1,21,2,0.7180105024285695,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",medium blue triangle,hg85,23,True,True,True,0.918158567774936,0.5010024504343951,1.0,1.0,True
878,3091,circle or (blue and triangle),True,66,24,0,5,18,0.0235802129644753,"""λx.apply1(compose11(compose7(or,compose11(compose8(and,blue),triangle)),circle),x.o)""
",(blue and triangle) or circle,"def is_rule(obj):
    return (obj.blue and obj.triangle) or obj.circle",small green triangle,hg85,24,False,False,False,0.918158567774936,0.5010024504343951,1.0,1.0,True
879,3533,circle xor blue,True,0,0,1,10,14,0.472828988793708,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg14,0,True,False,True,0.8862433862433863,0.5065306122448979,0.44285714285714284,0.44285714285714284,False
880,3534,circle xor blue,True,1,0,0,9,15,0.4081286240819963,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg14,0,False,False,True,0.8862433862433863,0.5065306122448979,0.44285714285714284,0.44285714285714284,False
881,3535,circle xor blue,True,2,0,0,9,15,0.427201021335577,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg14,0,False,False,True,0.8862433862433863,0.5065306122448979,0.44285714285714284,0.44285714285714284,False
882,3536,circle xor blue,True,3,0,0,12,12,0.5119414041880646,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg14,0,False,True,True,0.8862433862433863,0.5065306122448979,0.44285714285714284,0.44285714285714284,True
883,3537,circle xor blue,True,4,0,1,8,16,0.4906698268689524,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg14,0,True,False,True,0.8862433862433863,0.5065306122448979,0.44285714285714284,0.44285714285714284,False
884,3538,circle xor blue,True,5,1,0,11,13,0.4502782740553357,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",small green rectangle,hg14,1,False,False,True,0.8862433862433863,0.5065306122448979,0.5857142857142857,0.5857142857142857,False
885,3539,circle xor blue,True,6,1,0,1,23,0.0874547286937286,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",small yellow triangle,hg14,1,False,False,False,0.8862433862433863,0.5065306122448979,0.5857142857142857,0.5857142857142857,True
886,3540,circle xor blue,True,7,1,1,17,7,0.6239410454435301,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",small green circle,hg14,1,True,True,True,0.8862433862433863,0.5065306122448979,0.5857142857142857,0.5857142857142857,True
887,3541,circle xor blue,True,8,2,1,23,1,0.7745584832847499,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large green circle,hg14,2,True,True,True,0.8862433862433863,0.5065306122448979,0.7285714285714285,0.7285714285714285,True
888,3542,circle xor blue,True,9,3,0,3,21,0.3025134506650601,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",medium green triangle,hg14,3,False,False,True,0.8862433862433863,0.5065306122448979,0.5571428571428572,0.5571428571428572,False
889,3543,circle xor blue,True,10,4,0,6,18,0.4967385746435866,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue circle,hg14,4,False,False,True,0.8862433862433863,0.5065306122448979,0.7,0.7,False
890,3544,circle xor blue,True,11,4,1,7,17,0.6022829174066828,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow circle,hg14,4,True,True,True,0.8862433862433863,0.5065306122448979,0.7,0.7,True
891,3545,circle xor blue,True,12,4,1,23,1,0.688793549326192,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg14,4,True,True,True,0.8862433862433863,0.5065306122448979,0.7,0.7,True
892,3546,circle xor blue,True,13,4,1,22,2,0.7849110665890748,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green circle,hg14,4,True,True,True,0.8862433862433863,0.5065306122448979,0.7,0.7,True
893,3547,circle xor blue,True,14,5,1,24,0,0.950361339163237,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium green circle,hg14,5,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
894,3548,circle xor blue,True,15,5,0,3,21,0.3058733813617209,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small blue circle,hg14,5,False,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
895,3549,circle xor blue,True,16,5,1,17,7,0.8464594179320101,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small yellow circle,hg14,5,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
896,3550,circle xor blue,True,17,5,1,22,2,0.8815804082501018,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium yellow circle,hg14,5,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
897,3551,circle xor blue,True,18,6,0,2,22,0.1930956889164008,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue circle,hg14,6,False,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
898,3552,circle xor blue,True,19,6,1,24,0,0.9856847815595984,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large green circle,hg14,6,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
899,3553,circle xor blue,True,20,6,0,5,19,0.1116350294367975,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium green triangle,hg14,6,False,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
900,3554,circle xor blue,True,21,7,0,5,19,0.0436538319873989,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small yellow triangle,hg14,7,False,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
901,3555,circle xor blue,True,22,7,1,4,20,0.4117647405764728,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large blue triangle,hg14,7,True,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
902,3556,circle xor blue,True,23,7,1,21,3,0.9502318477584594,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium yellow circle,hg14,7,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
903,3557,circle xor blue,True,24,7,1,22,2,0.9827178794722612,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large green circle,hg14,7,True,True,True,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
904,3558,circle xor blue,True,25,7,0,7,17,0.1197696109211392,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large yellow rectangle,hg14,7,False,False,False,0.8862433862433863,0.5065306122448979,0.8714285714285714,0.8714285714285714,True
905,3559,circle xor blue,True,26,8,0,5,18,0.0381670956645621,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large green triangle,hg14,8,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
906,3560,circle xor blue,True,27,8,1,12,11,0.6898208768928952,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium blue rectangle,hg14,8,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
907,3561,circle xor blue,True,28,8,0,6,17,0.1719798100481284,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large blue circle,hg14,8,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
908,3562,circle xor blue,True,29,9,1,22,1,0.9921540098001742,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium green circle,hg14,9,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
909,3563,circle xor blue,True,30,9,0,2,21,0.0112600542680638,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large green triangle,hg14,9,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
910,3564,circle xor blue,True,31,9,0,3,20,0.0396802991280083,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium yellow rectangle,hg14,9,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
911,3565,circle xor blue,True,32,9,1,17,6,0.852360959311909,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large blue rectangle,hg14,9,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
912,3566,circle xor blue,True,33,10,0,2,21,0.0039302740102584,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large yellow triangle,hg14,10,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
913,3567,circle xor blue,True,34,10,0,3,20,0.1075009339003827,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small blue circle,hg14,10,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
914,3568,circle xor blue,True,35,11,0,3,20,0.0107366004018558,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium green triangle,hg14,11,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
915,3569,circle xor blue,True,36,11,0,3,20,0.0048813694894533,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,11,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
916,3570,circle xor blue,True,37,11,1,16,7,0.8157336308495359,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium blue triangle,hg14,11,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
917,3571,circle xor blue,True,38,11,0,1,22,0.0539435985878071,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large blue circle,hg14,11,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
918,3572,circle xor blue,True,39,12,1,18,5,0.985712708133974,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow circle,hg14,12,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
919,3573,circle xor blue,True,40,12,1,21,2,0.9925374936192384,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large green circle,hg14,12,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
920,3574,circle xor blue,True,41,12,0,3,20,0.0016569615038406,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small green triangle,hg14,12,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
921,3575,circle xor blue,True,42,13,1,15,8,0.8512940191739062,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small blue rectangle,hg14,13,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
922,3576,circle xor blue,True,43,13,1,16,7,0.8612108869946268,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium blue triangle,hg14,13,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
923,3577,circle xor blue,True,44,13,1,20,3,0.9925930034250996,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow circle,hg14,13,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
924,3578,circle xor blue,True,45,13,1,13,10,0.8525004061929166,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium blue rectangle,hg14,13,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
925,3579,circle xor blue,True,46,13,1,21,2,0.9936543461265046,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large yellow circle,hg14,13,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
926,3580,circle xor blue,True,47,14,1,20,3,0.9946509292633436,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small blue rectangle,hg14,14,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
927,3581,circle xor blue,True,48,14,0,6,17,0.0017844701939111,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,14,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
928,3582,circle xor blue,True,49,15,0,3,20,0.0442710407513686,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large yellow rectangle,hg14,15,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
929,3583,circle xor blue,True,50,15,0,4,19,0.0017868273936301,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium yellow triangle,hg14,15,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
930,3584,circle xor blue,True,51,16,0,3,19,0.0159358631940449,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small green rectangle,hg14,16,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
931,3585,circle xor blue,True,52,17,0,5,16,0.1628866073206154,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small blue circle,hg14,17,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
932,3586,circle xor blue,True,53,17,1,16,5,0.9915390406142705,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small green circle,hg14,17,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
933,3587,circle xor blue,True,54,17,0,3,18,0.0014848541954961,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,17,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
934,3588,circle xor blue,True,55,18,0,2,19,0.0524711018102834,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium blue circle,hg14,18,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
935,3589,circle xor blue,True,56,19,0,0,21,0.0036657322505107,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium yellow triangle,hg14,19,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
936,3590,circle xor blue,True,57,19,0,1,20,0.0120849059728698,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large yellow rectangle,hg14,19,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
937,3591,circle xor blue,True,58,19,0,1,20,0.0022452980307434,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,19,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
938,3592,circle xor blue,True,59,19,1,17,4,0.9888224835485744,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium yellow circle,hg14,19,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
939,3593,circle xor blue,True,60,20,0,1,20,0.0024727381991169,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large green triangle,hg14,20,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
940,3594,circle xor blue,True,61,20,1,18,3,0.995309300653048,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium green circle,hg14,20,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
941,3595,circle xor blue,True,62,21,0,2,19,0.0001611192548125,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,21,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
942,3596,circle xor blue,True,63,22,0,0,21,0.0001024396193542,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small yellow triangle,hg14,22,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
943,3597,circle xor blue,True,64,23,0,0,21,0.0088718088912855,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large green triangle,hg14,23,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
944,3598,circle xor blue,True,65,23,1,17,4,0.9833344752038328,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium yellow circle,hg14,23,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
945,3599,circle xor blue,True,66,23,0,3,18,0.1416328657920757,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large blue circle,hg14,23,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
946,3600,circle xor blue,True,67,23,0,0,21,0.0270207426716524,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",small green rectangle,hg14,23,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
947,3601,circle xor blue,True,68,23,0,1,20,0.0319437958668231,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",medium green rectangle,hg14,23,False,False,False,0.8862433862433863,0.5065306122448979,1.0,1.0,True
948,3602,circle xor blue,True,69,24,1,18,3,0.9936364108702946,"""λx.apply1(compose11(compose8(iff,circle),compose11(compose8(or,yellow),green)),x.o)""
",circle iff (yellow or green),"def is_rule(obj):
    return (obj.circle and (obj.yellow or obj.green)) or (not obj.circle and not (obj.yellow or obj.green)) ",large yellow circle,hg14,24,True,True,True,0.8862433862433863,0.5065306122448979,1.0,1.0,True
949,3675,large or small,True,0,0,0,12,16,0.3827672595764397,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg21,0,False,False,True,0.91,0.6346739304598623,0.759493670886076,0.759493670886076,False
950,3676,large or small,True,1,0,1,21,7,0.4713868898556938,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg21,0,True,False,True,0.91,0.6346739304598623,0.759493670886076,0.759493670886076,False
951,3677,large or small,True,2,1,0,11,17,0.4775852213728057,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg21,1,False,False,False,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
952,3678,large or small,True,3,1,1,20,8,0.5119957105291632,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg21,1,True,True,True,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
953,3679,large or small,True,4,2,1,1,27,0.3874135844953343,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg21,2,True,False,False,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
954,3680,large or small,True,5,2,0,6,22,0.2574899234448366,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg21,2,False,False,False,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
955,3681,large or small,True,6,2,1,1,27,0.3412016926034766,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg21,2,True,False,False,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
956,3682,large or small,True,7,2,1,26,2,0.7530686063736312,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg21,2,True,True,True,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
957,3683,large or small,True,8,2,1,28,0,0.6427295314982757,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue rectangle,hg21,2,True,True,True,0.91,0.6346739304598623,0.6455696202531646,0.6455696202531646,True
958,3684,large or small,True,9,3,1,16,12,0.8589526436511505,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.medium",large green triangle,hg21,3,True,True,True,0.91,0.6346739304598623,1.0,1.0,True
959,3685,large or small,True,10,3,1,11,17,0.7025462899154035,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,3,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
960,3686,large or small,True,11,3,1,23,5,0.8298252941461896,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green triangle,hg21,3,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
961,3687,large or small,True,12,4,1,18,10,0.8773293595224912,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg21,4,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
962,3688,large or small,True,13,4,1,20,8,0.78867283546424,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg21,4,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
963,3689,large or small,True,14,4,1,22,6,0.76515047768396,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg21,4,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
964,3690,large or small,True,15,5,1,26,2,0.9328900532663056,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,5,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
965,3691,large or small,True,16,5,0,11,17,0.485268870780942,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium yellow triangle,hg21,5,False,False,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
966,3692,large or small,True,17,5,1,27,1,0.9088464743692838,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg21,5,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
967,3693,large or small,True,18,6,1,25,3,0.9224631425908,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue triangle,hg21,6,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
968,3694,large or small,True,19,7,0,5,23,0.4652950220392995,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg21,7,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
969,3695,large or small,True,20,8,1,24,4,0.8883698674852666,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg21,8,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
970,3696,large or small,True,21,8,1,25,3,0.9185978515753276,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue triangle,hg21,8,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
971,3697,large or small,True,22,8,0,5,23,0.3175350195260762,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg21,8,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
972,3698,large or small,True,23,9,1,20,8,0.8463470693650378,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow circle,hg21,9,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
973,3699,large or small,True,24,9,1,24,4,0.9179138485302472,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg21,9,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
974,3700,large or small,True,25,9,1,25,3,0.8946877744806442,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg21,9,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
975,3701,large or small,True,26,9,1,25,3,0.895944723864659,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,9,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
976,3702,large or small,True,27,9,1,24,4,0.9022513866624422,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow triangle,hg21,9,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
977,3703,large or small,True,28,10,0,4,23,0.2499541934325861,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg21,10,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
978,3704,large or small,True,29,10,1,23,4,0.9534867162512908,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg21,10,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
979,3705,large or small,True,30,10,1,24,3,0.9620156164422724,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg21,10,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
980,3706,large or small,True,31,10,1,26,1,0.9919635259130928,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg21,10,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
981,3707,large or small,True,32,11,1,23,3,0.9593390864104094,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg21,11,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
982,3708,large or small,True,33,11,1,22,4,0.9880132591353004,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,11,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
983,3709,large or small,True,34,11,1,20,6,0.9503353799368596,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green triangle,hg21,11,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
984,3710,large or small,True,35,11,1,26,0,0.9881869085824064,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg21,11,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
985,3711,large or small,True,36,11,0,9,17,0.0941788668227445,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg21,11,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
986,3712,large or small,True,37,12,1,26,0,0.994270092412762,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg21,12,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
987,3713,large or small,True,38,12,1,21,5,0.9899826993976149,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow circle,hg21,12,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
988,3714,large or small,True,39,12,1,24,2,0.9944688361462112,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,12,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
989,3715,large or small,True,40,12,1,25,1,0.9965635116433303,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg21,12,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
990,3716,large or small,True,41,13,0,10,16,0.1115881864002403,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg21,13,False,False,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
991,3717,large or small,True,42,13,1,24,2,0.9702902401813844,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg21,13,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
992,3718,large or small,True,43,13,1,23,3,0.9885653669878138,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,13,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
993,3719,large or small,True,44,14,1,24,2,0.9957218483929182,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg21,14,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
994,3720,large or small,True,45,14,1,22,4,0.9944664514824808,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue rectangle,hg21,14,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
995,3721,large or small,True,46,14,1,24,2,0.993212957777473,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg21,14,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
996,3722,large or small,True,47,14,0,3,23,0.0654639858472592,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg21,14,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
997,3723,large or small,True,48,14,1,25,1,0.993083762260312,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg21,14,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
998,3724,large or small,True,49,15,0,6,19,0.0339161921618824,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg21,15,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
999,3725,large or small,True,50,15,1,24,1,0.9925011925815852,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg21,15,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1000,3726,large or small,True,51,16,1,24,1,0.9967714113992088,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow triangle,hg21,16,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1001,3727,large or small,True,52,16,1,24,1,0.9976900293256676,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg21,16,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1002,3728,large or small,True,53,16,0,3,22,0.0925805725349846,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg21,16,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1003,3729,large or small,True,54,16,1,24,1,0.9922601137486708,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg21,16,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1004,3730,large or small,True,55,17,0,5,20,0.0308133352041295,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg21,17,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1005,3731,large or small,True,56,17,1,25,0,0.9600508951318716,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg21,17,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1006,3732,large or small,True,57,18,1,23,2,0.9839056707935468,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green triangle,hg21,18,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1007,3733,large or small,True,58,18,1,25,0,0.9989343407652312,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg21,18,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1008,3734,large or small,True,59,18,0,3,22,0.0238012929044089,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg21,18,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1009,3735,large or small,True,60,18,1,23,2,0.99478616038175,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue rectangle,hg21,18,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1010,3736,large or small,True,61,18,1,24,1,0.98869126327736,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg21,18,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1011,3737,large or small,True,62,19,1,24,1,0.998754538287244,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg21,19,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1012,3738,large or small,True,63,19,0,5,20,0.0144295367514359,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg21,19,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1013,3739,large or small,True,64,19,1,22,3,0.9984974404172816,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg21,19,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1014,3740,large or small,True,65,19,1,23,2,0.9918356149513556,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green circle,hg21,19,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1015,3741,large or small,True,66,20,0,3,22,0.0063395848086429,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg21,20,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1016,3742,large or small,True,67,20,1,24,1,0.9994333916326922,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue triangle,hg21,20,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1017,3743,large or small,True,68,20,1,22,3,0.9971318019070168,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small green circle,hg21,20,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1018,3744,large or small,True,69,20,1,25,0,0.9970782538367756,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green circle,hg21,20,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1019,3745,large or small,True,70,20,0,1,24,0.0249997254733216,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium green circle,hg21,20,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1020,3746,large or small,True,71,21,1,24,0,0.9995694697113322,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small blue rectangle,hg21,21,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1021,3747,large or small,True,72,21,1,24,0,0.999491730167506,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg21,21,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1022,3748,large or small,True,73,22,0,3,21,0.0057198003512439,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg21,22,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1023,3749,large or small,True,74,23,1,21,3,0.9969209931118712,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large yellow circle,hg21,23,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1024,3750,large or small,True,75,23,1,21,3,0.9983951453664304,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg21,23,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1025,3751,large or small,True,76,23,0,4,20,0.0215419326405026,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg21,23,False,False,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1026,3752,large or small,True,77,23,1,17,7,0.9975043368052638,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",small yellow circle,hg21,23,True,True,False,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,False
1027,3753,large or small,True,78,24,1,24,0,0.9861797093308268,"""λx.apply7(not,apply1(medium,x.o))""
",not medium,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg21,24,True,True,True,0.91,0.6346739304598623,0.6075949367088608,0.6075949367088608,True
1028,3754,blue implies circle,True,0,0,0,15,9,0.4827830535651855,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg78,0,False,False,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,False
1029,3755,blue implies circle,True,1,0,0,12,12,0.4872650400162683,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg78,0,False,False,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,False
1030,3756,blue implies circle,True,2,1,1,6,18,0.2881717863136827,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg78,1,True,False,False,0.91650913673598,0.6306172839506172,0.24444444444444444,0.24444444444444444,True
1031,3757,blue implies circle,True,3,1,1,10,14,0.3227856182196546,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg78,1,True,False,False,0.91650913673598,0.6306172839506172,0.24444444444444444,0.24444444444444444,True
1032,3758,blue implies circle,True,4,1,1,9,15,0.3368971128285238,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg78,1,True,False,False,0.91650913673598,0.6306172839506172,0.24444444444444444,0.24444444444444444,True
1033,3759,blue implies circle,True,5,1,1,5,19,0.3310223161895464,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg78,1,True,False,False,0.91650913673598,0.6306172839506172,0.24444444444444444,0.24444444444444444,True
1034,3760,blue implies circle,True,6,1,1,7,17,0.3897164174821909,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg78,1,True,False,False,0.91650913673598,0.6306172839506172,0.24444444444444444,0.24444444444444444,True
1035,3761,blue implies circle,True,7,2,1,19,5,0.8055510591941583,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",medium green circle,hg78,2,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1036,3762,blue implies circle,True,8,2,0,4,20,0.4986230789568253,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small blue rectangle,hg78,2,False,False,False,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1037,3763,blue implies circle,True,9,2,1,20,4,0.7457613851606765,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",large yellow rectangle,hg78,2,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1038,3764,blue implies circle,True,10,2,1,22,2,0.9213533561887745,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",large green triangle,hg78,2,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1039,3765,blue implies circle,True,11,3,1,23,1,0.8991998347257776,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",large green rectangle,hg78,3,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1040,3766,blue implies circle,True,12,3,1,3,21,0.4908440981237163,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small blue circle,hg78,3,True,False,False,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1041,3767,blue implies circle,True,13,3,1,21,3,0.8258714304879504,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small green circle,hg78,3,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1042,3768,blue implies circle,True,14,3,1,21,3,0.8309317140274288,"""λx.apply1(compose11(compose8(or,yellow),green),x.o)""
",green or yellow,"def is_rule(obj):
    return obj.green or obj.yellow",small green rectangle,hg78,3,True,True,True,0.91650913673598,0.6306172839506172,0.9333333333333333,0.9333333333333333,True
1043,3769,blue implies circle,True,15,4,1,23,1,0.887020609119645,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg78,4,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1044,3770,blue implies circle,True,16,4,1,18,6,0.8190369016264185,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg78,4,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1045,3771,blue implies circle,True,17,4,1,22,2,0.9785761062499886,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg78,4,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1046,3772,blue implies circle,True,18,4,1,18,6,0.8293853098000454,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg78,4,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1047,3773,blue implies circle,True,19,4,1,23,1,0.9476685256155406,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg78,4,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1048,3774,blue implies circle,True,20,5,1,20,4,0.7554155221785094,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg78,5,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1049,3775,blue implies circle,True,21,5,1,20,4,0.7751748653954564,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg78,5,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1050,3776,blue implies circle,True,22,6,1,22,2,0.9036415481793936,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg78,6,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1051,3777,blue implies circle,True,23,6,1,20,4,0.9767513051206153,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg78,6,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1052,3778,blue implies circle,True,24,6,1,22,2,0.9641077288559928,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg78,6,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1053,3779,blue implies circle,True,25,6,1,22,2,0.9866253411440766,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg78,6,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1054,3780,blue implies circle,True,26,7,1,23,1,0.979514977363692,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg78,7,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1055,3781,blue implies circle,True,27,7,1,23,1,0.9821094797185878,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg78,7,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1056,3782,blue implies circle,True,28,7,1,21,3,0.8746896605316578,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg78,7,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1057,3783,blue implies circle,True,29,7,1,24,0,0.982501493439372,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg78,7,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1058,3784,blue implies circle,True,30,8,0,10,14,0.6869047639671634,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg78,8,False,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1059,3785,blue implies circle,True,31,8,1,23,1,0.9564570665487508,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg78,8,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1060,3786,blue implies circle,True,32,8,0,5,19,0.6952674008200574,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg78,8,False,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1061,3787,blue implies circle,True,33,8,1,23,1,0.9557662508224212,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg78,8,True,True,True,0.91650913673598,0.6306172839506172,0.7555555555555555,0.7555555555555555,True
1062,3788,blue implies circle,True,34,9,1,22,1,0.8971659336342555,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue circle,hg78,9,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1063,3789,blue implies circle,True,35,9,0,9,14,0.1598391356674255,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue triangle,hg78,9,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1064,3790,blue implies circle,True,36,9,1,23,0,0.983737809396416,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green triangle,hg78,9,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1065,3791,blue implies circle,True,37,10,0,7,16,0.1215931547441186,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue rectangle,hg78,10,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1066,3792,blue implies circle,True,38,10,0,5,18,0.0991983685356672,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue triangle,hg78,10,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1067,3793,blue implies circle,True,39,10,0,8,15,0.1177485419447066,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue rectangle,hg78,10,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1068,3794,blue implies circle,True,40,11,1,20,3,0.9570935548243824,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow circle,hg78,11,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1069,3795,blue implies circle,True,41,11,1,20,3,0.9683770626191972,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green circle,hg78,11,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1070,3796,blue implies circle,True,42,11,0,3,20,0.052273018082019,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue triangle,hg78,11,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1071,3797,blue implies circle,True,43,12,1,20,3,0.9892717162211964,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium yellow circle,hg78,12,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1072,3798,blue implies circle,True,44,12,1,22,1,0.9905853461835932,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green triangle,hg78,12,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1073,3799,blue implies circle,True,45,12,1,21,2,0.9684315237017244,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow rectangle,hg78,12,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1074,3800,blue implies circle,True,46,12,1,21,2,0.989728454246574,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green rectangle,hg78,12,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1075,3801,blue implies circle,True,47,12,0,5,18,0.0353655513874855,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue rectangle,hg78,12,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1076,3802,blue implies circle,True,48,13,1,20,3,0.9988973297391794,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green triangle,hg78,13,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1077,3803,blue implies circle,True,49,13,1,21,2,0.9974475549560112,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green circle,hg78,13,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1078,3804,blue implies circle,True,50,13,0,2,21,0.0496354328035977,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue triangle,hg78,13,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1079,3805,blue implies circle,True,51,13,1,21,2,0.9987229818854076,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green rectangle,hg78,13,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1080,3806,blue implies circle,True,52,13,1,21,2,0.9810023085788088,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large yellow triangle,hg78,13,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1081,3807,blue implies circle,True,53,14,1,20,3,0.997687474944314,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green circle,hg78,14,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1082,3808,blue implies circle,True,54,14,1,21,2,0.993121680133413,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium yellow triangle,hg78,14,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1083,3809,blue implies circle,True,55,14,0,3,20,0.0141956365918076,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue rectangle,hg78,14,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1084,3810,blue implies circle,True,56,14,1,22,1,0.9946520276337196,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow triangle,hg78,14,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1085,3811,blue implies circle,True,57,14,0,3,20,0.0197998070235598,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue triangle,hg78,14,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1086,3812,blue implies circle,True,58,15,0,2,21,0.0026011172250264,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue rectangle,hg78,15,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1087,3813,blue implies circle,True,59,15,1,20,3,0.9991685661042312,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green triangle,hg78,15,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1088,3814,blue implies circle,True,60,15,1,19,4,0.998590679503536,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow rectangle,hg78,15,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1089,3815,blue implies circle,True,61,15,0,2,21,0.0067712511324771,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue rectangle,hg78,15,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1090,3816,blue implies circle,True,62,15,1,21,2,0.998829112828048,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow triangle,hg78,15,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1091,3817,blue implies circle,True,63,16,0,0,23,0.0010820951301866,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue rectangle,hg78,16,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1092,3818,blue implies circle,True,64,16,1,22,1,0.9992812331579444,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green rectangle,hg78,16,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1093,3819,blue implies circle,True,65,16,1,21,2,0.9987509340061252,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium yellow rectangle,hg78,16,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1094,3820,blue implies circle,True,66,16,1,21,2,0.996191237899552,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow circle,hg78,16,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1095,3821,blue implies circle,True,67,17,1,21,2,0.9993860517828352,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green triangle,hg78,17,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1096,3822,blue implies circle,True,68,17,1,20,3,0.998012419677252,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green circle,hg78,17,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1097,3823,blue implies circle,True,69,18,1,22,1,0.7631523267950797,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue circle,hg78,18,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1098,3824,blue implies circle,True,70,18,0,3,20,0.0045920528986016,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue rectangle,hg78,18,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1099,3825,blue implies circle,True,71,18,1,20,3,0.9993538526699693,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green rectangle,hg78,18,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1100,3826,blue implies circle,True,72,18,1,21,2,0.9995337096145248,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green triangle,hg78,18,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1101,3827,blue implies circle,True,73,19,1,21,1,0.9962197226791432,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large yellow rectangle,hg78,19,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1102,3828,blue implies circle,True,74,19,1,22,0,0.9994461842692316,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green triangle,hg78,19,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1103,3829,blue implies circle,True,75,20,1,21,1,0.9952551731048516,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green circle,hg78,20,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1104,3830,blue implies circle,True,76,20,1,22,0,0.9992281371745548,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green triangle,hg78,20,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1105,3831,blue implies circle,True,77,20,1,21,1,0.9938576209634676,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small yellow circle,hg78,20,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1106,3832,blue implies circle,True,78,20,1,22,0,0.9978377520267258,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium yellow triangle,hg78,20,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1107,3833,blue implies circle,True,79,21,0,1,21,0.0142834579326063,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large blue triangle,hg78,21,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1108,3834,blue implies circle,True,80,21,0,1,21,0.0140912038172018,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium blue triangle,hg78,21,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1109,3835,blue implies circle,True,81,21,1,22,0,0.9991385403842514,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green circle,hg78,21,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1110,3836,blue implies circle,True,82,21,1,22,0,0.9991181889874952,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large green rectangle,hg78,21,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1111,3837,blue implies circle,True,83,21,0,1,21,0.0296354272526286,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue triangle,hg78,21,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1112,3838,blue implies circle,True,84,22,1,20,2,0.9997171773067066,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green triangle,hg78,22,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1113,3839,blue implies circle,True,85,22,1,21,1,0.9994328432132988,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green circle,hg78,22,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1114,3840,blue implies circle,True,86,22,0,3,19,0.0070921753361972,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small blue rectangle,hg78,22,False,False,False,0.91650913673598,0.6306172839506172,1.0,1.0,True
1115,3841,blue implies circle,True,87,22,1,20,2,0.9997202539317412,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",medium green rectangle,hg78,22,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1116,3842,blue implies circle,True,88,23,1,22,0,0.9979628522672784,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",large yellow triangle,hg78,23,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1117,3843,blue implies circle,True,89,24,1,21,1,0.9993746871843996,"""λx.apply7(apply9(or,apply1(compose11(compose8(or,yellow),circle),x.o)),apply1(green,x.o))""
",(circle or yellow) or green,"def is_rule(obj):
    return (obj.circle or obj.yellow) or obj.green",small green rectangle,hg78,24,True,True,True,0.91650913673598,0.6306172839506172,1.0,1.0,True
1118,4154,circle and (not blue),True,0,0,0,14,9,0.4482453661869385,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg10,0,False,False,True,0.9977116704805492,0.6734847063238882,0.2054794520547945,0.2054794520547945,False
1119,4155,circle and (not blue),True,1,0,1,8,15,0.4734516040532525,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg10,0,True,False,True,0.9977116704805492,0.6734847063238882,0.2054794520547945,0.2054794520547945,False
1120,4156,circle and (not blue),True,2,1,0,4,19,0.4712382892083724,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue rectangle,hg10,1,False,False,True,0.9977116704805492,0.6734847063238882,0.3561643835616438,0.3561643835616438,False
1121,4157,circle and (not blue),True,3,1,0,3,20,0.385692194591229,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg10,1,False,False,True,0.9977116704805492,0.6734847063238882,0.3561643835616438,0.3561643835616438,False
1122,4158,circle and (not blue),True,4,1,0,10,13,0.4715867919201173,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green rectangle,hg10,1,False,False,True,0.9977116704805492,0.6734847063238882,0.3561643835616438,0.3561643835616438,False
1123,4159,circle and (not blue),True,5,2,0,13,10,0.4596955478916697,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg10,2,False,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1124,4160,circle and (not blue),True,6,2,0,12,11,0.4046501732975684,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg10,2,False,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1125,4161,circle and (not blue),True,7,3,0,1,22,0.1707157886471577,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg10,3,False,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1126,4162,circle and (not blue),True,8,3,0,0,23,0.1199444751448481,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg10,3,False,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1127,4163,circle and (not blue),True,9,4,0,1,22,0.2774239553057213,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg10,4,False,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1128,4164,circle and (not blue),True,10,4,1,4,19,0.394678844650798,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg10,4,True,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1129,4165,circle and (not blue),True,11,4,1,17,6,0.338079324730188,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg10,4,True,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1130,4166,circle and (not blue),True,12,4,1,1,22,0.3238165883846022,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg10,4,True,False,False,0.9977116704805492,0.6734847063238882,0.7945205479452054,0.7945205479452054,True
1131,4167,circle and (not blue),True,13,5,0,0,23,0.1010406393570519,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green rectangle,hg10,5,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1132,4168,circle and (not blue),True,14,5,1,22,1,0.8473543779215333,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow circle,hg10,5,True,True,True,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1133,4169,circle and (not blue),True,15,5,0,1,22,0.0897804031092164,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg10,5,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1134,4170,circle and (not blue),True,16,5,0,1,22,0.1126103493578511,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow rectangle,hg10,5,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1135,4171,circle and (not blue),True,17,5,0,0,23,0.0753522503222257,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green triangle,hg10,5,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1136,4172,circle and (not blue),True,18,6,0,0,23,0.1299597366056559,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large blue triangle,hg10,6,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1137,4173,circle and (not blue),True,19,6,1,20,3,0.8515819399507336,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green circle,hg10,6,True,True,True,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1138,4174,circle and (not blue),True,20,7,0,0,23,0.0312618138842708,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg10,7,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1139,4175,circle and (not blue),True,21,7,0,0,23,0.0192563482910372,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green rectangle,hg10,7,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1140,4176,circle and (not blue),True,22,7,0,0,23,0.0431525009422557,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green rectangle,hg10,7,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1141,4177,circle and (not blue),True,23,8,0,0,23,0.0175313232858798,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green rectangle,hg10,8,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1142,4178,circle and (not blue),True,24,8,0,0,23,0.0165342797811263,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green rectangle,hg10,8,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1143,4179,circle and (not blue),True,25,8,0,6,17,0.4095055865265067,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue circle,hg10,8,False,False,True,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,False
1144,4180,circle and (not blue),True,26,8,0,0,23,0.0090741096183819,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green triangle,hg10,8,False,False,False,0.9977116704805492,0.6734847063238882,0.8904109589041096,0.8904109589041096,True
1145,4181,circle and (not blue),True,27,9,0,0,23,0.0558651321699699,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium yellow rectangle,hg10,9,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1146,4182,circle and (not blue),True,28,9,0,2,21,0.174650819242629,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue circle,hg10,9,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1147,4183,circle and (not blue),True,29,9,1,22,1,0.7485978879412868,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large green circle,hg10,9,True,True,True,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1148,4184,circle and (not blue),True,30,10,1,23,0,0.8767171186307223,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium green circle,hg10,10,True,True,True,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1149,4185,circle and (not blue),True,31,10,0,0,23,0.0217169611887584,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large green rectangle,hg10,10,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1150,4186,circle and (not blue),True,32,11,0,0,23,0.0082303469110911,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green rectangle,hg10,11,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1151,4187,circle and (not blue),True,33,11,0,0,23,0.0180532381950797,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium yellow triangle,hg10,11,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1152,4188,circle and (not blue),True,34,11,0,0,23,0.0487606210808735,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small blue rectangle,hg10,11,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1153,4189,circle and (not blue),True,35,11,0,0,23,0.0525811126871076,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large blue rectangle,hg10,11,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1154,4190,circle and (not blue),True,36,11,0,1,22,0.019619861082333,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large yellow triangle,hg10,11,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1155,4191,circle and (not blue),True,37,12,1,23,0,0.9147999774208984,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium green circle,hg10,12,True,True,True,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1156,4192,circle and (not blue),True,38,13,0,1,22,0.008662267400382,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green rectangle,hg10,13,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1157,4193,circle and (not blue),True,39,13,0,0,23,0.0263624207657358,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",large blue triangle,hg10,13,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1158,4194,circle and (not blue),True,40,13,0,2,21,0.2508272570585177,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue circle,hg10,13,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1159,4195,circle and (not blue),True,41,14,0,0,23,0.0885728922057751,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue circle,hg10,14,False,False,False,0.9977116704805492,0.6734847063238882,1.0,1.0,True
1160,4196,circle and (not blue),True,42,15,0,0,23,0.0170559717731748,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium blue rectangle,hg10,15,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1161,4197,circle and (not blue),True,43,16,0,0,23,0.0217893287349397,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow rectangle,hg10,16,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1162,4198,circle and (not blue),True,44,16,0,0,23,0.013765946791409,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small blue triangle,hg10,16,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1163,4199,circle and (not blue),True,45,16,0,1,22,0.0836554531692854,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium blue circle,hg10,16,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1164,4200,circle and (not blue),True,46,17,0,0,23,0.0244793241598699,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium yellow rectangle,hg10,17,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1165,4201,circle and (not blue),True,47,17,1,23,0,0.7911029965135867,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large green circle,hg10,17,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1166,4202,circle and (not blue),True,48,17,1,23,0,0.8028892008021556,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium green circle,hg10,17,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1167,4203,circle and (not blue),True,49,17,0,0,23,0.015734580927301,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small blue rectangle,hg10,17,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1168,4204,circle and (not blue),True,50,18,0,0,23,0.0025234586445321,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow triangle,hg10,18,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1169,4205,circle and (not blue),True,51,18,0,0,23,0.00891783367274,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large blue triangle,hg10,18,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1170,4206,circle and (not blue),True,52,19,0,0,23,0.0033931662132999,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow triangle,hg10,19,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1171,4207,circle and (not blue),True,53,19,1,23,0,0.9523093784425782,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium green circle,hg10,19,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1172,4208,circle and (not blue),True,54,19,0,1,22,0.1033959105232042,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small blue circle,hg10,19,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1173,4209,circle and (not blue),True,55,19,0,0,23,0.0069411602100899,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large blue triangle,hg10,19,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1174,4210,circle and (not blue),True,56,20,0,0,23,0.0029372292121934,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium blue triangle,hg10,20,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1175,4211,circle and (not blue),True,57,20,0,0,23,0.0012915101079897,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow rectangle,hg10,20,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1176,4212,circle and (not blue),True,58,21,0,0,23,0.0006646015733622,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small blue triangle,hg10,21,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1177,4213,circle and (not blue),True,59,21,0,0,23,0.0006276704899619,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow rectangle,hg10,21,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1178,4214,circle and (not blue),True,60,22,1,23,0,0.8958600587108094,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small green circle,hg10,22,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1179,4215,circle and (not blue),True,61,22,0,0,23,0.0190001910100363,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small green triangle,hg10,22,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1180,4216,circle and (not blue),True,62,22,0,0,23,0.0386887909888855,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium green rectangle,hg10,22,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1181,4217,circle and (not blue),True,63,22,0,0,23,0.0074957361385941,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium yellow triangle,hg10,22,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1182,4218,circle and (not blue),True,64,22,0,0,23,0.0045821639811265,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small yellow rectangle,hg10,22,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1183,4219,circle and (not blue),True,65,23,0,0,23,0.0014485476567642,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium yellow rectangle,hg10,23,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1184,4220,circle and (not blue),True,66,23,0,0,23,0.004206539838151,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large yellow rectangle,hg10,23,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1185,4221,circle and (not blue),True,67,23,1,23,0,0.9726561450777352,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small green circle,hg10,23,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1186,4222,circle and (not blue),True,68,23,0,0,23,0.0042779199353617,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large green rectangle,hg10,23,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1187,4223,circle and (not blue),True,69,24,0,0,23,0.0001598924206973,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",medium yellow rectangle,hg10,24,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1188,4224,circle and (not blue),True,70,24,0,0,23,0.000844095915113,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large green rectangle,hg10,24,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1189,4225,circle and (not blue),True,71,24,1,23,0,0.9870733413803237,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",small green circle,hg10,24,True,True,True,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1190,4226,circle and (not blue),True,72,24,0,0,23,0.000247065423764,"""λx.apply1(compose11(compose8(and,circle),green),x.o)""
",circle and green,"def is_rule(obj):
    return obj.circle and obj.green",large yellow rectangle,hg10,24,False,False,False,0.9977116704805492,0.6734847063238882,0.958904109589041,0.958904109589041,True
1191,4227,circle or (triangle implies blue),True,0,0,1,12,12,0.4775930634561973,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg86,0,True,False,True,0.917184265010352,0.6653125,0.7875,0.7875,False
1192,4228,circle or (triangle implies blue),True,1,0,1,12,12,0.424665655203853,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg86,0,True,False,True,0.917184265010352,0.6653125,0.7875,0.7875,False
1193,4229,circle or (triangle implies blue),True,2,0,0,10,14,0.4020645856325018,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg86,0,False,False,True,0.917184265010352,0.6653125,0.7875,0.7875,False
1194,4230,circle or (triangle implies blue),True,3,1,1,14,10,0.4582035036138449,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green rectangle,hg86,1,True,False,False,0.917184265010352,0.6653125,0.425,0.425,True
1195,4231,circle or (triangle implies blue),True,4,1,0,4,20,0.283985205334261,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green triangle,hg86,1,False,False,False,0.917184265010352,0.6653125,0.425,0.425,True
1196,4232,circle or (triangle implies blue),True,5,2,1,5,19,0.4679471873953389,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow circle,hg86,2,True,False,True,0.917184265010352,0.6653125,0.8875,0.8875,False
1197,4233,circle or (triangle implies blue),True,6,2,1,4,20,0.5170692063260275,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg86,2,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1198,4234,circle or (triangle implies blue),True,7,3,1,19,5,0.733395283993218,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large yellow rectangle,hg86,3,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1199,4235,circle or (triangle implies blue),True,8,3,1,15,9,0.7430605151375858,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg86,3,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1200,4236,circle or (triangle implies blue),True,9,4,1,7,17,0.6423962502396989,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue triangle,hg86,4,True,True,False,0.917184265010352,0.6653125,0.8875,0.8875,False
1201,4237,circle or (triangle implies blue),True,10,4,1,4,20,0.6028459713587608,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue triangle,hg86,4,True,True,False,0.917184265010352,0.6653125,0.8875,0.8875,False
1202,4238,circle or (triangle implies blue),True,11,4,1,24,0,0.8857267868212375,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow circle,hg86,4,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1203,4239,circle or (triangle implies blue),True,12,5,0,14,10,0.6631829604566519,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg86,5,False,True,True,0.917184265010352,0.6653125,0.7875,0.7875,True
1204,4240,circle or (triangle implies blue),True,13,5,1,19,5,0.8634800121435546,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg86,5,True,True,True,0.917184265010352,0.6653125,0.7875,0.7875,True
1205,4241,circle or (triangle implies blue),True,14,5,1,20,4,0.7954614272927074,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg86,5,True,True,True,0.917184265010352,0.6653125,0.7875,0.7875,True
1206,4242,circle or (triangle implies blue),True,15,5,1,20,4,0.9109405890659444,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg86,5,True,True,True,0.917184265010352,0.6653125,0.7875,0.7875,True
1207,4243,circle or (triangle implies blue),True,16,6,0,11,13,0.4320216969180137,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small yellow triangle,hg86,6,False,False,True,0.917184265010352,0.6653125,0.7625,0.7625,False
1208,4244,circle or (triangle implies blue),True,17,6,0,5,19,0.3506877307927425,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green triangle,hg86,6,False,False,False,0.917184265010352,0.6653125,0.7625,0.7625,True
1209,4245,circle or (triangle implies blue),True,18,6,1,23,1,0.9301454529086186,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small blue circle,hg86,6,True,True,True,0.917184265010352,0.6653125,0.7625,0.7625,True
1210,4246,circle or (triangle implies blue),True,19,6,1,20,4,0.8303906199561197,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green rectangle,hg86,6,True,True,False,0.917184265010352,0.6653125,0.7625,0.7625,False
1211,4247,circle or (triangle implies blue),True,20,7,0,4,19,0.090672096029948,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green triangle,hg86,7,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1212,4248,circle or (triangle implies blue),True,21,7,1,21,2,0.9489442297389132,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium yellow rectangle,hg86,7,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1213,4249,circle or (triangle implies blue),True,22,7,1,21,2,0.9234440958796312,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,7,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1214,4250,circle or (triangle implies blue),True,23,8,1,22,1,0.9572518626901,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,8,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1215,4251,circle or (triangle implies blue),True,24,9,1,17,6,0.9070279076546512,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue rectangle,hg86,9,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1216,4252,circle or (triangle implies blue),True,25,10,1,20,3,0.864241211837907,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green rectangle,hg86,10,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1217,4253,circle or (triangle implies blue),True,26,10,1,21,2,0.9450293250054072,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue circle,hg86,10,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1218,4254,circle or (triangle implies blue),True,27,10,1,20,3,0.911217720874106,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow circle,hg86,10,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1219,4255,circle or (triangle implies blue),True,28,10,1,23,0,0.8557904053194533,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green rectangle,hg86,10,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1220,4256,circle or (triangle implies blue),True,29,10,0,5,18,0.2763719523879899,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow triangle,hg86,10,False,False,False,0.917184265010352,0.6653125,0.8875,0.8875,True
1221,4257,circle or (triangle implies blue),True,30,11,0,3,20,0.1013645398797962,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green triangle,hg86,11,False,False,False,0.917184265010352,0.6653125,0.8875,0.8875,True
1222,4258,circle or (triangle implies blue),True,31,11,1,22,1,0.9792000825522108,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow circle,hg86,11,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1223,4259,circle or (triangle implies blue),True,32,12,1,22,1,0.9882774391156772,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow circle,hg86,12,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1224,4260,circle or (triangle implies blue),True,33,12,1,21,2,0.9676980936682184,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow rectangle,hg86,12,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1225,4261,circle or (triangle implies blue),True,34,12,1,21,2,0.9787092873751816,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large yellow circle,hg86,12,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1226,4262,circle or (triangle implies blue),True,35,12,1,21,2,0.9661826325725542,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow rectangle,hg86,12,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1227,4263,circle or (triangle implies blue),True,36,12,1,20,3,0.9708032185282036,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small green circle,hg86,12,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1228,4264,circle or (triangle implies blue),True,37,13,1,23,0,0.9734072347981736,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue rectangle,hg86,13,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1229,4265,circle or (triangle implies blue),True,38,14,1,18,5,0.7679902194246324,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large blue triangle,hg86,14,True,True,False,0.917184265010352,0.6653125,0.8875,0.8875,False
1230,4266,circle or (triangle implies blue),True,39,14,1,20,3,0.9876642138804071,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow circle,hg86,14,True,True,True,0.917184265010352,0.6653125,0.8875,0.8875,True
1231,4267,circle or (triangle implies blue),True,40,14,0,5,18,0.1565579216878631,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow triangle,hg86,14,False,False,False,0.917184265010352,0.6653125,0.8875,0.8875,True
1232,4268,circle or (triangle implies blue),True,41,15,1,19,4,0.9018990135177772,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue triangle,hg86,15,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1233,4269,circle or (triangle implies blue),True,42,16,1,20,3,0.9743131144147128,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue circle,hg86,16,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1234,4270,circle or (triangle implies blue),True,43,16,1,23,0,0.9811039316408596,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,16,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1235,4271,circle or (triangle implies blue),True,44,16,1,21,2,0.9892375799391856,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small yellow circle,hg86,16,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1236,4272,circle or (triangle implies blue),True,45,16,1,21,2,0.9615252714327198,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow rectangle,hg86,16,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1237,4273,circle or (triangle implies blue),True,46,16,1,22,1,0.9841485477948027,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small blue rectangle,hg86,16,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1238,4274,circle or (triangle implies blue),True,47,17,0,3,20,0.1827441451290496,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small yellow triangle,hg86,17,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1239,4275,circle or (triangle implies blue),True,48,17,1,19,4,0.9667225753215688,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green circle,hg86,17,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1240,4276,circle or (triangle implies blue),True,49,17,1,21,2,0.9292001340236312,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue triangle,hg86,17,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1241,4277,circle or (triangle implies blue),True,50,17,0,5,18,0.1649581260188597,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small green triangle,hg86,17,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1242,4278,circle or (triangle implies blue),True,51,18,1,19,4,0.9703806980910484,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small yellow rectangle,hg86,18,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1243,4279,circle or (triangle implies blue),True,52,18,0,4,19,0.0194718281095447,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium green triangle,hg86,18,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1244,4280,circle or (triangle implies blue),True,53,18,1,20,3,0.9710280219226206,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small blue triangle,hg86,18,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1245,4281,circle or (triangle implies blue),True,54,18,1,19,4,0.993105169495834,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large blue circle,hg86,18,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1246,4282,circle or (triangle implies blue),True,55,18,1,20,3,0.9947341595265016,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue rectangle,hg86,18,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1247,4283,circle or (triangle implies blue),True,56,19,1,22,1,0.9970354321951616,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue circle,hg86,19,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1248,4284,circle or (triangle implies blue),True,57,20,1,19,4,0.9689531597050518,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large blue triangle,hg86,20,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1249,4285,circle or (triangle implies blue),True,58,20,1,22,1,0.9981828416761118,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue circle,hg86,20,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1250,4286,circle or (triangle implies blue),True,59,20,1,22,1,0.96547158430144,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small blue triangle,hg86,20,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1251,4287,circle or (triangle implies blue),True,60,20,1,20,3,0.972379867417544,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green rectangle,hg86,20,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1252,4288,circle or (triangle implies blue),True,61,21,0,3,20,0.073371279895241,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium green triangle,hg86,21,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1253,4289,circle or (triangle implies blue),True,62,21,1,22,1,0.9927231671141498,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow rectangle,hg86,21,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1254,4290,circle or (triangle implies blue),True,63,21,1,23,0,0.991131901835388,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium yellow circle,hg86,21,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1255,4291,circle or (triangle implies blue),True,64,21,1,22,1,0.9985100752284096,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small blue circle,hg86,21,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1256,4292,circle or (triangle implies blue),True,65,22,1,21,2,0.9781589887078324,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium green rectangle,hg86,22,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1257,4293,circle or (triangle implies blue),True,66,22,1,22,1,0.9970141965284256,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,22,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1258,4294,circle or (triangle implies blue),True,67,22,1,22,1,0.976785983087666,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small green rectangle,hg86,22,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1259,4295,circle or (triangle implies blue),True,68,22,1,22,1,0.9984332784504204,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large blue circle,hg86,22,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1260,4296,circle or (triangle implies blue),True,69,22,0,4,19,0.0373474190314482,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium yellow triangle,hg86,22,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1261,4297,circle or (triangle implies blue),True,70,23,1,21,2,0.9991881777610842,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium blue rectangle,hg86,23,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1262,4298,circle or (triangle implies blue),True,71,23,1,21,2,0.9985149539110124,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,23,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1263,4299,circle or (triangle implies blue),True,72,23,0,4,19,0.0139743764940476,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",medium yellow triangle,hg86,23,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1264,4300,circle or (triangle implies blue),True,73,23,1,23,0,0.9987486321982714,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow rectangle,hg86,23,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1265,4301,circle or (triangle implies blue),True,74,23,0,4,19,0.0199842414197064,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green triangle,hg86,23,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1266,4302,circle or (triangle implies blue),True,75,24,1,22,1,0.999060114087797,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large yellow circle,hg86,24,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1267,4303,circle or (triangle implies blue),True,76,24,1,20,3,0.9982131017784468,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small green circle,hg86,24,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1268,4304,circle or (triangle implies blue),True,77,24,1,21,2,0.999404089768177,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",small blue rectangle,hg86,24,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1269,4305,circle or (triangle implies blue),True,78,24,0,1,22,0.0043027791022041,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green triangle,hg86,24,False,False,False,0.917184265010352,0.6653125,1.0,1.0,True
1270,4306,circle or (triangle implies blue),True,79,24,1,20,3,0.9984489820972156,"""λx.apply1(compose11(compose8(or,compose2(not,triangle)),blue),x.o)""
",(not triangle) or blue,"def is_rule(obj):
    return (not obj.triangle) or obj.blue",large green circle,hg86,24,True,True,True,0.917184265010352,0.6653125,1.0,1.0,True
1271,4307,(circle or triangle) implies blue,True,0,0,1,12,14,0.4618566941123845,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg82,0,True,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1272,4308,(circle or triangle) implies blue,True,1,1,1,17,9,0.6878893572022661,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg82,1,True,True,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,True
1273,4309,(circle or triangle) implies blue,True,2,2,1,25,1,0.8785518732222499,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg82,2,True,True,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,True
1274,4310,(circle or triangle) implies blue,True,3,3,0,3,23,0.482831335851074,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg82,3,False,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1275,4311,(circle or triangle) implies blue,True,4,3,0,3,23,0.4965452362060887,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg82,3,False,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1276,4312,(circle or triangle) implies blue,True,5,3,0,13,13,0.5640168339252795,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg82,3,False,True,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,True
1277,4313,(circle or triangle) implies blue,True,6,4,1,2,24,0.1982129424371805,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow rectangle,hg82,4,True,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1278,4314,(circle or triangle) implies blue,True,7,4,0,5,21,0.246151724760125,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg82,4,False,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1279,4315,(circle or triangle) implies blue,True,8,4,0,7,19,0.1547122116533046,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green triangle,hg82,4,False,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1280,4316,(circle or triangle) implies blue,True,9,5,0,5,19,0.16211351862853,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium yellow triangle,hg82,5,False,False,True,0.9203869047619048,0.5012093523246439,0.6721311475409836,0.6721311475409836,False
1281,4317,(circle or triangle) implies blue,True,10,5,0,4,20,0.0606243476609051,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green triangle,hg82,5,False,False,False,0.9203869047619048,0.5012093523246439,0.6721311475409836,0.6721311475409836,True
1282,4318,(circle or triangle) implies blue,True,11,6,0,6,18,0.2252284367740458,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green circle,hg82,6,False,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1283,4319,(circle or triangle) implies blue,True,12,6,1,3,21,0.2519798850330516,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green rectangle,hg82,6,True,False,True,0.9203869047619048,0.5012093523246439,0.5245901639344263,0.5245901639344263,False
1284,4320,(circle or triangle) implies blue,True,13,7,0,2,22,0.0903876045208562,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow triangle,hg82,7,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1285,4321,(circle or triangle) implies blue,True,14,7,0,4,20,0.1428896855336461,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large yellow circle,hg82,7,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1286,4322,(circle or triangle) implies blue,True,15,7,0,4,20,0.1957719666730781,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small green triangle,hg82,7,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1287,4323,(circle or triangle) implies blue,True,16,7,0,0,24,0.2494414715522452,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small yellow triangle,hg82,7,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1288,4324,(circle or triangle) implies blue,True,17,7,1,17,7,0.5714392536742707,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small green rectangle,hg82,7,True,True,True,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1289,4325,(circle or triangle) implies blue,True,18,8,0,4,20,0.10047210708899,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small green circle,hg82,8,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1290,4326,(circle or triangle) implies blue,True,19,8,0,3,21,0.0360461212671907,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small yellow triangle,hg82,8,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1291,4327,(circle or triangle) implies blue,True,20,8,1,11,13,0.5754381822007417,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large blue triangle,hg82,8,True,True,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,False
1292,4328,(circle or triangle) implies blue,True,21,9,1,17,7,0.7831640650632608,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small blue rectangle,hg82,9,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1293,4329,(circle or triangle) implies blue,True,22,9,1,18,6,0.7723568956121198,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium blue rectangle,hg82,9,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1294,4330,(circle or triangle) implies blue,True,23,10,0,3,21,0.0861424967085895,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green circle,hg82,10,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1295,4331,(circle or triangle) implies blue,True,24,10,1,19,5,0.5833122213329033,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small yellow rectangle,hg82,10,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1296,4332,(circle or triangle) implies blue,True,25,11,1,16,8,0.7844357470770545,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large blue circle,hg82,11,True,True,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,False
1297,4333,(circle or triangle) implies blue,True,26,11,1,18,6,0.7613799091709552,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small blue triangle,hg82,11,True,True,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,False
1298,4334,(circle or triangle) implies blue,True,27,11,0,2,22,0.0419005249315205,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow triangle,hg82,11,False,False,False,0.9203869047619048,0.5012093523246439,0.7704918032786885,0.7704918032786885,True
1299,4335,(circle or triangle) implies blue,True,28,12,1,21,3,0.6858613339967405,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green rectangle,hg82,12,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1300,4336,(circle or triangle) implies blue,True,29,12,1,21,3,0.698951411220264,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large green rectangle,hg82,12,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1301,4337,(circle or triangle) implies blue,True,30,12,0,3,21,0.0612873648580034,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large yellow triangle,hg82,12,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1302,4338,(circle or triangle) implies blue,True,31,12,1,21,3,0.9526197912722408,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large blue triangle,hg82,12,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1303,4339,(circle or triangle) implies blue,True,32,13,0,6,18,0.0318356587848711,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large green triangle,hg82,13,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1304,4340,(circle or triangle) implies blue,True,33,14,1,22,2,0.9421231454920188,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large blue circle,hg82,14,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1305,4341,(circle or triangle) implies blue,True,34,14,1,20,4,0.8325858271795141,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow rectangle,hg82,14,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1306,4342,(circle or triangle) implies blue,True,35,14,0,1,23,0.1025751933723313,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow circle,hg82,14,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1307,4343,(circle or triangle) implies blue,True,36,14,1,23,1,0.8887666175328376,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green rectangle,hg82,14,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1308,4344,(circle or triangle) implies blue,True,37,15,1,21,3,0.963793295852156,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow rectangle,hg82,15,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1309,4345,(circle or triangle) implies blue,True,38,15,1,22,2,0.9951192159234096,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large blue rectangle,hg82,15,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1310,4346,(circle or triangle) implies blue,True,39,16,1,23,1,0.9782442747608684,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium green rectangle,hg82,16,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1311,4347,(circle or triangle) implies blue,True,40,17,1,19,5,0.9161404084583182,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small blue triangle,hg82,17,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1312,4348,(circle or triangle) implies blue,True,41,17,1,20,4,0.9201248761663692,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium blue circle,hg82,17,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1313,4349,(circle or triangle) implies blue,True,42,17,0,3,21,0.0501847556949996,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green triangle,hg82,17,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1314,4350,(circle or triangle) implies blue,True,43,18,0,2,22,0.1143269496247967,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow circle,hg82,18,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1315,4351,(circle or triangle) implies blue,True,44,19,0,1,23,0.0487159481670005,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium green circle,hg82,19,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1316,4352,(circle or triangle) implies blue,True,45,19,0,1,23,0.0482586133624636,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small yellow circle,hg82,19,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1317,4353,(circle or triangle) implies blue,True,46,19,1,21,3,0.9095486263901192,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow rectangle,hg82,19,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1318,4354,(circle or triangle) implies blue,True,47,19,0,3,21,0.0577682946089908,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large green circle,hg82,19,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1319,4355,(circle or triangle) implies blue,True,48,19,0,1,23,0.040343514623828,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow circle,hg82,19,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1320,4356,(circle or triangle) implies blue,True,49,20,0,0,24,0.0034362275146122,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green circle,hg82,20,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1321,4357,(circle or triangle) implies blue,True,50,20,1,24,0,0.9716431658147257,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow rectangle,hg82,20,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1322,4358,(circle or triangle) implies blue,True,51,20,0,1,23,0.0012844012559298,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow circle,hg82,20,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1323,4359,(circle or triangle) implies blue,True,52,20,1,23,1,0.9717558600611936,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large yellow rectangle,hg82,20,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1324,4360,(circle or triangle) implies blue,True,53,20,1,19,5,0.9687156523347084,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium blue circle,hg82,20,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1325,4361,(circle or triangle) implies blue,True,54,21,1,23,1,0.9893031183048606,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium blue circle,hg82,21,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1326,4362,(circle or triangle) implies blue,True,55,21,1,23,1,0.9981424224110924,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium blue rectangle,hg82,21,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1327,4363,(circle or triangle) implies blue,True,56,21,1,22,2,0.9908221865923678,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large blue circle,hg82,21,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1328,4364,(circle or triangle) implies blue,True,57,21,1,21,3,0.9911886909659416,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",large blue triangle,hg82,21,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1329,4365,(circle or triangle) implies blue,True,58,22,0,4,20,0.0257090543437925,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",small green triangle,hg82,22,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1330,4366,(circle or triangle) implies blue,True,59,23,0,2,21,0.0068555198440662,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow circle,hg82,23,False,False,False,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1331,4367,(circle or triangle) implies blue,True,60,24,1,21,2,0.9448725419508718,"""λx.apply1(compose11(compose8(or,rectangle),blue),x.o)""
",blue or rectangle,"def is_rule(obj):
    return obj.blue or obj.rectangle",medium yellow rectangle,hg82,24,True,True,True,0.9203869047619048,0.5012093523246439,1.0,1.0,True
1332,4368,not (circle and blue),True,0,0,1,14,9,0.4653997177485962,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg11,0,True,False,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,False
1333,4369,not (circle and blue),True,1,0,1,9,14,0.4688718351300167,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg11,0,True,False,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,False
1334,4370,not (circle and blue),True,2,0,0,5,18,0.5141920583296268,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg11,0,False,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1335,4371,not (circle and blue),True,3,1,1,22,1,0.8212915863742865,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",large green triangle,hg11,1,True,True,True,0.984090909090909,0.8347107438016528,0.4675324675324675,0.4675324675324675,True
1336,4372,not (circle and blue),True,4,1,1,22,1,0.8337204231580699,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",small green rectangle,hg11,1,True,True,True,0.984090909090909,0.8347107438016528,0.4675324675324675,0.4675324675324675,True
1337,4373,not (circle and blue),True,5,1,1,3,20,0.6214359861564844,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",large yellow triangle,hg11,1,True,True,False,0.984090909090909,0.8347107438016528,0.4675324675324675,0.4675324675324675,False
1338,4374,not (circle and blue),True,6,2,1,16,7,0.8999039153131889,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg11,2,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1339,4375,not (circle and blue),True,7,2,1,19,4,0.8978037212041272,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg11,2,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1340,4376,not (circle and blue),True,8,2,0,0,23,0.5142419197331946,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg11,2,False,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1341,4377,not (circle and blue),True,9,3,1,10,13,0.3158265004417444,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow circle,hg11,3,True,False,False,0.984090909090909,0.8347107438016528,0.8181818181818182,0.8181818181818182,True
1342,4378,not (circle and blue),True,10,4,1,21,2,0.7122684474223888,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg11,4,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1343,4379,not (circle and blue),True,11,4,1,3,20,0.5873378598599855,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg11,4,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1344,4380,not (circle and blue),True,12,5,1,19,4,0.8124886870626824,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg11,5,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1345,4381,not (circle and blue),True,13,6,1,23,0,0.924586905269166,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg11,6,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1346,4382,not (circle and blue),True,14,7,1,16,7,0.755144576881662,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg11,7,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1347,4383,not (circle and blue),True,15,7,1,20,3,0.7766530704957403,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg11,7,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1348,4384,not (circle and blue),True,16,7,1,19,4,0.7338543298932336,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg11,7,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1349,4385,not (circle and blue),True,17,8,1,22,1,0.9416221448813076,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg11,8,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1350,4386,not (circle and blue),True,18,8,1,22,1,0.8765936444492581,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg11,8,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1351,4387,not (circle and blue),True,19,8,1,23,0,0.9321204244397449,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg11,8,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1352,4388,not (circle and blue),True,20,8,1,23,0,0.974607655750674,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg11,8,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1353,4389,not (circle and blue),True,21,8,1,19,4,0.8223772808911461,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg11,8,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1354,4390,not (circle and blue),True,22,9,1,23,0,0.9258072624204488,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg11,9,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1355,4391,not (circle and blue),True,23,9,1,23,0,0.9745171302133712,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg11,9,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1356,4392,not (circle and blue),True,24,9,1,20,3,0.8391231498561637,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg11,9,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1357,4393,not (circle and blue),True,25,10,1,18,5,0.8949103722397921,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg11,10,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1358,4394,not (circle and blue),True,26,10,1,22,1,0.9347852522132598,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg11,10,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1359,4395,not (circle and blue),True,27,11,1,22,1,0.8982121108439287,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg11,11,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1360,4396,not (circle and blue),True,28,11,1,23,0,0.9748489054480842,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg11,11,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1361,4397,not (circle and blue),True,29,11,1,22,1,0.99049792362473,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg11,11,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1362,4398,not (circle and blue),True,30,11,1,23,0,0.956077198773528,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg11,11,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1363,4399,not (circle and blue),True,31,12,0,5,18,0.7692903426801649,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg11,12,False,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1364,4400,not (circle and blue),True,32,12,1,22,1,0.979609859709285,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg11,12,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1365,4401,not (circle and blue),True,33,12,1,23,0,0.9791514632755706,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg11,12,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1366,4402,not (circle and blue),True,34,12,1,22,1,0.9232994396209052,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg11,12,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1367,4403,not (circle and blue),True,35,13,1,22,1,0.972627957585928,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg11,13,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1368,4404,not (circle and blue),True,36,14,1,22,1,0.9417216657352582,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg11,14,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1369,4405,not (circle and blue),True,37,14,1,22,1,0.9470707277561132,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg11,14,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1370,4406,not (circle and blue),True,38,14,1,22,1,0.9207400931288702,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg11,14,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1371,4407,not (circle and blue),True,39,14,1,23,0,0.9488575871743024,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg11,14,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1372,4408,not (circle and blue),True,40,15,1,22,1,0.952203468556604,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg11,15,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1373,4409,not (circle and blue),True,41,15,1,22,1,0.956185140356638,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg11,15,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1374,4410,not (circle and blue),True,42,16,1,22,0,0.9818793234734357,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg11,16,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1375,4411,not (circle and blue),True,43,17,1,22,0,0.9883200848699972,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg11,17,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1376,4412,not (circle and blue),True,44,17,1,22,0,0.912293018090054,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg11,17,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1377,4413,not (circle and blue),True,45,17,0,2,20,0.6765433145260431,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg11,17,False,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1378,4414,not (circle and blue),True,46,17,1,22,0,0.9904731988121966,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg11,17,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1379,4415,not (circle and blue),True,47,17,1,22,0,0.930351850753027,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg11,17,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1380,4416,not (circle and blue),True,48,18,1,22,0,0.9971435513723464,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg11,18,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1381,4417,not (circle and blue),True,49,18,1,22,0,0.9940643832737804,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg11,18,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1382,4418,not (circle and blue),True,50,18,1,21,1,0.8802307832875158,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg11,18,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1383,4419,not (circle and blue),True,51,19,1,21,1,0.9694770466535372,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg11,19,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1384,4420,not (circle and blue),True,52,19,1,20,2,0.9548004779044276,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg11,19,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1385,4421,not (circle and blue),True,53,19,1,21,1,0.9820755246107636,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg11,19,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1386,4422,not (circle and blue),True,54,20,0,2,20,0.5792409528601183,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg11,20,False,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1387,4423,not (circle and blue),True,55,20,1,22,0,0.9990224563030096,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg11,20,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1388,4424,not (circle and blue),True,56,20,1,21,1,0.9715879734791316,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg11,20,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1389,4425,not (circle and blue),True,57,20,1,22,0,0.9978189914226048,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg11,20,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1390,4426,not (circle and blue),True,58,20,1,22,0,0.9880412042326724,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg11,20,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1391,4427,not (circle and blue),True,59,21,1,22,0,0.9806020994270738,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg11,21,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1392,4428,not (circle and blue),True,60,21,1,22,0,0.9953886486920283,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg11,21,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1393,4429,not (circle and blue),True,61,21,1,22,0,0.9835818503019028,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg11,21,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1394,4430,not (circle and blue),True,62,21,0,2,20,0.3348853887994209,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg11,21,False,False,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,False
1395,4431,not (circle and blue),True,63,21,1,22,0,0.9951145552707884,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg11,21,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1396,4432,not (circle and blue),True,64,22,1,21,1,0.9932613467229884,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow circle,hg11,22,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1397,4433,not (circle and blue),True,65,22,1,22,0,0.9990222670295452,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow triangle,hg11,22,True,True,True,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,True
1398,4434,not (circle and blue),True,66,22,1,22,0,0.9990381961989668,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg11,22,True,True,True,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,True
1399,4435,not (circle and blue),True,67,22,1,21,1,0.9942365120482464,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg11,22,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1400,4436,not (circle and blue),True,68,23,1,22,0,0.9895436325142554,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg11,23,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1401,4437,not (circle and blue),True,69,23,1,22,0,0.9667033334900452,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg11,23,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1402,4438,not (circle and blue),True,70,23,0,3,19,0.3142796973783106,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg11,23,False,False,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,False
1403,4439,not (circle and blue),True,71,23,1,22,0,0.9976083136244824,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg11,23,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1404,4440,not (circle and blue),True,72,23,1,22,0,0.9978654204441,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg11,23,True,True,True,0.984090909090909,0.8347107438016528,0.9090909090909091,0.9090909090909091,True
1405,4441,not (circle and blue),True,73,24,1,22,0,0.9831977512142202,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue rectangle,hg11,24,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1406,4442,not (circle and blue),True,74,24,1,22,0,0.9658049925773184,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue triangle,hg11,24,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1407,4443,not (circle and blue),True,75,24,1,22,0,0.962229437305382,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg11,24,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1408,4444,not (circle and blue),True,76,24,1,22,0,0.983446456177603,"""λx.apply7(not,apply1(compose11(compose8(and,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue rectangle,hg11,24,True,True,False,0.984090909090909,0.8347107438016528,0.6233766233766234,0.6233766233766234,False
1409,4520,not (circle or blue),True,0,0,0,13,11,0.4966298693967701,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg12,0,False,False,True,0.909090909090909,0.5006228373702423,0.5176470588235295,0.5176470588235295,False
1410,4521,not (circle or blue),True,1,0,0,10,14,0.4385278232259679,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg12,0,False,False,True,0.909090909090909,0.5006228373702423,0.5176470588235295,0.5176470588235295,False
1411,4522,not (circle or blue),True,2,1,1,13,10,0.4037042189538624,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg12,1,True,False,False,0.909090909090909,0.5006228373702423,0.4823529411764706,0.4823529411764706,True
1412,4523,not (circle or blue),True,3,1,0,12,11,0.3927074979836788,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg12,1,False,False,False,0.909090909090909,0.5006228373702423,0.4823529411764706,0.4823529411764706,True
1413,4524,not (circle or blue),True,4,1,1,10,13,0.4151692993194728,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg12,1,True,False,False,0.909090909090909,0.5006228373702423,0.4823529411764706,0.4823529411764706,True
1414,4525,not (circle or blue),True,5,1,0,9,14,0.3634006776455862,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg12,1,False,False,False,0.909090909090909,0.5006228373702423,0.4823529411764706,0.4823529411764706,True
1415,4526,not (circle or blue),True,6,2,1,4,19,0.6210825121555672,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green rectangle,hg12,2,True,True,False,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,False
1416,4527,not (circle or blue),True,7,2,0,4,19,0.25258613186827,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green circle,hg12,2,False,False,False,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1417,4528,not (circle or blue),True,8,2,1,15,8,0.5219088962955993,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large yellow triangle,hg12,2,True,True,True,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1418,4529,not (circle or blue),True,9,3,0,16,7,0.3925688128659885,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg12,3,False,False,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,False
1419,4530,not (circle or blue),True,10,3,0,10,13,0.3048000502141121,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue rectangle,hg12,3,False,False,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,False
1420,4531,not (circle or blue),True,11,3,0,3,20,0.112908991504014,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg12,3,False,False,False,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,True
1421,4532,not (circle or blue),True,12,4,0,2,21,0.1464100994114687,"""λx.apply1(compose11(compose8(and,compose2(not,circle)),green),x.o)""
",(not circle) and green,"def is_rule(obj):
    return not obj.circle and obj.green",small blue circle,hg12,4,False,False,False,0.909090909090909,0.5006228373702423,0.788235294117647,0.788235294117647,True
1422,4533,not (circle or blue),True,13,4,1,22,1,0.7114522606194668,"""λx.apply1(compose11(compose8(and,compose2(not,circle)),green),x.o)""
",(not circle) and green,"def is_rule(obj):
    return not obj.circle and obj.green",large green triangle,hg12,4,True,True,True,0.909090909090909,0.5006228373702423,0.788235294117647,0.788235294117647,True
1423,4534,not (circle or blue),True,14,5,1,18,5,0.76692078968631,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green triangle,hg12,5,True,True,True,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1424,4535,not (circle or blue),True,15,5,1,20,3,0.7351818543698982,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green triangle,hg12,5,True,True,True,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1425,4536,not (circle or blue),True,16,5,1,17,6,0.5381157100441669,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium yellow triangle,hg12,5,True,True,True,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1426,4537,not (circle or blue),True,17,6,1,13,10,0.6827295753406588,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large yellow rectangle,hg12,6,True,True,False,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,False
1427,4538,not (circle or blue),True,18,6,1,21,2,0.9638788620364948,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green triangle,hg12,6,True,True,True,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1428,4539,not (circle or blue),True,19,6,1,15,8,0.8464738330352474,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large green rectangle,hg12,6,True,True,False,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,False
1429,4540,not (circle or blue),True,20,6,0,7,16,0.1237749977209432,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large yellow circle,hg12,6,False,False,False,0.909090909090909,0.5006228373702423,0.6941176470588235,0.6941176470588235,True
1430,4541,not (circle or blue),True,21,7,1,16,7,0.959925387335943,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg12,7,True,True,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,True
1431,4542,not (circle or blue),True,22,7,1,19,4,0.972799880432376,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg12,7,True,True,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,True
1432,4543,not (circle or blue),True,23,7,1,17,6,0.891261006240029,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg12,7,True,True,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,True
1433,4544,not (circle or blue),True,24,7,0,7,16,0.2040389163305462,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg12,7,False,False,True,0.909090909090909,0.5006228373702423,0.8470588235294118,0.8470588235294118,False
1434,4545,not (circle or blue),True,25,8,1,22,1,0.9972514944371368,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green rectangle,hg12,8,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1435,4546,not (circle or blue),True,26,8,0,3,20,0.0983552010550283,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow circle,hg12,8,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1436,4547,not (circle or blue),True,27,8,1,21,2,0.9413391447251342,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg12,8,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1437,4548,not (circle or blue),True,28,8,0,4,19,0.1277589980149969,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green circle,hg12,8,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1438,4549,not (circle or blue),True,29,8,1,21,2,0.9933984478999492,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green triangle,hg12,8,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1439,4550,not (circle or blue),True,30,9,1,19,4,0.9822830048401556,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow triangle,hg12,9,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1440,4551,not (circle or blue),True,31,9,0,2,21,0.1312095877131014,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue circle,hg12,9,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1441,4552,not (circle or blue),True,32,9,0,6,17,0.1089001701818688,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue rectangle,hg12,9,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1442,4553,not (circle or blue),True,33,9,1,21,2,0.9961100916189024,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green triangle,hg12,9,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1443,4554,not (circle or blue),True,34,10,0,7,16,0.0423479013099949,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green circle,hg12,10,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1444,4555,not (circle or blue),True,35,10,0,2,21,0.0390335991772872,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue rectangle,hg12,10,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1445,4556,not (circle or blue),True,36,10,0,6,17,0.0441160588223965,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg12,10,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1446,4557,not (circle or blue),True,37,10,0,6,17,0.0238292851915957,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow circle,hg12,10,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1447,4558,not (circle or blue),True,38,11,1,21,2,0.9758244782345856,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow triangle,hg12,11,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1448,4559,not (circle or blue),True,39,12,1,20,3,0.9711543150910984,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg12,12,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1449,4560,not (circle or blue),True,40,12,1,21,2,0.994614935650702,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg12,12,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1450,4561,not (circle or blue),True,41,12,0,4,19,0.0064729770052736,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow circle,hg12,12,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1451,4562,not (circle or blue),True,42,12,0,4,19,0.0153210912746999,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green circle,hg12,12,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1452,4563,not (circle or blue),True,43,13,0,1,22,0.0011407196806203,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow circle,hg12,13,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1453,4564,not (circle or blue),True,44,13,0,2,21,0.0022851154193403,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg12,13,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1454,4565,not (circle or blue),True,45,13,1,23,0,0.998311426660507,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg12,13,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1455,4566,not (circle or blue),True,46,13,1,23,0,0.9909367095137896,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow rectangle,hg12,13,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1456,4567,not (circle or blue),True,47,14,1,19,4,0.9958609728281544,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green rectangle,hg12,14,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1457,4568,not (circle or blue),True,48,14,0,2,21,0.1008735744454725,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue circle,hg12,14,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1458,4569,not (circle or blue),True,49,14,1,21,2,0.9965358821751806,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow triangle,hg12,14,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1459,4570,not (circle or blue),True,50,14,0,3,20,0.0021411234329207,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow circle,hg12,14,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1460,4571,not (circle or blue),True,51,15,1,19,4,0.9936444377494807,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green triangle,hg12,15,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1461,4572,not (circle or blue),True,52,15,1,20,3,0.9951613261239344,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg12,15,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1462,4573,not (circle or blue),True,53,15,1,23,0,0.999054970443126,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg12,15,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1463,4574,not (circle or blue),True,54,16,1,21,2,0.9966221542365474,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg12,16,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1464,4575,not (circle or blue),True,55,16,0,5,18,0.0043653196452169,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg12,16,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1465,4576,not (circle or blue),True,56,16,0,3,20,0.1113822254945944,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue rectangle,hg12,16,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1466,4577,not (circle or blue),True,57,16,0,2,21,0.0549365704894171,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue circle,hg12,16,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1467,4578,not (circle or blue),True,58,16,1,20,3,0.998621832813228,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green rectangle,hg12,16,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1468,4579,not (circle or blue),True,59,17,0,5,18,0.0309053994426449,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue rectangle,hg12,17,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1469,4580,not (circle or blue),True,60,17,1,21,2,0.9984421915179382,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg12,17,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1470,4581,not (circle or blue),True,61,17,1,20,3,0.9989061271697892,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green rectangle,hg12,17,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1471,4582,not (circle or blue),True,62,17,1,19,4,0.9995442381901966,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green triangle,hg12,17,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1472,4583,not (circle or blue),True,63,18,0,5,18,0.0022827186578524,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg12,18,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1473,4584,not (circle or blue),True,64,19,1,22,1,0.9967385274605932,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg12,19,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1474,4585,not (circle or blue),True,65,19,1,23,0,0.9992768858563748,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg12,19,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1475,4586,not (circle or blue),True,66,19,1,23,0,0.9955738325703578,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium yellow triangle,hg12,19,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1476,4587,not (circle or blue),True,67,19,0,3,20,0.034379525250415,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue triangle,hg12,19,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1477,4588,not (circle or blue),True,68,19,1,22,1,0.9991159075499354,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green rectangle,hg12,19,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1478,4589,not (circle or blue),True,69,20,0,3,20,0.0121510884822555,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg12,20,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1479,4590,not (circle or blue),True,70,21,1,21,2,0.9986309130285916,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green triangle,hg12,21,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1480,4591,not (circle or blue),True,71,21,0,1,22,0.0039808874578284,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium green circle,hg12,21,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1481,4592,not (circle or blue),True,72,21,0,2,21,0.004338307450439,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green circle,hg12,21,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1482,4593,not (circle or blue),True,73,21,0,1,22,0.0072321596832125,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue triangle,hg12,21,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1483,4594,not (circle or blue),True,74,22,0,2,21,0.0038035785903502,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large blue triangle,hg12,22,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1484,4595,not (circle or blue),True,75,22,0,1,22,0.000342745541161,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow circle,hg12,22,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1485,4596,not (circle or blue),True,76,22,0,2,21,0.0003213232923826,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green circle,hg12,22,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1486,4597,not (circle or blue),True,77,22,0,2,21,0.000316982332265,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow circle,hg12,22,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1487,4598,not (circle or blue),True,78,22,1,21,2,0.997183247399448,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg12,22,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1488,4599,not (circle or blue),True,79,23,1,20,3,0.9992206464334004,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green triangle,hg12,23,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1489,4600,not (circle or blue),True,80,23,0,2,21,0.0686409643906245,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue circle,hg12,23,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1490,4601,not (circle or blue),True,81,23,1,20,3,0.9985983102899352,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow triangle,hg12,23,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1491,4602,not (circle or blue),True,82,24,0,4,19,0.0068994287963732,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",medium blue triangle,hg12,24,False,False,False,0.909090909090909,0.5006228373702423,1.0,1.0,True
1492,4603,not (circle or blue),True,83,24,1,21,2,0.999531572324372,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large green rectangle,hg12,24,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1493,4604,not (circle or blue),True,84,24,1,21,2,0.9990850743492956,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow triangle,hg12,24,True,True,True,0.909090909090909,0.5006228373702423,1.0,1.0,True
1494,4605,circle and blue,True,0,0,0,16,7,0.3931817808113464,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg09,0,False,False,True,0.95,0.836620644312952,0.08974358974358974,0.08974358974358974,False
1495,4606,circle and blue,True,1,1,0,9,14,0.4592202889523377,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg09,1,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1496,4607,circle and blue,True,2,1,0,14,9,0.4246201533533167,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,1,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1497,4608,circle and blue,True,3,2,1,13,10,0.4016558602177155,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg09,2,True,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1498,4609,circle and blue,True,4,2,0,6,17,0.3066203738354715,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg09,2,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1499,4610,circle and blue,True,5,2,0,9,14,0.2699639936098492,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg09,2,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1500,4611,circle and blue,True,6,2,0,12,11,0.3200467352947953,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg09,2,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1501,4612,circle and blue,True,7,2,0,9,14,0.277306975958254,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg09,2,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1502,4613,circle and blue,True,8,3,0,5,18,0.1730663675510868,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,3,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1503,4614,circle and blue,True,9,3,0,3,20,0.1396187338954177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg09,3,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1504,4615,circle and blue,True,10,3,0,5,18,0.1289874047436114,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg09,3,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1505,4616,circle and blue,True,11,3,0,2,21,0.1333809984472509,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg09,3,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1506,4617,circle and blue,True,12,4,0,2,21,0.064708764925399,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg09,4,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1507,4618,circle and blue,True,13,4,0,2,21,0.1058358944704878,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg09,4,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1508,4619,circle and blue,True,14,4,0,4,19,0.1245708503250853,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg09,4,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1509,4620,circle and blue,True,15,4,0,2,21,0.0846618194069606,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg09,4,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1510,4621,circle and blue,True,16,5,0,2,21,0.1151890097861496,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg09,5,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1511,4622,circle and blue,True,17,5,0,2,21,0.1110857172362784,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg09,5,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1512,4623,circle and blue,True,18,5,0,2,21,0.1260517358090282,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg09,5,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1513,4624,circle and blue,True,19,5,0,4,19,0.1064052352883209,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg09,5,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1514,4625,circle and blue,True,20,6,0,1,22,0.0519590587513221,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg09,6,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1515,4626,circle and blue,True,21,7,1,12,11,0.3182103652035266,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg09,7,True,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1516,4627,circle and blue,True,22,7,0,2,21,0.0820209968825338,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg09,7,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1517,4628,circle and blue,True,23,7,0,3,20,0.0636883616681416,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg09,7,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1518,4629,circle and blue,True,24,8,0,3,20,0.0923899901545155,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg09,8,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1519,4630,circle and blue,True,25,8,0,4,19,0.1832115136598986,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg09,8,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1520,4631,circle and blue,True,26,8,0,0,23,0.0419263786018291,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg09,8,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1521,4632,circle and blue,True,27,9,1,22,1,0.5012179842507293,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg09,9,True,True,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,False
1522,4633,circle and blue,True,28,9,0,1,22,0.020802308287898,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg09,9,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1523,4634,circle and blue,True,29,9,0,2,21,0.0374532486971475,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg09,9,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1524,4635,circle and blue,True,30,10,0,0,23,0.0223522644406557,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg09,10,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1525,4636,circle and blue,True,31,10,0,1,22,0.0205018654669402,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg09,10,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1526,4637,circle and blue,True,32,10,0,1,22,0.0155324435273769,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg09,10,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1527,4638,circle and blue,True,33,10,1,20,3,0.610449358607525,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg09,10,True,True,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,False
1528,4639,circle and blue,True,34,11,0,1,22,0.0067035122976903,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large green triangle,hg09,11,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1529,4640,circle and blue,True,35,11,0,1,22,0.0096893733207252,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow rectangle,hg09,11,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1530,4641,circle and blue,True,36,11,1,21,2,0.8697468855065154,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large blue circle,hg09,11,True,True,True,0.95,0.836620644312952,1.0,1.0,True
1531,4642,circle and blue,True,37,12,0,1,22,0.0082727369751864,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium green rectangle,hg09,12,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1532,4643,circle and blue,True,38,12,1,22,1,0.9304180959484256,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large blue circle,hg09,12,True,True,True,0.95,0.836620644312952,1.0,1.0,True
1533,4644,circle and blue,True,39,12,0,2,21,0.0390815361716931,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small green circle,hg09,12,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1534,4645,circle and blue,True,40,13,0,0,23,0.0701987388843008,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow circle,hg09,13,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1535,4646,circle and blue,True,41,13,0,2,21,0.0082314602814221,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium yellow triangle,hg09,13,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1536,4647,circle and blue,True,42,13,0,1,22,0.081251676293732,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large yellow circle,hg09,13,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1537,4648,circle and blue,True,43,13,0,2,21,0.2633592784104621,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small blue rectangle,hg09,13,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1538,4649,circle and blue,True,44,13,0,2,21,0.0077178728276976,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow triangle,hg09,13,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1539,4650,circle and blue,True,45,14,0,0,23,0.0080087004364486,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large green triangle,hg09,14,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1540,4651,circle and blue,True,46,14,0,1,22,0.0031566287343594,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow rectangle,hg09,14,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1541,4652,circle and blue,True,47,14,0,1,22,0.0068955808205828,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small green rectangle,hg09,14,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1542,4653,circle and blue,True,48,15,0,0,23,0.1592715625712344,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg09,15,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1543,4654,circle and blue,True,49,15,0,1,22,0.0103975356354339,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg09,15,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1544,4655,circle and blue,True,50,16,0,2,21,0.266660971206079,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,16,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1545,4656,circle and blue,True,51,17,1,21,2,0.7194300432528279,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg09,17,True,True,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,False
1546,4657,circle and blue,True,52,17,0,1,22,0.0632498701166923,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg09,17,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1547,4658,circle and blue,True,53,17,0,1,22,0.010754624120409,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg09,17,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1548,4659,circle and blue,True,54,17,0,1,22,0.1001711536175662,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,17,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1549,4660,circle and blue,True,55,17,0,1,22,0.0046996819819469,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg09,17,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1550,4661,circle and blue,True,56,18,0,0,23,0.0019211550470572,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small green rectangle,hg09,18,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1551,4662,circle and blue,True,57,18,0,2,21,0.0098070890571761,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium green triangle,hg09,18,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1552,4663,circle and blue,True,58,18,0,1,22,0.0316025945872979,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",large blue triangle,hg09,18,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1553,4664,circle and blue,True,59,18,0,1,22,0.0243492249111341,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",small yellow circle,hg09,18,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1554,4665,circle and blue,True,60,18,0,3,20,0.010589750902568,"""λx.apply1(compose11(compose8(and,circle),blue),x.o)""
",circle and blue,"def is_rule(obj):
    return obj.circle and obj.blue",medium yellow rectangle,hg09,18,False,False,False,0.95,0.836620644312952,1.0,1.0,True
1555,4666,circle and blue,True,61,19,0,2,21,0.0532467917691974,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg09,19,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1556,4667,circle and blue,True,62,19,0,1,22,0.0118216629739436,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg09,19,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1557,4668,circle and blue,True,63,19,0,1,22,0.0199040209485019,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,19,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1558,4669,circle and blue,True,64,20,0,1,22,0.0076078788473523,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg09,20,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1559,4670,circle and blue,True,65,20,0,1,22,0.0411373989402363,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg09,20,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1560,4671,circle and blue,True,66,21,0,1,22,0.007120106031607,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg09,21,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1561,4672,circle and blue,True,67,21,0,0,23,0.0093889782530141,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,21,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1562,4673,circle and blue,True,68,21,0,2,21,0.0122741964280521,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg09,21,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1563,4674,circle and blue,True,69,21,0,1,22,0.006830395616248,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg09,21,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1564,4675,circle and blue,True,70,22,0,1,22,0.0060311721263133,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg09,22,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1565,4676,circle and blue,True,71,22,0,1,22,0.0024522171312355,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg09,22,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1566,4677,circle and blue,True,72,23,0,1,22,0.0271794103148295,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg09,23,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1567,4678,circle and blue,True,73,24,0,0,23,0.0192979153299575,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg09,24,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1568,4679,circle and blue,True,74,24,0,2,21,0.073182936773378,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg09,24,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1569,4680,circle and blue,True,75,24,0,1,22,0.0599563153438111,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg09,24,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1570,4681,circle and blue,True,76,24,0,1,22,0.0242535676522948,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg09,24,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1571,4682,circle and blue,True,77,24,0,1,22,0.0345901789311255,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg09,24,False,False,False,0.95,0.836620644312952,0.9102564102564102,0.9102564102564102,True
1572,5304,large or medium,True,0,0,1,14,9,0.4749614619606745,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg22,0,True,False,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,False
1573,5305,large or medium,True,1,1,1,15,8,0.481918831687949,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg22,1,True,False,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,False
1574,5306,large or medium,True,2,1,0,13,10,0.5010449196348645,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg22,1,False,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1575,5307,large or medium,True,3,2,1,22,1,0.6403523862242082,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large yellow circle,hg22,2,True,True,True,0.8755980861244019,0.5756172839506173,0.5416666666666666,0.5416666666666666,True
1576,5308,large or medium,True,4,2,1,3,20,0.3979794411927741,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green triangle,hg22,2,True,False,False,0.8755980861244019,0.5756172839506173,0.5416666666666666,0.5416666666666666,True
1577,5309,large or medium,True,5,3,1,22,1,0.7276791541826241,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg22,3,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1578,5310,large or medium,True,6,3,1,9,14,0.6656299207897973,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg22,3,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1579,5311,large or medium,True,7,3,1,20,3,0.8308403577066201,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg22,3,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1580,5312,large or medium,True,8,3,1,18,5,0.6982345192584489,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg22,3,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1581,5313,large or medium,True,9,4,1,17,6,0.6834152505854262,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg22,4,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1582,5314,large or medium,True,10,5,1,19,4,0.8943566278454682,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg22,5,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1583,5315,large or medium,True,11,5,1,20,3,0.8685696771300399,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg22,5,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1584,5316,large or medium,True,12,5,1,19,4,0.8945820088814571,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg22,5,True,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1585,5317,large or medium,True,13,5,0,6,17,0.7046078685849579,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg22,5,False,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1586,5318,large or medium,True,14,5,0,9,14,0.6614643766861263,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg22,5,False,True,True,0.8755980861244019,0.5756172839506173,0.6944444444444444,0.6944444444444444,True
1587,5319,large or medium,True,15,6,1,21,1,0.9557906775138462,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large yellow triangle,hg22,6,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1588,5320,large or medium,True,16,7,1,13,9,0.7457896901471485,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue circle,hg22,7,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1589,5321,large or medium,True,17,7,1,10,12,0.7749098853315672,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green rectangle,hg22,7,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1590,5322,large or medium,True,18,7,1,19,3,0.8432074975452223,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue rectangle,hg22,7,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1591,5323,large or medium,True,19,7,1,17,5,0.78461186422237,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green triangle,hg22,7,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1592,5324,large or medium,True,20,8,1,20,2,0.9636535102686138,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large yellow triangle,hg22,8,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1593,5325,large or medium,True,21,8,0,6,16,0.5048925398540404,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small yellow triangle,hg22,8,False,True,False,0.8755980861244019,0.5756172839506173,1.0,1.0,False
1594,5326,large or medium,True,22,9,1,19,3,0.9543996670736304,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue rectangle,hg22,9,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1595,5327,large or medium,True,23,9,1,17,5,0.9291510986849972,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue rectangle,hg22,9,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1596,5328,large or medium,True,24,9,1,19,3,0.9365751020906145,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue circle,hg22,9,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1597,5329,large or medium,True,25,9,0,4,18,0.3027413365515485,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green circle,hg22,9,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1598,5330,large or medium,True,26,9,0,4,18,0.2728348818080803,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small yellow rectangle,hg22,9,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1599,5331,large or medium,True,27,10,1,21,1,0.9720426990630812,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green circle,hg22,10,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1600,5332,large or medium,True,28,10,1,21,1,0.9450551710708625,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green triangle,hg22,10,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1601,5333,large or medium,True,29,10,0,2,20,0.1944938431186074,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue rectangle,hg22,10,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1602,5334,large or medium,True,30,10,1,21,1,0.9811498806454892,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large yellow triangle,hg22,10,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1603,5335,large or medium,True,31,11,1,21,1,0.971347332575874,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue triangle,hg22,11,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1604,5336,large or medium,True,32,11,1,20,2,0.988571935901632,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green rectangle,hg22,11,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1605,5337,large or medium,True,33,12,1,18,4,0.9800428795201696,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green triangle,hg22,12,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1606,5338,large or medium,True,34,12,0,4,18,0.1845359651427997,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue circle,hg22,12,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1607,5339,large or medium,True,35,12,1,20,2,0.995685499040178,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green triangle,hg22,12,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1608,5340,large or medium,True,36,13,1,22,0,0.9858535386628092,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue triangle,hg22,13,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1609,5341,large or medium,True,37,13,0,3,19,0.1141585009411301,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue rectangle,hg22,13,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1610,5342,large or medium,True,38,14,1,21,1,0.941677226097454,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue circle,hg22,14,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1611,5343,large or medium,True,39,15,1,20,2,0.9787136273763508,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green triangle,hg22,15,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1612,5344,large or medium,True,40,15,0,5,17,0.1137616946117532,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green circle,hg22,15,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1613,5345,large or medium,True,41,15,0,5,17,0.1198119431248869,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small yellow triangle,hg22,15,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1614,5346,large or medium,True,42,15,1,22,0,0.9885725256832528,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large yellow triangle,hg22,15,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1615,5347,large or medium,True,43,15,0,2,20,0.1454167421835563,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue triangle,hg22,15,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1616,5348,large or medium,True,44,16,0,1,21,0.0094089181271783,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green triangle,hg22,16,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1617,5349,large or medium,True,45,16,1,22,0,0.9948722539681966,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue rectangle,hg22,16,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1618,5350,large or medium,True,46,16,0,2,20,0.0071927550025066,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small yellow triangle,hg22,16,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1619,5351,large or medium,True,47,16,1,20,2,0.9972013244159824,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green triangle,hg22,16,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1620,5352,large or medium,True,48,17,1,20,2,0.9874842923034066,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue triangle,hg22,17,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1621,5353,large or medium,True,49,17,0,4,18,0.0042359785761618,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green triangle,hg22,17,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1622,5354,large or medium,True,50,18,0,5,17,0.0196721374910566,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue circle,hg22,18,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1623,5355,large or medium,True,51,18,1,20,2,0.9843845337288712,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium yellow circle,hg22,18,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1624,5356,large or medium,True,52,18,1,21,1,0.9906996116881146,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue triangle,hg22,18,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1625,5357,large or medium,True,53,18,1,18,4,0.9905545436831744,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue rectangle,hg22,18,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1626,5358,large or medium,True,54,18,1,18,4,0.9971660019579076,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green circle,hg22,18,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1627,5359,large or medium,True,55,19,1,20,2,0.998243851346274,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue rectangle,hg22,19,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1628,5360,large or medium,True,56,19,1,21,1,0.9977845270188936,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green triangle,hg22,19,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1629,5361,large or medium,True,57,19,0,3,19,0.0317840507693745,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green rectangle,hg22,19,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1630,5362,large or medium,True,58,20,1,21,1,0.9562323340037436,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue rectangle,hg22,20,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1631,5363,large or medium,True,59,20,1,18,4,0.9560201854059188,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green rectangle,hg22,20,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1632,5364,large or medium,True,60,21,0,2,20,0.0143570026978068,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small yellow triangle,hg22,21,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1633,5365,large or medium,True,61,21,1,19,3,0.9991965279397164,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large blue rectangle,hg22,21,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1634,5366,large or medium,True,62,21,0,3,19,0.0108624970447408,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green triangle,hg22,21,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1635,5367,large or medium,True,63,21,1,20,2,0.9933717509073858,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium yellow triangle,hg22,21,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1636,5368,large or medium,True,64,21,1,20,2,0.9986760490239704,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green triangle,hg22,21,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1637,5369,large or medium,True,65,22,0,6,16,0.0139632361485837,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue circle,hg22,22,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1638,5370,large or medium,True,66,23,0,2,20,0.027838512917242,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small blue rectangle,hg22,23,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1639,5371,large or medium,True,67,23,1,20,2,0.998305960119751,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large green triangle,hg22,23,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1640,5372,large or medium,True,68,24,1,22,0,0.9981845023440882,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",large yellow rectangle,hg22,24,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1641,5373,large or medium,True,69,24,1,19,3,0.9953780288713004,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium blue rectangle,hg22,24,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1642,5374,large or medium,True,70,24,1,19,3,0.995033373792694,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",medium green rectangle,hg22,24,True,True,True,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1643,5375,large or medium,True,71,24,0,2,20,0.0034902225582982,"""λx.apply7(not,apply1(small,x.o))""
",not small,"def is_rule(obj):
    return not obj.small",small green circle,hg22,24,False,False,False,0.8755980861244019,0.5756172839506173,1.0,1.0,True
1644,5677,(not blue) implies (not circle),True,0,0,0,9,12,0.4467424168384468,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg80,0,False,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1645,5678,(not blue) implies (not circle),True,1,0,0,5,16,0.4991845019512766,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg80,0,False,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1646,5679,(not blue) implies (not circle),True,2,0,1,5,16,0.4924492565223772,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg80,0,True,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1647,5680,(not blue) implies (not circle),True,3,0,1,8,13,0.4312051178469573,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg80,0,True,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1648,5681,(not blue) implies (not circle),True,4,0,1,4,17,0.4683042552152301,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg80,0,True,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1649,5682,(not blue) implies (not circle),True,5,1,1,13,8,0.717583419983498,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow triangle,hg80,1,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1650,5683,(not blue) implies (not circle),True,6,1,0,3,18,0.1919556041636951,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg80,1,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1651,5684,(not blue) implies (not circle),True,7,1,1,4,17,0.4727087373973972,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue circle,hg80,1,True,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1652,5685,(not blue) implies (not circle),True,8,1,1,10,11,0.514432362199841,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green triangle,hg80,1,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1653,5686,(not blue) implies (not circle),True,9,2,0,4,17,0.1734077418271908,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg80,2,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1654,5687,(not blue) implies (not circle),True,10,3,1,16,5,0.7548770535989888,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg80,3,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1655,5688,(not blue) implies (not circle),True,11,3,0,5,16,0.107933879280381,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg80,3,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1656,5689,(not blue) implies (not circle),True,12,3,1,15,6,0.6403278420581273,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg80,3,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1657,5690,(not blue) implies (not circle),True,13,3,0,3,18,0.1645269276201588,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg80,3,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1658,5691,(not blue) implies (not circle),True,14,3,1,12,9,0.605491862783424,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green rectangle,hg80,3,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1659,5692,(not blue) implies (not circle),True,15,4,1,17,4,0.8342894452873679,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg80,4,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1660,5693,(not blue) implies (not circle),True,16,4,1,17,4,0.8504218894587438,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow rectangle,hg80,4,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1661,5694,(not blue) implies (not circle),True,17,5,1,18,3,0.9736239580497568,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg80,5,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1662,5695,(not blue) implies (not circle),True,18,5,1,12,9,0.8015213940382182,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg80,5,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1663,5696,(not blue) implies (not circle),True,19,6,1,14,7,0.9226998724398072,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green rectangle,hg80,6,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1664,5697,(not blue) implies (not circle),True,20,7,1,15,6,0.826594923757284,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg80,7,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1665,5698,(not blue) implies (not circle),True,21,7,1,21,0,0.97605586663326,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg80,7,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1666,5699,(not blue) implies (not circle),True,22,7,1,19,2,0.9758506066712016,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg80,7,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1667,5700,(not blue) implies (not circle),True,23,7,1,21,0,0.9582817802107684,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg80,7,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1668,5701,(not blue) implies (not circle),True,24,7,1,15,6,0.8516579476000742,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg80,7,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1669,5702,(not blue) implies (not circle),True,25,8,1,19,2,0.9878445812352084,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg80,8,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1670,5703,(not blue) implies (not circle),True,26,8,1,16,5,0.9115959158066288,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green triangle,hg80,8,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1671,5704,(not blue) implies (not circle),True,27,8,1,14,7,0.7582775474830896,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg80,8,True,True,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,False
1672,5705,(not blue) implies (not circle),True,28,8,1,20,1,0.9808081477553968,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg80,8,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1673,5706,(not blue) implies (not circle),True,29,9,1,19,2,0.9929721981696956,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg80,9,True,True,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,True
1674,5707,(not blue) implies (not circle),True,30,9,0,7,14,0.4835453837682734,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg80,9,False,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1675,5708,(not blue) implies (not circle),True,31,9,0,6,15,0.2529565975873993,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg80,9,False,False,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,False
1676,5709,(not blue) implies (not circle),True,32,9,1,18,3,0.9917192111257692,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg80,9,True,True,True,0.9147869674185464,0.6183345507669831,0.7432432432432432,0.7432432432432432,True
1677,5710,(not blue) implies (not circle),True,33,10,0,3,18,0.1830619720835784,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green circle,hg80,10,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1678,5711,(not blue) implies (not circle),True,34,10,1,19,2,0.9735307567019617,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg80,10,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1679,5712,(not blue) implies (not circle),True,35,11,0,4,17,0.0499392934991647,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg80,11,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1680,5713,(not blue) implies (not circle),True,36,11,0,3,18,0.2931648464117415,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg80,11,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1681,5714,(not blue) implies (not circle),True,37,11,1,15,6,0.7886753360719467,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg80,11,True,True,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,False
1682,5715,(not blue) implies (not circle),True,38,11,1,18,3,0.9710434515891392,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg80,11,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1683,5716,(not blue) implies (not circle),True,39,11,1,18,3,0.9896911115888543,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg80,11,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1684,5717,(not blue) implies (not circle),True,40,12,0,1,20,0.115633825418854,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow circle,hg80,12,False,False,False,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1685,5718,(not blue) implies (not circle),True,41,13,1,20,1,0.9900247447172889,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg80,13,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1686,5719,(not blue) implies (not circle),True,42,13,1,20,1,0.9849380781701028,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg80,13,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1687,5720,(not blue) implies (not circle),True,43,13,0,1,20,0.0373206853704459,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg80,13,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1688,5721,(not blue) implies (not circle),True,44,14,0,1,20,0.05902559978324,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green circle,hg80,14,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1689,5722,(not blue) implies (not circle),True,45,14,1,19,2,0.983491202763389,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg80,14,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1690,5723,(not blue) implies (not circle),True,46,14,1,16,5,0.8106672011806494,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green triangle,hg80,14,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1691,5724,(not blue) implies (not circle),True,47,15,1,15,6,0.678606284695661,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg80,15,True,True,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,False
1692,5725,(not blue) implies (not circle),True,48,15,1,16,5,0.9980468386240772,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg80,15,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1693,5726,(not blue) implies (not circle),True,49,15,1,16,5,0.9499208242847316,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green triangle,hg80,15,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1694,5727,(not blue) implies (not circle),True,50,15,1,17,4,0.9462563300927512,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg80,15,True,True,True,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1695,5728,(not blue) implies (not circle),True,51,15,0,5,16,0.0270554908651092,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green circle,hg80,15,False,False,False,0.9147869674185464,0.6183345507669831,0.8918918918918919,0.8918918918918919,True
1696,5729,(not blue) implies (not circle),True,52,16,1,19,2,0.9896218275006275,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green rectangle,hg80,16,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1697,5730,(not blue) implies (not circle),True,53,16,0,1,20,0.0363721101722376,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium yellow circle,hg80,16,False,False,False,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1698,5731,(not blue) implies (not circle),True,54,16,1,20,1,0.9916388565197848,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow triangle,hg80,16,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1699,5732,(not blue) implies (not circle),True,55,17,1,20,1,0.7869954191788792,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium blue circle,hg80,17,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1700,5733,(not blue) implies (not circle),True,56,18,1,19,2,0.9877620378122172,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow rectangle,hg80,18,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1701,5734,(not blue) implies (not circle),True,57,18,0,3,18,0.0309491432384447,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green circle,hg80,18,False,False,False,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1702,5735,(not blue) implies (not circle),True,58,18,1,21,0,0.993795816103443,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small green rectangle,hg80,18,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1703,5736,(not blue) implies (not circle),True,59,19,1,20,1,0.9986354747595668,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small green rectangle,hg80,19,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1704,5737,(not blue) implies (not circle),True,60,19,0,4,17,0.0464155644237962,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium green circle,hg80,19,False,False,False,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1705,5738,(not blue) implies (not circle),True,61,19,1,21,0,0.990326951072916,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium blue rectangle,hg80,19,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1706,5739,(not blue) implies (not circle),True,62,19,1,20,1,0.99251652228088,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small blue triangle,hg80,19,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1707,5740,(not blue) implies (not circle),True,63,19,1,19,2,0.8211116985469288,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large blue circle,hg80,19,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1708,5741,(not blue) implies (not circle),True,64,20,1,18,3,0.9361852018317904,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green triangle,hg80,20,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1709,5742,(not blue) implies (not circle),True,65,20,1,19,2,0.9364552119784548,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large yellow triangle,hg80,20,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1710,5743,(not blue) implies (not circle),True,66,21,0,4,17,0.0379560954605722,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large yellow circle,hg80,21,False,False,False,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1711,5744,(not blue) implies (not circle),True,67,21,1,18,3,0.9924287823544092,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium green triangle,hg80,21,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1712,5745,(not blue) implies (not circle),True,68,21,1,20,1,0.9976224160808442,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small blue rectangle,hg80,21,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1713,5746,(not blue) implies (not circle),True,69,22,1,21,0,0.9949751763340372,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green triangle,hg80,22,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1714,5747,(not blue) implies (not circle),True,70,22,1,19,2,0.8282917357560108,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large blue circle,hg80,22,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1715,5748,(not blue) implies (not circle),True,71,23,1,18,3,0.9957437470662852,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium blue rectangle,hg80,23,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1716,5749,(not blue) implies (not circle),True,72,23,1,20,1,0.9961837430571449,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green triangle,hg80,23,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1717,5750,(not blue) implies (not circle),True,73,24,1,20,1,0.885383734089828,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large blue circle,hg80,24,True,True,True,0.9147869674185464,0.6183345507669831,1.0,1.0,True
1718,5915,blue implies size 1,True,0,0,1,13,8,0.4667479616853142,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg81,0,True,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1719,5916,blue implies size 1,True,1,0,0,8,13,0.493274687813141,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg81,0,False,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1720,5917,blue implies size 1,True,2,0,1,15,6,0.474738450648374,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg81,0,True,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1721,5918,blue implies size 1,True,3,0,1,11,10,0.4972710536021622,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg81,0,True,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1722,5919,blue implies size 1,True,4,1,1,7,14,0.6392565636850804,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small green circle,hg81,1,True,True,True,0.9215686274509804,0.6989349112426035,0.5692307692307692,0.5692307692307692,True
1723,5920,blue implies size 1,True,5,1,1,19,2,0.8537706178536836,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green rectangle,hg81,1,True,True,True,0.9215686274509804,0.6989349112426035,0.5692307692307692,0.5692307692307692,True
1724,5921,blue implies size 1,True,6,1,1,2,19,0.4554374713129618,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow triangle,hg81,1,True,False,False,0.9215686274509804,0.6989349112426035,0.5692307692307692,0.5692307692307692,True
1725,5922,blue implies size 1,True,7,2,1,16,5,0.8138612585003102,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg81,2,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1726,5923,blue implies size 1,True,8,3,0,9,12,0.5359735837182596,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg81,3,False,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1727,5924,blue implies size 1,True,9,3,0,11,10,0.6829807665735643,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg81,3,False,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1728,5925,blue implies size 1,True,10,3,1,18,3,0.7470964224721683,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg81,3,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1729,5926,blue implies size 1,True,11,3,1,16,5,0.8045404646309179,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg81,3,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1730,5927,blue implies size 1,True,12,3,1,18,3,0.8355148107906416,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg81,3,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1731,5928,blue implies size 1,True,13,4,1,21,0,0.9499678429494905,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",small green circle,hg81,4,True,True,True,0.9215686274509804,0.6989349112426035,0.676923076923077,0.676923076923077,True
1732,5929,blue implies size 1,True,14,5,1,13,8,0.5783482639682233,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",medium yellow circle,hg81,5,True,True,False,0.9215686274509804,0.6989349112426035,0.676923076923077,0.676923076923077,False
1733,5930,blue implies size 1,True,15,5,1,7,14,0.7303056717797743,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",small blue triangle,hg81,5,True,True,False,0.9215686274509804,0.6989349112426035,0.676923076923077,0.676923076923077,False
1734,5931,blue implies size 1,True,16,5,0,17,4,0.5597209122799995,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",large blue rectangle,hg81,5,False,True,True,0.9215686274509804,0.6989349112426035,0.676923076923077,0.676923076923077,True
1735,5932,blue implies size 1,True,17,5,1,19,2,0.6424568920086812,"""λx.apply1(compose11(compose8(or,green),rectangle),x.o)""
",green or rectangle,"def is_rule(obj):
    return obj.green or obj.rectangle",medium yellow triangle,hg81,5,True,True,False,0.9215686274509804,0.6989349112426035,0.676923076923077,0.676923076923077,False
1736,5933,blue implies size 1,True,18,6,1,16,5,0.9566889744128276,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green triangle,hg81,6,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1737,5934,blue implies size 1,True,19,7,1,8,13,0.7529262115692745,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg81,7,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1738,5935,blue implies size 1,True,20,7,1,20,1,0.910040848608105,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg81,7,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1739,5936,blue implies size 1,True,21,7,1,18,3,0.658918201668598,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg81,7,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1740,5937,blue implies size 1,True,22,7,0,10,11,0.5881144899639139,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg81,7,False,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1741,5938,blue implies size 1,True,23,7,1,19,2,0.9374573207333013,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg81,7,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1742,5939,blue implies size 1,True,24,8,0,6,15,0.2729603448914303,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large blue circle,hg81,8,False,False,False,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1743,5940,blue implies size 1,True,25,9,1,15,6,0.933949150574108,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow rectangle,hg81,9,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1744,5941,blue implies size 1,True,26,9,1,20,1,0.97378320174721,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green triangle,hg81,9,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1745,5942,blue implies size 1,True,27,9,1,19,2,0.94089282943753,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",medium yellow triangle,hg81,9,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1746,5943,blue implies size 1,True,28,10,1,17,4,0.8663438849291651,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green triangle,hg81,10,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1747,5944,blue implies size 1,True,29,11,0,4,17,0.4126998512193722,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg81,11,False,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1748,5945,blue implies size 1,True,30,11,1,18,3,0.9402137472176264,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg81,11,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1749,5946,blue implies size 1,True,31,11,1,19,2,0.9481942496502141,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg81,11,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1750,5947,blue implies size 1,True,32,12,1,19,2,0.959905976125583,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green triangle,hg81,12,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1751,5948,blue implies size 1,True,33,13,1,20,1,0.9740911551782572,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green rectangle,hg81,13,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1752,5949,blue implies size 1,True,34,13,1,14,7,0.7409451600706233,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small blue rectangle,hg81,13,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1753,5950,blue implies size 1,True,35,14,1,20,1,0.8970078811785241,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg81,14,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1754,5951,blue implies size 1,True,36,14,1,20,1,0.9788527222644916,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg81,14,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1755,5952,blue implies size 1,True,37,14,0,4,17,0.4510593284543347,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg81,14,False,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1756,5953,blue implies size 1,True,38,14,1,21,0,0.9803041758631252,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg81,14,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1757,5954,blue implies size 1,True,39,15,1,21,0,0.98912813050174,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green circle,hg81,15,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1758,5955,blue implies size 1,True,40,15,0,6,15,0.1673388494398295,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",medium blue rectangle,hg81,15,False,False,False,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1759,5956,blue implies size 1,True,41,15,1,18,3,0.8811320329709815,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",medium yellow triangle,hg81,15,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1760,5957,blue implies size 1,True,42,15,1,21,0,0.9831666022770376,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green circle,hg81,15,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1761,5958,blue implies size 1,True,43,15,1,16,5,0.8625774522081427,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large yellow rectangle,hg81,15,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1762,5959,blue implies size 1,True,44,16,1,20,1,0.9972802822751418,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green rectangle,hg81,16,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1763,5960,blue implies size 1,True,45,16,1,19,2,0.9919334429022229,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow triangle,hg81,16,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1764,5961,blue implies size 1,True,46,16,1,14,7,0.7530142615461272,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small blue triangle,hg81,16,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1765,5962,blue implies size 1,True,47,16,1,20,1,0.9944244204716596,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",medium green rectangle,hg81,16,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1766,5963,blue implies size 1,True,48,16,1,17,4,0.7503327858906914,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small blue rectangle,hg81,16,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1767,5964,blue implies size 1,True,49,17,1,21,0,0.9897176966817368,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green circle,hg81,17,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1768,5965,blue implies size 1,True,50,17,1,19,2,0.9764140831625808,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow circle,hg81,17,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1769,5966,blue implies size 1,True,51,18,1,21,0,0.998487828565203,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green rectangle,hg81,18,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1770,5967,blue implies size 1,True,52,18,1,21,0,0.9919162291656676,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green triangle,hg81,18,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1771,5968,blue implies size 1,True,53,18,1,21,0,0.9935907932340342,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow rectangle,hg81,18,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1772,5969,blue implies size 1,True,54,19,1,20,1,0.9681036962855388,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow circle,hg81,19,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1773,5970,blue implies size 1,True,55,20,1,18,3,0.9203947909212502,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg81,20,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1774,5971,blue implies size 1,True,56,21,0,4,17,0.3584675914981971,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg81,21,False,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1775,5972,blue implies size 1,True,57,21,0,6,15,0.3927686208703562,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg81,21,False,False,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,False
1776,5973,blue implies size 1,True,58,21,1,21,0,0.9845752592557346,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg81,21,True,True,True,0.9215686274509804,0.6989349112426035,0.8153846153846154,0.8153846153846154,True
1777,5974,blue implies size 1,True,59,22,1,15,6,0.8162155964649855,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small blue circle,hg81,22,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1778,5975,blue implies size 1,True,60,23,1,20,1,0.9910314397960746,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large green triangle,hg81,23,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1779,5976,blue implies size 1,True,61,24,1,21,0,0.993593325410643,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small green circle,hg81,24,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1780,5977,blue implies size 1,True,62,24,1,21,0,0.9915448261939444,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",small yellow triangle,hg81,24,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1781,5978,blue implies size 1,True,63,24,1,20,1,0.9379206194222433,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large yellow triangle,hg81,24,True,True,True,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1782,5979,blue implies size 1,True,64,24,0,0,21,0.2322403039289611,"""λx.apply1(compose11(compose8(or,compose2(not,blue)),small),x.o)""
",(not blue) or small,"def is_rule(obj):
    return (not obj.blue) or obj.small",large blue circle,hg81,24,False,False,False,0.9215686274509804,0.6989349112426035,1.0,1.0,True
1783,5980,blue or small,True,0,0,0,14,10,0.4250248177124831,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg25,0,False,False,True,0.9141414141414144,0.5085066162570888,0.5652173913043478,0.5652173913043478,False
1784,5981,blue or small,True,1,0,1,13,11,0.4108643236327225,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg25,0,True,False,True,0.9141414141414144,0.5085066162570888,0.5652173913043478,0.5652173913043478,False
1785,5982,blue or small,True,2,0,0,12,12,0.4010741524541572,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg25,0,False,False,True,0.9141414141414144,0.5085066162570888,0.5652173913043478,0.5652173913043478,False
1786,5983,blue or small,True,3,0,1,8,16,0.4418239378268253,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg25,0,True,False,True,0.9141414141414144,0.5085066162570888,0.5652173913043478,0.5652173913043478,False
1787,5984,blue or small,True,4,0,1,4,20,0.4639857779969815,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg25,0,True,False,True,0.9141414141414144,0.5085066162570888,0.5652173913043478,0.5652173913043478,False
1788,5985,blue or small,True,5,1,1,1,23,0.4162671488381874,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue rectangle,hg25,1,True,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1789,5986,blue or small,True,6,1,1,22,2,0.91708780443048,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green rectangle,hg25,1,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1790,5987,blue or small,True,7,1,1,22,2,0.7604375254286424,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow triangle,hg25,1,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1791,5988,blue or small,True,8,1,0,2,22,0.4126041264462401,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green triangle,hg25,1,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1792,5989,blue or small,True,9,2,0,15,7,0.4275966624335296,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium yellow circle,hg25,2,False,False,True,0.9141414141414144,0.5085066162570888,0.6666666666666666,0.6666666666666666,False
1793,5990,blue or small,True,10,2,1,20,2,0.9318174942542328,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg25,2,True,True,True,0.9141414141414144,0.5085066162570888,0.6666666666666666,0.6666666666666666,True
1794,5991,blue or small,True,11,2,0,13,9,0.4271819539269472,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg25,2,False,False,True,0.9141414141414144,0.5085066162570888,0.6666666666666666,0.6666666666666666,False
1795,5992,blue or small,True,12,2,1,20,2,0.9188334942560912,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg25,2,True,True,True,0.9141414141414144,0.5085066162570888,0.6666666666666666,0.6666666666666666,True
1796,5993,blue or small,True,13,2,0,2,20,0.1734611043975746,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow triangle,hg25,2,False,False,False,0.9141414141414144,0.5085066162570888,0.6666666666666666,0.6666666666666666,True
1797,5994,blue or small,True,14,3,1,19,3,0.94178267235975,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green triangle,hg25,3,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1798,5995,blue or small,True,15,3,0,14,8,0.3109894796454,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow rectangle,hg25,3,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1799,5996,blue or small,True,16,4,1,18,4,0.9197666351564066,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg25,4,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1800,5997,blue or small,True,17,4,1,13,9,0.4756485482701009,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue rectangle,hg25,4,True,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1801,5998,blue or small,True,18,4,1,20,2,0.907395974511246,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow circle,hg25,4,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1802,5999,blue or small,True,19,4,0,2,20,0.0934030553632965,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow circle,hg25,4,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1803,6000,blue or small,True,20,4,1,17,5,0.9103143221959726,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg25,4,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1804,6001,blue or small,True,21,5,0,1,21,0.0662510056206428,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow circle,hg25,5,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1805,6002,blue or small,True,22,5,1,22,0,0.9914886006326924,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green circle,hg25,5,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1806,6003,blue or small,True,23,6,1,21,1,0.9770869192466308,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue triangle,hg25,6,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1807,6004,blue or small,True,24,6,0,1,21,0.0678441561448153,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow circle,hg25,6,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1808,6005,blue or small,True,25,6,1,21,1,0.9805764753145922,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg25,6,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1809,6006,blue or small,True,26,7,0,3,19,0.0894215958896893,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow triangle,hg25,7,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1810,6007,blue or small,True,27,7,1,12,10,0.5248781472178052,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue triangle,hg25,7,True,True,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,False
1811,6008,blue or small,True,28,7,0,1,21,0.123653254763326,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green circle,hg25,7,False,False,False,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1812,6009,blue or small,True,29,7,1,21,1,0.994647026935354,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue rectangle,hg25,7,True,True,True,0.9141414141414144,0.5085066162570888,0.7971014492753623,0.7971014492753623,True
1813,6010,blue or small,True,30,8,1,7,15,0.8339564393052114,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue rectangle,hg25,8,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1814,6011,blue or small,True,31,8,0,5,17,0.123155083202505,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium yellow rectangle,hg25,8,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1815,6012,blue or small,True,32,9,0,0,22,0.0418562940521951,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow circle,hg25,9,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1816,6013,blue or small,True,33,9,1,20,2,0.9260292873641446,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue rectangle,hg25,9,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1817,6014,blue or small,True,34,10,1,16,6,0.8867313266163137,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue triangle,hg25,10,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1818,6015,blue or small,True,35,10,0,2,20,0.1171265275970654,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow rectangle,hg25,10,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1819,6016,blue or small,True,36,10,1,19,3,0.8822636503460898,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small yellow rectangle,hg25,10,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1820,6017,blue or small,True,37,11,1,21,1,0.953926866597385,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small yellow rectangle,hg25,11,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1821,6018,blue or small,True,38,11,1,18,4,0.9488610164421516,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium blue circle,hg25,11,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1822,6019,blue or small,True,39,11,0,1,21,0.0331259760926059,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow rectangle,hg25,11,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1823,6020,blue or small,True,40,11,1,22,0,0.9685400633392192,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green circle,hg25,11,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1824,6021,blue or small,True,41,12,0,3,19,0.0496206307204829,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium green circle,hg25,12,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1825,6022,blue or small,True,42,13,0,1,21,0.0374865135856907,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large green triangle,hg25,13,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1826,6023,blue or small,True,43,13,0,5,17,0.0380301390752038,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium green triangle,hg25,13,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1827,6024,blue or small,True,44,14,0,1,21,0.0105993190461504,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium green triangle,hg25,14,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1828,6025,blue or small,True,45,14,1,20,2,0.919809441038069,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium blue rectangle,hg25,14,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1829,6026,blue or small,True,46,14,1,20,2,0.960919999168368,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green circle,hg25,14,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1830,6027,blue or small,True,47,15,1,21,1,0.98780844030739,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small blue triangle,hg25,15,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1831,6028,blue or small,True,48,16,1,19,3,0.9362835458160816,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue rectangle,hg25,16,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1832,6029,blue or small,True,49,16,1,20,2,0.9668165581884977,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small yellow rectangle,hg25,16,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1833,6030,blue or small,True,50,17,0,3,19,0.0245531981279327,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium green triangle,hg25,17,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1834,6031,blue or small,True,51,17,1,21,1,0.9287112699689714,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue triangle,hg25,17,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1835,6032,blue or small,True,52,17,1,21,1,0.9839692273942546,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green rectangle,hg25,17,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1836,6033,blue or small,True,53,17,0,1,21,0.0370078362958565,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow triangle,hg25,17,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1837,6034,blue or small,True,54,18,0,3,19,0.0402986960828002,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium yellow rectangle,hg25,18,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1838,6035,blue or small,True,55,19,1,21,1,0.9802818671776093,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green rectangle,hg25,19,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1839,6036,blue or small,True,56,20,0,4,18,0.0199890174523034,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium yellow circle,hg25,20,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1840,6037,blue or small,True,57,20,0,2,20,0.0396299963960018,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium yellow rectangle,hg25,20,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1841,6038,blue or small,True,58,20,0,0,22,0.0473753197893529,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large green circle,hg25,20,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1842,6039,blue or small,True,59,21,0,3,19,0.0062633272765424,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium yellow triangle,hg25,21,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1843,6040,blue or small,True,60,21,0,1,21,0.007840499008239,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow circle,hg25,21,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1844,6041,blue or small,True,61,22,0,3,19,0.014103326248005,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large green circle,hg25,22,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1845,6042,blue or small,True,62,22,0,1,21,0.0260393519920398,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large yellow rectangle,hg25,22,False,False,False,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1846,6043,blue or small,True,63,23,1,21,1,0.8975995026106602,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium blue rectangle,hg25,23,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1847,6044,blue or small,True,64,23,1,21,1,0.9837184765390248,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small blue triangle,hg25,23,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1848,6045,blue or small,True,65,23,1,19,3,0.8963440734979712,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue rectangle,hg25,23,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1849,6046,blue or small,True,66,23,1,16,6,0.8910234550323821,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",large blue circle,hg25,23,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1850,6047,blue or small,True,67,24,1,21,1,0.9923869080785152,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",medium blue circle,hg25,24,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1851,6048,blue or small,True,68,24,1,21,1,0.9585099998088252,"""λx.apply1(compose11(compose8(or,small),blue),x.o)""
",small or blue,"def is_rule(obj):
    return obj.small or obj.blue",small green rectangle,hg25,24,True,True,True,0.9141414141414144,0.5085066162570888,1.0,1.0,True
1852,6218,medium,True,0,0,0,8,14,0.4317145771128707,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg19,0,False,False,True,0.9279482127779342,0.5385802469135802,0.3611111111111111,0.3611111111111111,False
1853,6219,medium,True,1,0,1,8,14,0.4353144904966939,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg19,0,True,False,True,0.9279482127779342,0.5385802469135802,0.3611111111111111,0.3611111111111111,False
1854,6220,medium,True,2,0,0,9,13,0.4940915461810391,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg19,0,False,False,True,0.9279482127779342,0.5385802469135802,0.3611111111111111,0.3611111111111111,False
1855,6221,medium,True,3,1,0,13,9,0.384620078424291,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",large green circle,hg19,1,False,False,True,0.9279482127779342,0.5385802469135802,0.5138888888888888,0.5138888888888888,False
1856,6222,medium,True,4,2,0,0,22,0.209078911034453,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small blue rectangle,hg19,2,False,False,False,0.9279482127779342,0.5385802469135802,0.5138888888888888,0.5138888888888888,True
1857,6223,medium,True,5,3,0,3,19,0.2931373253492211,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg19,3,False,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1858,6224,medium,True,6,3,0,9,13,0.283428988725177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg19,3,False,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1859,6225,medium,True,7,4,0,3,19,0.1731374795630244,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg19,4,False,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1860,6226,medium,True,8,4,1,7,15,0.4150232281638182,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg19,4,True,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1861,6227,medium,True,9,4,1,6,16,0.3871418718166523,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg19,4,True,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1862,6228,medium,True,10,4,0,1,21,0.2789136858154961,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg19,4,False,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1863,6229,medium,True,11,4,0,5,17,0.2860585626617648,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg19,4,False,False,False,0.9279482127779342,0.5385802469135802,0.6388888888888888,0.6388888888888888,True
1864,6230,medium,True,12,5,1,20,2,0.7389266400833776,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green circle,hg19,5,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1865,6231,medium,True,13,5,1,11,11,0.3981298611672627,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue triangle,hg19,5,True,False,True,0.9279482127779342,0.5385802469135802,1.0,1.0,False
1866,6232,medium,True,14,6,1,16,6,0.6952209779911981,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow rectangle,hg19,6,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1867,6233,medium,True,15,6,0,2,20,0.2492728527254257,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow circle,hg19,6,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1868,6234,medium,True,16,6,1,16,6,0.7308691208675099,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue rectangle,hg19,6,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1869,6235,medium,True,17,6,0,3,19,0.1708342749858502,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green triangle,hg19,6,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1870,6236,medium,True,18,6,1,20,2,0.8468213141633214,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue circle,hg19,6,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1871,6237,medium,True,19,7,1,21,1,0.9368368107349168,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow rectangle,hg19,7,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1872,6238,medium,True,20,7,1,19,3,0.900278945531113,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue triangle,hg19,7,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1873,6239,medium,True,21,8,0,5,17,0.2172277018856902,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue circle,hg19,8,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1874,6240,medium,True,22,8,0,5,17,0.1122385775512384,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue circle,hg19,8,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1875,6241,medium,True,23,9,0,3,19,0.1363081247765194,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green triangle,hg19,9,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1876,6242,medium,True,24,9,1,20,2,0.9453267501020264,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue circle,hg19,9,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1877,6243,medium,True,25,9,0,2,20,0.1173135388968375,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue triangle,hg19,9,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1878,6244,medium,True,26,9,1,21,1,0.9505592743743136,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green circle,hg19,9,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1879,6245,medium,True,27,10,1,18,4,0.9382477411714945,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow triangle,hg19,10,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1880,6246,medium,True,28,10,0,3,19,0.0331069079759345,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue triangle,hg19,10,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1881,6247,medium,True,29,10,1,21,1,0.9733254747216052,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow rectangle,hg19,10,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1882,6248,medium,True,30,10,0,0,22,0.0846734131516768,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green rectangle,hg19,10,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1883,6249,medium,True,31,11,0,3,19,0.0408615141230939,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue rectangle,hg19,11,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1884,6250,medium,True,32,11,1,21,1,0.9762879374264912,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green triangle,hg19,11,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1885,6251,medium,True,33,12,0,2,20,0.017567097544429,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow triangle,hg19,12,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1886,6252,medium,True,34,13,1,21,1,0.9825065870568324,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green circle,hg19,13,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1887,6253,medium,True,35,13,1,19,3,0.9611811752865832,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue triangle,hg19,13,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1888,6254,medium,True,36,13,0,0,22,0.0372588995468277,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow circle,hg19,13,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1889,6255,medium,True,37,13,1,20,2,0.9780904132680917,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow circle,hg19,13,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1890,6256,medium,True,38,14,0,1,21,0.0411700153475749,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow triangle,hg19,14,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1891,6257,medium,True,39,15,1,22,0,0.963648928161774,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green triangle,hg19,15,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1892,6258,medium,True,40,15,0,0,22,0.0747194928893577,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green rectangle,hg19,15,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1893,6259,medium,True,41,16,1,20,2,0.9818274616907274,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue rectangle,hg19,16,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1894,6260,medium,True,42,16,1,20,2,0.9869264641398559,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue circle,hg19,16,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1895,6261,medium,True,43,16,0,3,19,0.0253723462053585,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green triangle,hg19,16,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1896,6262,medium,True,44,16,0,2,20,0.0394803990197942,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue triangle,hg19,16,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1897,6263,medium,True,45,16,0,1,21,0.0256499763041801,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow rectangle,hg19,16,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1898,6264,medium,True,46,17,0,1,21,0.0093341593020568,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow rectangle,hg19,17,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1899,6265,medium,True,47,17,0,2,20,0.0209682564873219,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green circle,hg19,17,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1900,6266,medium,True,48,17,0,1,21,0.0087075130816174,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green rectangle,hg19,17,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1901,6267,medium,True,49,17,0,1,21,0.0074582009870027,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green triangle,hg19,17,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1902,6268,medium,True,50,18,0,2,20,0.0123781248220211,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue rectangle,hg19,18,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1903,6269,medium,True,51,18,0,1,21,0.0092697311981737,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow circle,hg19,18,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1904,6270,medium,True,52,18,0,1,21,0.001793658010456,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green triangle,hg19,18,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1905,6271,medium,True,53,18,1,21,1,0.980994617957208,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium yellow triangle,hg19,18,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1906,6272,medium,True,54,18,0,2,20,0.0124401140914187,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue triangle,hg19,18,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1907,6273,medium,True,55,19,1,18,4,0.9856250459696412,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium green circle,hg19,19,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1908,6274,medium,True,56,19,0,3,19,0.0012493909659951,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green triangle,hg19,19,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1909,6275,medium,True,57,20,0,2,20,0.0063320583932409,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green circle,hg19,20,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1910,6276,medium,True,58,20,0,1,21,0.0038676177269962,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow rectangle,hg19,20,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1911,6277,medium,True,59,20,0,1,21,0.0039456583716628,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green rectangle,hg19,20,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1912,6278,medium,True,60,21,1,21,1,0.9901490065697088,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue circle,hg19,21,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1913,6279,medium,True,61,21,0,1,21,0.0010545551092491,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow triangle,hg19,21,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1914,6280,medium,True,62,21,0,1,21,0.0030594736811053,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green circle,hg19,21,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1915,6281,medium,True,63,21,0,1,21,0.0007689860044592,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large green rectangle,hg19,21,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1916,6282,medium,True,64,21,0,1,21,0.0070520282445158,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue triangle,hg19,21,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1917,6283,medium,True,65,22,0,2,20,0.0043865445273922,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue circle,hg19,22,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1918,6284,medium,True,66,22,0,1,21,0.0004473728789662,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow rectangle,hg19,22,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1919,6285,medium,True,67,23,1,21,1,0.9815093699257886,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue circle,hg19,23,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1920,6286,medium,True,68,23,0,1,21,0.0006230708262364,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green rectangle,hg19,23,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1921,6287,medium,True,69,23,0,3,19,0.0027440582682629,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue rectangle,hg19,23,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1922,6288,medium,True,70,24,0,1,20,0.0014209250839485,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow triangle,hg19,24,False,False,False,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1923,6289,medium,True,71,24,1,19,2,0.9737823542258184,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",medium blue triangle,hg19,24,True,True,True,0.9279482127779342,0.5385802469135802,1.0,1.0,True
1924,6804,circle or triangle,True,0,0,1,7,15,0.4949276687725614,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg07,0,True,False,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,False
1925,6805,circle or triangle,True,1,0,1,11,11,0.4513258284714538,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg07,0,True,False,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,False
1926,6806,circle or triangle,True,2,0,1,16,6,0.4343065644455919,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg07,0,True,False,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,False
1927,6807,circle or triangle,True,3,0,1,5,17,0.4952714558572779,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg07,0,True,False,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,False
1928,6808,circle or triangle,True,4,1,1,18,4,0.7935844168758877,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg07,1,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1929,6809,circle or triangle,True,5,1,0,11,11,0.6592330478375743,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg07,1,False,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1930,6810,circle or triangle,True,6,2,1,20,2,0.6538097260963694,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg07,2,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1931,6811,circle or triangle,True,7,3,1,15,7,0.6839274845183354,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg07,3,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1932,6812,circle or triangle,True,8,4,1,20,2,0.6999953512382717,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg07,4,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1933,6813,circle or triangle,True,9,4,1,20,2,0.6546524867186462,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg07,4,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1934,6814,circle or triangle,True,10,4,1,20,2,0.7371675534396899,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg07,4,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1935,6815,circle or triangle,True,11,4,1,19,3,0.7003663432853954,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg07,4,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1936,6816,circle or triangle,True,12,4,1,17,5,0.709131253938949,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg07,4,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1937,6817,circle or triangle,True,13,5,1,22,0,0.9202908997183384,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg07,5,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1938,6818,circle or triangle,True,14,5,0,6,16,0.6805821861554477,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg07,5,False,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1939,6819,circle or triangle,True,15,5,1,21,1,0.9060566310131434,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg07,5,True,True,True,0.956818181818182,0.5950032873109796,0.717948717948718,0.717948717948718,True
1940,6820,circle or triangle,True,16,6,1,21,1,0.8765941009385187,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow triangle,hg07,6,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1941,6821,circle or triangle,True,17,6,0,3,19,0.564808311055799,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue rectangle,hg07,6,False,True,False,0.956818181818182,0.5950032873109796,1.0,1.0,False
1942,6822,circle or triangle,True,18,6,0,2,20,0.4939599219110277,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow rectangle,hg07,6,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1943,6823,circle or triangle,True,19,7,1,19,3,0.9218153822829436,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green circle,hg07,7,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1944,6824,circle or triangle,True,20,7,0,1,21,0.1779234091374064,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue rectangle,hg07,7,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1945,6825,circle or triangle,True,21,7,1,19,3,0.9416720704790577,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large green triangle,hg07,7,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1946,6826,circle or triangle,True,22,7,0,0,22,0.191223200423451,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small blue rectangle,hg07,7,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1947,6827,circle or triangle,True,23,8,1,20,2,0.9802899024334693,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg07,8,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1948,6828,circle or triangle,True,24,8,0,3,19,0.1448827918574124,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg07,8,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1949,6829,circle or triangle,True,25,8,1,19,3,0.9783294319560129,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green triangle,hg07,8,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1950,6830,circle or triangle,True,26,8,1,19,3,0.8899272030722613,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow circle,hg07,8,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1951,6831,circle or triangle,True,27,8,1,18,4,0.8919221683943305,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow circle,hg07,8,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1952,6832,circle or triangle,True,28,9,0,3,19,0.0379492099493745,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg07,9,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1953,6833,circle or triangle,True,29,9,1,21,1,0.9902567219749016,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow circle,hg07,9,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1954,6834,circle or triangle,True,30,9,1,20,2,0.9875227948441532,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green triangle,hg07,9,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1955,6835,circle or triangle,True,31,10,0,1,21,0.0319709508605683,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green rectangle,hg07,10,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1956,6836,circle or triangle,True,32,10,0,2,20,0.0397883721291236,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow rectangle,hg07,10,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1957,6837,circle or triangle,True,33,10,1,22,0,0.9937150410499952,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg07,10,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1958,6838,circle or triangle,True,34,10,1,21,1,0.9944386432285908,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green circle,hg07,10,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1959,6839,circle or triangle,True,35,11,0,2,20,0.0178850926117775,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow rectangle,hg07,11,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1960,6840,circle or triangle,True,36,11,1,21,1,0.995720760572567,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green circle,hg07,11,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1961,6841,circle or triangle,True,37,11,0,2,20,0.0468664712585677,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue rectangle,hg07,11,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1962,6842,circle or triangle,True,38,12,1,21,1,0.997469199635816,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green circle,hg07,12,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1963,6843,circle or triangle,True,39,12,0,1,21,0.0135421249502769,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg07,12,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1964,6844,circle or triangle,True,40,12,1,19,3,0.9884386285970094,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow triangle,hg07,12,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1965,6845,circle or triangle,True,41,12,1,18,4,0.9901311440795552,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green triangle,hg07,12,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1966,6846,circle or triangle,True,42,13,1,20,2,0.9945108174920279,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg07,13,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1967,6847,circle or triangle,True,43,13,1,20,2,0.9971722165416848,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow triangle,hg07,13,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1968,6848,circle or triangle,True,44,13,1,21,1,0.9981990776932435,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green circle,hg07,13,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1969,6849,circle or triangle,True,45,13,1,20,2,0.995227152580469,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue triangle,hg07,13,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1970,6850,circle or triangle,True,46,13,0,2,20,0.007597783221513,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow rectangle,hg07,13,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1971,6851,circle or triangle,True,47,14,1,21,1,0.9912751589888557,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow circle,hg07,14,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1972,6852,circle or triangle,True,48,14,0,1,21,0.0041440894343622,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow rectangle,hg07,14,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1973,6853,circle or triangle,True,49,14,1,21,1,0.998318395863066,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large green triangle,hg07,14,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1974,6854,circle or triangle,True,50,14,1,22,0,0.9977094254682016,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow triangle,hg07,14,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1975,6855,circle or triangle,True,51,15,0,2,20,0.0032468330533674,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow rectangle,hg07,15,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1976,6856,circle or triangle,True,52,15,0,1,21,0.0056189736744727,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green rectangle,hg07,15,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1977,6857,circle or triangle,True,53,15,1,22,0,0.9986970105686624,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green circle,hg07,15,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1978,6858,circle or triangle,True,54,15,1,22,0,0.9993138659950772,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green triangle,hg07,15,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1979,6859,circle or triangle,True,55,16,1,22,0,0.9993625770656536,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green triangle,hg07,16,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1980,6860,circle or triangle,True,56,16,0,1,21,0.038137419527743,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue rectangle,hg07,16,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1981,6861,circle or triangle,True,57,17,1,21,1,0.9983797288658706,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg07,17,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1982,6862,circle or triangle,True,58,17,1,20,2,0.9913574925272997,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue circle,hg07,17,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1983,6863,circle or triangle,True,59,17,1,20,2,0.991113144277392,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow circle,hg07,17,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1984,6864,circle or triangle,True,60,17,0,2,20,0.0135175571392665,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green rectangle,hg07,17,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1985,6865,circle or triangle,True,61,18,1,22,0,0.991308753013186,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large green triangle,hg07,18,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1986,6866,circle or triangle,True,62,19,0,2,20,0.0053360115639407,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large green rectangle,hg07,19,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1987,6867,circle or triangle,True,63,19,0,0,22,0.0294798085700449,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue rectangle,hg07,19,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1988,6868,circle or triangle,True,64,19,1,21,1,0.9988193929417548,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg07,19,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1989,6869,circle or triangle,True,65,19,1,22,0,0.9961646115848451,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow triangle,hg07,19,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1990,6870,circle or triangle,True,66,19,1,20,2,0.9965722581129056,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow circle,hg07,19,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1991,6871,circle or triangle,True,67,20,1,21,1,0.9947420841303936,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue circle,hg07,20,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1992,6872,circle or triangle,True,68,21,1,21,1,0.9977527410499079,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow triangle,hg07,21,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1993,6873,circle or triangle,True,69,21,0,0,22,0.003667677460271,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow rectangle,hg07,21,False,False,False,0.956818181818182,0.5950032873109796,1.0,1.0,True
1994,6874,circle or triangle,True,70,21,1,21,1,0.9986712994702884,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium yellow circle,hg07,21,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1995,6875,circle or triangle,True,71,22,1,20,2,0.9993179281484572,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green circle,hg07,22,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1996,6876,circle or triangle,True,72,22,1,20,2,0.9980766043689754,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small yellow circle,hg07,22,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1997,6877,circle or triangle,True,73,22,1,22,0,0.9992193875524435,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue triangle,hg07,22,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1998,6878,circle or triangle,True,74,22,1,22,0,0.9993224678134992,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green triangle,hg07,22,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
1999,6879,circle or triangle,True,75,23,1,22,0,0.9976824522627794,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small green circle,hg07,23,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
2000,6880,circle or triangle,True,76,24,1,21,1,0.9972837579673524,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large yellow triangle,hg07,24,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
2001,6881,circle or triangle,True,77,24,1,22,0,0.998696673019026,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium green triangle,hg07,24,True,True,True,0.956818181818182,0.5950032873109796,1.0,1.0,True
2002,6882,small,True,0,0,0,7,17,0.4637403389391465,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg20,0,False,False,True,0.9816933638443937,0.5413773691124039,0.3561643835616438,0.3561643835616438,False
2003,6883,small,True,1,0,0,16,8,0.4240649253015362,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg20,0,False,False,True,0.9816933638443937,0.5413773691124039,0.3561643835616438,0.3561643835616438,False
2004,6884,small,True,2,0,1,6,18,0.4627366521891644,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg20,0,True,False,True,0.9816933638443937,0.5413773691124039,0.3561643835616438,0.3561643835616438,False
2005,6885,small,True,3,0,1,6,18,0.4968311840632395,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg20,0,True,False,True,0.9816933638443937,0.5413773691124039,0.3561643835616438,0.3561643835616438,False
2006,6886,small,True,4,0,0,16,8,0.5071458287103496,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg20,0,False,True,True,0.9816933638443937,0.5413773691124039,0.3561643835616438,0.3561643835616438,True
2007,6887,small,True,5,1,0,2,22,0.134821470825841,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large blue circle,hg20,1,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2008,6888,small,True,6,1,1,17,7,0.6512291369855348,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue triangle,hg20,1,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2009,6889,small,True,7,2,0,8,16,0.3374630124230861,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green circle,hg20,2,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2010,6890,small,True,8,3,0,6,18,0.2759336262371334,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green rectangle,hg20,3,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2011,6891,small,True,9,4,0,1,23,0.1668152193121841,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green rectangle,hg20,4,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2012,6892,small,True,10,4,0,0,24,0.1568820280011777,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green circle,hg20,4,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2013,6893,small,True,11,4,1,16,8,0.5799600849290982,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg20,4,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2014,6894,small,True,12,4,0,0,24,0.2579580934395835,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,4,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2015,6895,small,True,13,4,0,3,21,0.2077360883738492,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green rectangle,hg20,4,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2016,6896,small,True,14,5,1,21,2,0.6017993313041642,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green triangle,hg20,5,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2017,6897,small,True,15,5,0,1,22,0.1006007777976947,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue rectangle,hg20,5,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2018,6898,small,True,16,5,0,0,23,0.1958019187992476,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green triangle,hg20,5,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2019,6899,small,True,17,5,0,1,22,0.0576000202314617,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow circle,hg20,5,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2020,6900,small,True,18,5,0,1,22,0.0978820715838537,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,5,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2021,6901,small,True,19,6,0,0,23,0.0421529581875574,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green rectangle,hg20,6,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2022,6902,small,True,20,7,0,0,23,0.0470630789566257,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow circle,hg20,7,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2023,6903,small,True,21,8,1,21,2,0.6404138165249833,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg20,8,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2024,6904,small,True,22,9,1,23,0,0.6418830669899762,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg20,9,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2025,6905,small,True,23,9,0,0,23,0.1066370790354085,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue rectangle,hg20,9,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2026,6906,small,True,24,10,1,21,2,0.8437650456555729,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green rectangle,hg20,10,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2027,6907,small,True,25,10,0,0,23,0.0523319396415899,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,10,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2028,6908,small,True,26,10,0,2,21,0.0556723892027548,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow circle,hg20,10,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2029,6909,small,True,27,11,0,0,23,0.0406596013658599,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow rectangle,hg20,11,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2030,6910,small,True,28,11,0,0,23,0.0206435822855155,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,11,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2031,6911,small,True,29,12,1,20,3,0.7651289127194331,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow circle,hg20,12,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2032,6912,small,True,30,12,0,0,23,0.0311472816131299,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow circle,hg20,12,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2033,6913,small,True,31,13,1,23,0,0.8802508129055013,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg20,13,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2034,6914,small,True,32,13,1,23,0,0.909840754050606,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue triangle,hg20,13,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2035,6915,small,True,33,13,0,0,23,0.0136841299429306,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow circle,hg20,13,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2036,6916,small,True,34,14,0,1,22,0.0398691752740205,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green circle,hg20,14,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2037,6917,small,True,35,14,1,22,1,0.9633502270509096,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg20,14,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2038,6918,small,True,36,14,1,23,0,0.9550012543587628,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow triangle,hg20,14,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2039,6919,small,True,37,15,1,23,0,0.9627022694978676,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green triangle,hg20,15,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2040,6920,small,True,38,15,0,0,23,0.2235929359195552,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue triangle,hg20,15,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2041,6921,small,True,39,16,0,0,23,0.015689096965616,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow circle,hg20,16,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2042,6922,small,True,40,16,0,0,23,0.0864220074253125,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green triangle,hg20,16,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2043,6923,small,True,41,16,0,0,23,0.0175181846161649,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large blue circle,hg20,16,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2044,6924,small,True,42,16,1,23,0,0.975415024789754,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg20,16,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2045,6925,small,True,43,17,0,2,21,0.0358216482368334,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green rectangle,hg20,17,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2046,6926,small,True,44,17,0,2,21,0.0486618797158371,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green rectangle,hg20,17,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2047,6927,small,True,45,17,0,1,22,0.017379497176762,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,17,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2048,6928,small,True,46,18,1,23,0,0.9551837380258804,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow rectangle,hg20,18,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2049,6929,small,True,47,18,1,23,0,0.9691688897662516,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue rectangle,hg20,18,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2050,6930,small,True,48,18,1,23,0,0.9660993560012228,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue circle,hg20,18,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2051,6931,small,True,49,18,0,0,23,0.0039745885813999,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green circle,hg20,18,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2052,6932,small,True,50,19,0,0,23,0.0056869020702379,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue circle,hg20,19,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2053,6933,small,True,51,19,0,1,22,0.0727990593014737,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green triangle,hg20,19,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2054,6934,small,True,52,19,1,23,0,0.9760183156571428,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg20,19,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2055,6935,small,True,53,19,1,23,0,0.9772391566763188,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green rectangle,hg20,19,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2056,6936,small,True,54,20,0,0,23,0.0169154500206332,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow rectangle,hg20,20,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2057,6937,small,True,55,20,0,0,23,0.1476865302815895,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow triangle,hg20,20,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2058,6938,small,True,56,20,0,0,23,0.1505106523948143,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow triangle,hg20,20,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2059,6939,small,True,57,20,1,23,0,0.9884454368911973,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow rectangle,hg20,20,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2060,6940,small,True,58,20,0,2,21,0.0204757096278171,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow rectangle,hg20,20,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2061,6941,small,True,59,21,0,0,23,0.0014157555677911,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium yellow circle,hg20,21,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2062,6942,small,True,60,21,1,23,0,0.9961677623074364,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow rectangle,hg20,21,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2063,6943,small,True,61,21,0,0,23,0.0023067034061341,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green circle,hg20,21,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2064,6944,small,True,62,22,1,23,0,0.9968507116071804,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow rectangle,hg20,22,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2065,6945,small,True,63,22,1,23,0,0.984015968062522,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small green circle,hg20,22,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2066,6946,small,True,64,22,0,0,23,0.0041156680316589,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green rectangle,hg20,22,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2067,6947,small,True,65,23,0,2,21,0.0236360779807682,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium blue rectangle,hg20,23,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2068,6948,small,True,66,23,0,1,22,0.0021972387679625,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large yellow circle,hg20,23,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2069,6949,small,True,67,23,0,0,23,0.0155033908113182,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large blue circle,hg20,23,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2070,6950,small,True,68,24,0,1,22,0.001726573308133,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",medium green circle,hg20,24,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2071,6951,small,True,69,24,1,23,0,0.9927898438838838,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small yellow circle,hg20,24,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2072,6952,small,True,70,24,1,23,0,0.995096969502356,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",small blue triangle,hg20,24,True,True,True,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2073,6953,small,True,71,24,0,0,23,0.0024772077774741,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large blue rectangle,hg20,24,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2074,6954,small,True,72,24,0,0,23,0.0026161386281273,"""λx.apply1(small,x.o)""
",small,"def is_rule(obj):
    return obj.small",large green rectangle,hg20,24,False,False,False,0.9816933638443937,0.5413773691124039,1.0,1.0,True
2075,7164,not (circle xor blue),True,0,0,0,7,18,0.4805423044037979,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg15,0,False,False,True,0.8052631578947368,0.5000843312531624,0.5064935064935064,0.5064935064935064,False
2076,7165,not (circle xor blue),True,1,0,0,14,11,0.4697269448513452,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg15,0,False,False,True,0.8052631578947368,0.5000843312531624,0.5064935064935064,0.5064935064935064,False
2077,7166,not (circle xor blue),True,2,1,1,6,18,0.3567453316229602,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg15,1,True,False,False,0.8052631578947368,0.5000843312531624,0.4935064935064935,0.4935064935064935,True
2078,7167,not (circle xor blue),True,3,1,0,10,14,0.2469117987321851,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg15,1,False,False,False,0.8052631578947368,0.5000843312531624,0.4935064935064935,0.4935064935064935,True
2079,7168,not (circle xor blue),True,4,1,1,6,18,0.2985371891857084,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg15,1,True,False,False,0.8052631578947368,0.5000843312531624,0.4935064935064935,0.4935064935064935,True
2080,7169,not (circle xor blue),True,5,1,0,11,13,0.3429397058815766,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg15,1,False,False,False,0.8052631578947368,0.5000843312531624,0.4935064935064935,0.4935064935064935,True
2081,7170,not (circle xor blue),True,6,1,1,8,16,0.3321685457316334,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg15,1,True,False,False,0.8052631578947368,0.5000843312531624,0.4935064935064935,0.4935064935064935,True
2082,7171,not (circle xor blue),True,7,2,1,22,2,0.7352048330164961,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg15,2,True,True,True,0.8052631578947368,0.5000843312531624,0.5194805194805194,0.5194805194805194,True
2083,7172,not (circle xor blue),True,8,3,1,4,19,0.5258924992965603,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green rectangle,hg15,3,True,True,False,0.8052631578947368,0.5000843312531624,0.5194805194805194,0.5194805194805194,False
2084,7173,not (circle xor blue),True,9,4,0,2,21,0.2636616850288646,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg15,4,False,False,False,0.8052631578947368,0.5000843312531624,0.6103896103896104,0.6103896103896104,True
2085,7174,not (circle xor blue),True,10,4,0,13,10,0.4314669173428455,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg15,4,False,False,False,0.8052631578947368,0.5000843312531624,0.6103896103896104,0.6103896103896104,True
2086,7175,not (circle xor blue),True,11,4,0,11,12,0.4473450692740925,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg15,4,False,False,True,0.8052631578947368,0.5000843312531624,0.6103896103896104,0.6103896103896104,False
2087,7176,not (circle xor blue),True,12,4,1,9,14,0.4876048498888394,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg15,4,True,False,False,0.8052631578947368,0.5000843312531624,0.6103896103896104,0.6103896103896104,True
2088,7177,not (circle xor blue),True,13,4,1,12,11,0.658587027404792,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow triangle,hg15,4,True,True,True,0.8052631578947368,0.5000843312531624,0.6103896103896104,0.6103896103896104,True
2089,7178,not (circle xor blue),True,14,5,0,9,13,0.2894986354189086,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue rectangle,hg15,5,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2090,7179,not (circle xor blue),True,15,6,0,3,19,0.1167936983673598,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg15,6,False,False,False,0.8052631578947368,0.5000843312531624,0.5194805194805194,0.5194805194805194,True
2091,7180,not (circle xor blue),True,16,7,1,3,19,0.4908314129331756,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow rectangle,hg15,7,True,False,False,0.8052631578947368,0.5000843312531624,0.5194805194805194,0.5194805194805194,True
2092,7181,not (circle xor blue),True,17,7,1,13,9,0.320657743360357,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue circle,hg15,7,True,False,False,0.8052631578947368,0.5000843312531624,0.5194805194805194,0.5194805194805194,True
2093,7182,not (circle xor blue),True,18,8,0,6,16,0.2203075642440808,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue rectangle,hg15,8,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2094,7183,not (circle xor blue),True,19,8,0,8,14,0.2764237619826417,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green circle,hg15,8,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2095,7184,not (circle xor blue),True,20,8,1,12,10,0.7546439853831542,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green rectangle,hg15,8,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2096,7185,not (circle xor blue),True,21,9,1,11,11,0.82670929121889,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green triangle,hg15,9,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2097,7186,not (circle xor blue),True,22,9,1,14,8,0.5717159853104476,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue circle,hg15,9,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2098,7187,not (circle xor blue),True,23,9,0,6,16,0.1725457442313427,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue rectangle,hg15,9,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2099,7188,not (circle xor blue),True,24,9,0,14,8,0.169897086634819,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue triangle,hg15,9,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2100,7189,not (circle xor blue),True,25,9,0,7,15,0.1149872967603187,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green circle,hg15,9,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2101,7190,not (circle xor blue),True,26,10,0,5,16,0.060518512919657,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow circle,hg15,10,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2102,7191,not (circle xor blue),True,27,10,0,7,14,0.0189188145574235,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue triangle,hg15,10,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2103,7192,not (circle xor blue),True,28,10,1,18,3,0.9492932214441224,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green triangle,hg15,10,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2104,7193,not (circle xor blue),True,29,10,1,14,7,0.8605459510999935,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow triangle,hg15,10,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2105,7194,not (circle xor blue),True,30,11,1,16,4,0.9560252264019482,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow triangle,hg15,11,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2106,7195,not (circle xor blue),True,31,11,1,10,10,0.9499564825135848,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow rectangle,hg15,11,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2107,7196,not (circle xor blue),True,32,12,0,2,17,0.034589443194136,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue rectangle,hg15,12,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2108,7197,not (circle xor blue),True,33,12,0,1,18,0.033677065220786,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue triangle,hg15,12,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2109,7198,not (circle xor blue),True,34,12,1,16,3,0.9787265050362066,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green rectangle,hg15,12,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2110,7199,not (circle xor blue),True,35,12,1,18,1,0.9856225536029796,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow rectangle,hg15,12,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2111,7200,not (circle xor blue),True,36,12,0,7,12,0.0455457618376158,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large yellow circle,hg15,12,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2112,7201,not (circle xor blue),True,37,13,1,13,6,0.609863740078822,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue circle,hg15,13,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2113,7202,not (circle xor blue),True,38,13,1,17,2,0.6098776318231102,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue circle,hg15,13,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2114,7203,not (circle xor blue),True,39,13,0,4,15,0.0170502981115987,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow circle,hg15,13,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2115,7204,not (circle xor blue),True,40,14,1,17,2,0.98888897044219,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large yellow triangle,hg15,14,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2116,7205,not (circle xor blue),True,41,14,0,5,14,0.0128832312921076,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green circle,hg15,14,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2117,7206,not (circle xor blue),True,42,14,1,15,4,0.9930594419462296,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green triangle,hg15,14,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2118,7207,not (circle xor blue),True,43,14,1,17,2,0.9924371702696816,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green rectangle,hg15,14,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2119,7208,not (circle xor blue),True,44,15,0,4,15,0.0237053787151353,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue triangle,hg15,15,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2120,7209,not (circle xor blue),True,45,15,1,18,1,0.9980898439472412,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green triangle,hg15,15,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2121,7210,not (circle xor blue),True,46,16,1,18,1,0.814108491444017,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue circle,hg15,16,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2122,7211,not (circle xor blue),True,47,17,1,17,2,0.994744097169928,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green triangle,hg15,17,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2123,7212,not (circle xor blue),True,48,17,1,17,2,0.9800982902871735,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow rectangle,hg15,17,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2124,7213,not (circle xor blue),True,49,17,1,18,1,0.9913062313522686,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green rectangle,hg15,17,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2125,7214,not (circle xor blue),True,50,17,0,3,16,0.0279558211261701,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue triangle,hg15,17,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2126,7215,not (circle xor blue),True,51,17,0,3,16,0.0276639167076382,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue triangle,hg15,17,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2127,7216,not (circle xor blue),True,52,18,1,13,6,0.9940509142979864,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow rectangle,hg15,18,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2128,7217,not (circle xor blue),True,53,18,1,14,5,0.9932604007958616,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow triangle,hg15,18,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2129,7218,not (circle xor blue),True,54,18,0,6,13,0.0472044549600241,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large green circle,hg15,18,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2130,7219,not (circle xor blue),True,55,18,1,15,4,0.8664118464533885,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue circle,hg15,18,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2131,7220,not (circle xor blue),True,56,18,1,15,4,0.9948202584286036,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow rectangle,hg15,18,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2132,7221,not (circle xor blue),True,57,19,1,17,2,0.9497940159869812,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue circle,hg15,19,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2133,7222,not (circle xor blue),True,58,19,0,5,14,0.009500737140911,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue rectangle,hg15,19,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2134,7223,not (circle xor blue),True,59,19,0,4,15,0.0161289493115646,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large yellow circle,hg15,19,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2135,7224,not (circle xor blue),True,60,19,1,19,0,0.9990530334538335,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green rectangle,hg15,19,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2136,7225,not (circle xor blue),True,61,19,0,5,14,0.0089809609456779,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue triangle,hg15,19,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2137,7226,not (circle xor blue),True,62,20,0,3,16,0.0079838514345738,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow circle,hg15,20,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2138,7227,not (circle xor blue),True,63,20,0,4,15,0.0080086784098511,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green circle,hg15,20,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2139,7228,not (circle xor blue),True,64,21,0,8,11,0.0023199407169158,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green circle,hg15,21,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2140,7229,not (circle xor blue),True,65,21,0,3,16,0.0043096999056615,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue rectangle,hg15,21,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2141,7230,not (circle xor blue),True,66,21,1,18,1,0.9988624362578092,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium green triangle,hg15,21,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2142,7231,not (circle xor blue),True,67,22,1,16,3,0.8950130563227958,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue circle,hg15,22,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2143,7232,not (circle xor blue),True,68,22,0,4,15,0.0023176987958777,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium blue rectangle,hg15,22,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2144,7233,not (circle xor blue),True,69,22,1,15,4,0.9958818720158432,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large yellow triangle,hg15,22,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2145,7234,not (circle xor blue),True,70,23,0,3,16,0.0013608399347049,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue rectangle,hg15,23,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2146,7235,not (circle xor blue),True,71,23,0,5,14,0.0014573715819778,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",large blue rectangle,hg15,23,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2147,7236,not (circle xor blue),True,72,23,0,3,16,0.001331934933205,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small blue triangle,hg15,23,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2148,7237,not (circle xor blue),True,73,24,1,12,7,0.9960388120415472,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small yellow triangle,hg15,24,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2149,7238,not (circle xor blue),True,74,24,0,3,16,0.0089070602059564,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green circle,hg15,24,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2150,7239,not (circle xor blue),True,75,24,0,2,17,0.0091534145427658,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",medium yellow circle,hg15,24,False,False,False,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2151,7240,not (circle xor blue),True,76,24,1,14,5,0.9980226493668168,"""λx.apply1(compose11(compose8(iff,blue),circle),x.o)""
",blue iff circle,"def is_rule(obj):
    return (obj.blue and obj.circle) or (not obj.blue and not obj.circle)",small green rectangle,hg15,24,True,True,True,0.8052631578947368,0.5000843312531624,1.0,1.0,True
2152,7241,circle implies blue,True,0,0,1,14,9,0.474077926237669,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg77,0,True,False,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,False
2153,7242,circle implies blue,True,1,0,1,15,8,0.4136553200638672,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg77,0,True,False,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,False
2154,7243,circle implies blue,True,2,0,1,10,13,0.4403608896930109,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg77,0,True,False,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,False
2155,7244,circle implies blue,True,3,1,1,3,20,0.6419082590122116,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg77,1,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2156,7245,circle implies blue,True,4,1,1,21,2,0.8737078901619952,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg77,1,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2157,7246,circle implies blue,True,5,1,1,21,2,0.8884599110057251,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg77,1,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2158,7247,circle implies blue,True,6,1,1,4,19,0.5723024039142501,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg77,1,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2159,7248,circle implies blue,True,7,1,1,4,19,0.6399301078505459,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg77,1,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2160,7249,circle implies blue,True,8,2,1,17,6,0.7860631767024415,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg77,2,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2161,7250,circle implies blue,True,9,2,0,8,15,0.692753169030766,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg77,2,False,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2162,7251,circle implies blue,True,10,3,1,19,4,0.7649707388525256,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg77,3,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2163,7252,circle implies blue,True,11,4,1,19,3,0.9188187916992092,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg77,4,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2164,7253,circle implies blue,True,12,4,1,18,4,0.8455855974647192,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg77,4,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2165,7254,circle implies blue,True,13,4,1,18,4,0.8720389495621247,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg77,4,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2166,7255,circle implies blue,True,14,5,0,7,15,0.5637994159532127,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg77,5,False,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2167,7256,circle implies blue,True,15,5,1,21,1,0.9052505049990032,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg77,5,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2168,7257,circle implies blue,True,16,5,1,22,0,0.9752459877948922,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg77,5,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2169,7258,circle implies blue,True,17,6,1,20,2,0.9301708247674014,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg77,6,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2170,7259,circle implies blue,True,18,6,1,21,1,0.931037724781845,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg77,6,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2171,7260,circle implies blue,True,19,6,1,22,0,0.964292093912718,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg77,6,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2172,7261,circle implies blue,True,20,7,1,21,1,0.917766186368908,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg77,7,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2173,7262,circle implies blue,True,21,7,1,21,1,0.9601184038830296,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg77,7,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2174,7263,circle implies blue,True,22,8,1,22,0,0.9652893400966605,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg77,8,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2175,7264,circle implies blue,True,23,8,1,21,1,0.9691719154220664,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg77,8,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2176,7265,circle implies blue,True,24,8,0,3,19,0.4797060284661256,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg77,8,False,False,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,False
2177,7266,circle implies blue,True,25,8,1,22,0,0.956080377669764,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg77,8,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2178,7267,circle implies blue,True,26,8,1,21,1,0.9751601658065284,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg77,8,True,True,True,0.9469696969696968,0.6667327911128744,0.7887323943661971,0.7887323943661971,True
2179,7268,circle implies blue,True,27,9,0,1,21,0.1910996198171233,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg77,9,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2180,7269,circle implies blue,True,28,9,1,21,1,0.9882277471323276,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green triangle,hg77,9,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2181,7270,circle implies blue,True,29,10,1,3,19,0.5755020914828037,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg77,10,True,True,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,False
2182,7271,circle implies blue,True,30,10,1,21,1,0.9349833758291196,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg77,10,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2183,7272,circle implies blue,True,31,10,1,21,1,0.920572331888934,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg77,10,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2184,7273,circle implies blue,True,32,10,1,21,1,0.982375302437731,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg77,10,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2185,7274,circle implies blue,True,33,11,1,22,0,0.9642488369936472,"""λx.apply7(not,apply1(compose11(compose8(and,large),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small yellow rectangle,hg77,11,True,True,True,0.9469696969696968,0.6667327911128744,0.704225352112676,0.704225352112676,True
2186,7275,circle implies blue,True,34,11,0,3,19,0.5913586029105317,"""λx.apply7(not,apply1(compose11(compose8(and,large),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green circle,hg77,11,False,True,False,0.9469696969696968,0.6667327911128744,0.704225352112676,0.704225352112676,False
2187,7276,circle implies blue,True,35,11,1,22,0,0.9805116049765275,"""λx.apply7(not,apply1(compose11(compose8(and,large),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small blue rectangle,hg77,11,True,True,False,0.9469696969696968,0.6667327911128744,0.704225352112676,0.704225352112676,False
2188,7277,circle implies blue,True,36,12,1,22,0,0.9830333169401227,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green triangle,hg77,12,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2189,7278,circle implies blue,True,37,12,1,22,0,0.9912290966130968,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg77,12,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2190,7279,circle implies blue,True,38,12,0,2,20,0.2911217438756921,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg77,12,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2191,7280,circle implies blue,True,39,13,1,20,2,0.982307551731992,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg77,13,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2192,7281,circle implies blue,True,40,13,1,21,1,0.9918961416226466,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg77,13,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2193,7282,circle implies blue,True,41,13,0,3,19,0.1158919694587439,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg77,13,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2194,7283,circle implies blue,True,42,14,1,19,3,0.9957818213290464,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green triangle,hg77,14,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2195,7284,circle implies blue,True,43,14,1,21,1,0.996035738265732,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg77,14,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2196,7285,circle implies blue,True,44,14,0,3,19,0.2297050588157389,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg77,14,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2197,7286,circle implies blue,True,45,14,1,16,6,0.6336267886346149,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg77,14,True,True,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,False
2198,7287,circle implies blue,True,46,14,1,17,5,0.6415301075295474,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg77,14,True,True,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,False
2199,7288,circle implies blue,True,47,15,1,22,0,0.9873194633437378,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium blue rectangle,hg77,15,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2200,7289,circle implies blue,True,48,15,0,2,20,0.0646968421252722,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large yellow circle,hg77,15,False,False,False,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2201,7290,circle implies blue,True,49,15,0,2,20,0.1407486129058952,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small green circle,hg77,15,False,False,False,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2202,7291,circle implies blue,True,50,16,1,22,0,0.9892364777625744,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow rectangle,hg77,16,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2203,7292,circle implies blue,True,51,17,0,1,21,0.1273798577652769,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow circle,hg77,17,False,False,False,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2204,7293,circle implies blue,True,52,17,1,22,0,0.996723954790582,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small green rectangle,hg77,17,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2205,7294,circle implies blue,True,53,18,1,20,2,0.975946366309472,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg77,18,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2206,7295,circle implies blue,True,54,18,1,20,2,0.9813253556702648,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg77,18,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2207,7296,circle implies blue,True,55,18,1,20,2,0.9877795916646618,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg77,18,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2208,7297,circle implies blue,True,56,18,0,3,19,0.1147963600117236,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green circle,hg77,18,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2209,7298,circle implies blue,True,57,19,1,22,0,0.9904066879224728,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg77,19,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2210,7299,circle implies blue,True,58,20,1,22,0,0.9959136409042912,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg77,20,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2211,7300,circle implies blue,True,59,20,1,22,0,0.9746397615492696,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow triangle,hg77,20,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2212,7301,circle implies blue,True,60,21,1,19,3,0.6568241067244571,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue circle,hg77,21,True,True,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,False
2213,7302,circle implies blue,True,61,21,0,2,20,0.1244028289811467,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg77,21,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2214,7303,circle implies blue,True,62,22,0,1,21,0.057544220960267,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",medium yellow circle,hg77,22,False,False,False,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2215,7304,circle implies blue,True,63,23,1,22,0,0.993666273907138,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small green rectangle,hg77,23,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2216,7305,circle implies blue,True,64,23,1,21,1,0.9751749261245096,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",small yellow rectangle,hg77,23,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2217,7306,circle implies blue,True,65,23,1,22,0,0.979295267795578,"""λx.apply1(compose11(compose8(or,compose2(not,circle)),blue),x.o)""
",(not circle) or blue,"def is_rule(obj):
    return (not obj.circle) or obj.blue",large green triangle,hg77,23,True,True,True,0.9469696969696968,0.6667327911128744,1.0,1.0,True
2218,7307,circle implies blue,True,66,24,1,22,0,0.9905591702887476,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg77,24,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2219,7308,circle implies blue,True,67,24,1,18,4,0.7928806059601357,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg77,24,True,True,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,False
2220,7309,circle implies blue,True,68,24,0,1,21,0.1134694599062413,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg77,24,False,False,False,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2221,7310,circle implies blue,True,69,24,1,22,0,0.9908040769319086,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg77,24,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2222,7311,circle implies blue,True,70,24,1,22,0,0.9949201723759415,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg77,24,True,True,True,0.9469696969696968,0.6667327911128744,0.9295774647887324,0.9295774647887324,True
2223,7312,blue or green,True,0,0,1,13,13,0.4300856409838615,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg08,0,True,False,True,0.9305263157894736,0.6021767686245074,0.726027397260274,0.726027397260274,False
2224,7313,blue or green,True,1,0,0,5,21,0.4124367844650578,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow rectangle,hg08,0,False,False,True,0.9305263157894736,0.6021767686245074,0.726027397260274,0.726027397260274,False
2225,7314,blue or green,True,2,1,1,10,16,0.4695590080960982,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",small green circle,hg08,1,True,False,True,0.9305263157894736,0.6021767686245074,0.684931506849315,0.684931506849315,False
2226,7315,blue or green,True,3,1,1,10,16,0.54712185806477,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",large blue triangle,hg08,1,True,True,False,0.9305263157894736,0.6021767686245074,0.684931506849315,0.684931506849315,False
2227,7316,blue or green,True,4,1,1,22,4,0.6893165871473456,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",medium green triangle,hg08,1,True,True,True,0.9305263157894736,0.6021767686245074,0.684931506849315,0.684931506849315,True
2228,7317,blue or green,True,5,1,1,2,24,0.3713970000103472,"""λx.apply1(green,x.o)""
",green,"def is_rule(obj):
    return obj.green",small blue rectangle,hg08,1,True,False,False,0.9305263157894736,0.6021767686245074,0.684931506849315,0.684931506849315,True
2229,7318,blue or green,True,6,2,0,8,18,0.6609247997074589,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg08,2,False,True,True,0.9305263157894736,0.6021767686245074,0.726027397260274,0.726027397260274,True
2230,7319,blue or green,True,7,2,1,20,6,0.8146074869032418,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg08,2,True,True,True,0.9305263157894736,0.6021767686245074,0.726027397260274,0.726027397260274,True
2231,7320,blue or green,True,8,3,1,18,8,0.6714166761405522,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg08,3,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2232,7321,blue or green,True,9,4,0,2,24,0.4325894908995451,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large yellow triangle,hg08,4,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2233,7322,blue or green,True,10,4,1,24,2,0.8607568388958952,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue rectangle,hg08,4,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2234,7323,blue or green,True,11,4,0,3,23,0.5202322569518855,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large yellow circle,hg08,4,False,True,False,0.9305263157894736,0.6021767686245074,1.0,1.0,False
2235,7324,blue or green,True,12,4,1,23,3,0.8767138148947424,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg08,4,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2236,7325,blue or green,True,13,5,1,21,5,0.8296447042414457,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg08,5,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2237,7326,blue or green,True,14,5,1,19,7,0.8075657830006548,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg08,5,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2238,7327,blue or green,True,15,5,1,18,8,0.777099083953999,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg08,5,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2239,7328,blue or green,True,16,5,1,22,4,0.857415887113234,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg08,5,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2240,7329,blue or green,True,17,6,1,26,0,0.9352814513712246,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg08,6,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2241,7330,blue or green,True,18,6,1,20,6,0.8553645348162034,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg08,6,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2242,7331,blue or green,True,19,6,1,20,6,0.8372908559558709,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg08,6,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2243,7332,blue or green,True,20,6,0,2,24,0.290018786304472,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,6,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2244,7333,blue or green,True,21,6,0,4,22,0.2629201222711117,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow circle,hg08,6,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2245,7334,blue or green,True,22,7,1,25,1,0.9618403221932113,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg08,7,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2246,7335,blue or green,True,23,7,0,3,23,0.0578745084706042,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,7,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2247,7336,blue or green,True,24,7,1,26,0,0.9679191754072461,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg08,7,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2248,7337,blue or green,True,25,7,1,23,3,0.9547809432785924,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green circle,hg08,7,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2249,7338,blue or green,True,26,8,1,26,0,0.9952570314766263,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg08,8,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2250,7339,blue or green,True,27,8,1,25,1,0.9763340704356552,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg08,8,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2251,7340,blue or green,True,28,8,1,25,1,0.9755593673783096,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green triangle,hg08,8,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2252,7341,blue or green,True,29,9,0,5,21,0.2622761518405241,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg08,9,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2253,7342,blue or green,True,30,9,0,6,20,0.0916526681190816,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,9,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2254,7343,blue or green,True,31,9,1,26,0,0.9272148093448322,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue circle,hg08,9,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2255,7344,blue or green,True,32,10,1,24,1,0.9655100581596798,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg08,10,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2256,7345,blue or green,True,33,10,0,3,22,0.0879952945692821,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg08,10,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2257,7346,blue or green,True,34,10,1,24,1,0.9791500894278896,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg08,10,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2258,7347,blue or green,True,35,10,1,19,6,0.9649256986604086,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg08,10,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2259,7348,blue or green,True,36,11,1,25,0,0.9813968708377842,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg08,11,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2260,7349,blue or green,True,37,12,1,24,1,0.9871031427129536,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg08,12,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2261,7350,blue or green,True,38,12,1,24,1,0.9829714428573196,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg08,12,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2262,7351,blue or green,True,39,12,0,2,23,0.0785994798019373,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,12,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2263,7352,blue or green,True,40,13,1,24,1,0.9912861688395652,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg08,13,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2264,7353,blue or green,True,41,14,0,2,23,0.1477100185852577,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow triangle,hg08,14,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2265,7354,blue or green,True,42,14,1,24,1,0.9821682120575588,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg08,14,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2266,7355,blue or green,True,43,15,1,22,3,0.9658391670171796,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg08,15,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2267,7356,blue or green,True,44,15,0,1,24,0.085962921303917,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg08,15,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2268,7357,blue or green,True,45,15,1,24,1,0.9921313356876452,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg08,15,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2269,7358,blue or green,True,46,16,1,21,4,0.9646444519156602,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg08,16,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2270,7359,blue or green,True,47,17,0,2,23,0.0976330778980809,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,17,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2271,7360,blue or green,True,48,17,1,21,4,0.9833611115680014,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg08,17,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2272,7361,blue or green,True,49,17,1,21,4,0.9791325540394382,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green circle,hg08,17,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2273,7362,blue or green,True,50,17,1,23,2,0.9937728819684252,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue rectangle,hg08,17,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2274,7363,blue or green,True,51,18,1,24,1,0.9949083517103644,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg08,18,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2275,7364,blue or green,True,52,18,1,24,1,0.9890678478410564,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green rectangle,hg08,18,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2276,7365,blue or green,True,53,18,1,22,3,0.9888213674580584,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green rectangle,hg08,18,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2277,7366,blue or green,True,54,18,1,24,1,0.9943448588619505,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg08,18,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2278,7367,blue or green,True,55,18,1,23,2,0.9930390198775284,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg08,18,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2279,7368,blue or green,True,56,19,1,23,2,0.996323864040164,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue rectangle,hg08,19,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2280,7369,blue or green,True,57,20,1,23,2,0.9921632697927408,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg08,20,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2281,7370,blue or green,True,58,20,1,22,3,0.9917937333315194,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small blue triangle,hg08,20,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2282,7371,blue or green,True,59,20,0,1,24,0.1156538532293325,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow rectangle,hg08,20,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2283,7372,blue or green,True,60,20,0,2,23,0.186375069323617,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow triangle,hg08,20,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2284,7373,blue or green,True,61,20,1,22,3,0.9931100976634752,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue triangle,hg08,20,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2285,7374,blue or green,True,62,21,1,24,1,0.9975528995330478,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green circle,hg08,21,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2286,7375,blue or green,True,63,21,1,24,1,0.9987982071112356,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue rectangle,hg08,21,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2287,7376,blue or green,True,64,21,1,24,1,0.9931700293246876,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green rectangle,hg08,21,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2288,7377,blue or green,True,65,22,1,25,0,0.9933679407904492,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green triangle,hg08,22,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2289,7378,blue or green,True,66,22,1,25,0,0.9944965148358732,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue triangle,hg08,22,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2290,7379,blue or green,True,67,23,0,2,23,0.108657414608956,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large yellow rectangle,hg08,23,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2291,7380,blue or green,True,68,23,1,23,2,0.9983010773083832,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green triangle,hg08,23,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2292,7381,blue or green,True,69,23,0,1,24,0.0521593995741795,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg08,23,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2293,7382,blue or green,True,70,23,1,24,1,0.9953833410040716,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green rectangle,hg08,23,True,True,True,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2294,7383,blue or green,True,71,23,0,3,22,0.0450970796645151,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small yellow rectangle,hg08,23,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2295,7384,blue or green,True,72,24,0,2,23,0.0952458448580273,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow triangle,hg08,24,False,False,False,0.9305263157894736,0.6021767686245074,1.0,1.0,True
2296,7614,(not blue) implies circle,True,0,0,0,9,12,0.4366650779553538,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg79,0,False,False,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,False
2297,7615,(not blue) implies circle,True,1,0,0,5,16,0.4431679676598605,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg79,0,False,False,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,False
2298,7616,(not blue) implies circle,True,2,0,1,3,18,0.5279044787197334,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg79,0,True,True,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,True
2299,7617,(not blue) implies circle,True,3,0,0,7,14,0.4075772231631162,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg79,0,False,False,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,False
2300,7618,(not blue) implies circle,True,4,1,0,3,18,0.1151509639493042,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large yellow triangle,hg79,1,False,False,False,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,True
2301,7619,(not blue) implies circle,True,5,2,0,2,19,0.1038768434505072,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg79,2,False,False,False,0.9627329192546584,0.512654958677686,0.42045454545454547,0.42045454545454547,True
2302,7620,(not blue) implies circle,True,6,3,0,1,20,0.2480719198335918,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg79,3,False,False,False,0.9627329192546584,0.512654958677686,0.42045454545454547,0.42045454545454547,True
2303,7621,(not blue) implies circle,True,7,3,1,6,15,0.3677253278466423,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg79,3,True,False,False,0.9627329192546584,0.512654958677686,0.42045454545454547,0.42045454545454547,True
2304,7622,(not blue) implies circle,True,8,3,1,17,4,0.6176362831699861,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg79,3,True,True,False,0.9627329192546584,0.512654958677686,0.42045454545454547,0.42045454545454547,False
2305,7623,(not blue) implies circle,True,9,4,1,17,4,0.7109088237958758,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue triangle,hg79,4,True,True,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,True
2306,7624,(not blue) implies circle,True,10,4,1,18,3,0.7830959036012927,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue circle,hg79,4,True,True,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,True
2307,7625,(not blue) implies circle,True,11,4,1,20,1,0.8765778098243117,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue circle,hg79,4,True,True,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,True
2308,7626,(not blue) implies circle,True,12,4,0,1,20,0.0899358076742373,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow triangle,hg79,4,False,False,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,False
2309,7627,(not blue) implies circle,True,13,4,1,1,20,0.3653113123352795,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green circle,hg79,4,True,False,True,0.9627329192546584,0.512654958677686,0.5795454545454546,0.5795454545454546,False
2310,7628,(not blue) implies circle,True,14,5,1,12,9,0.7105399211832263,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green circle,hg79,5,True,True,True,0.9627329192546584,0.512654958677686,0.7272727272727273,0.7272727272727273,True
2311,7629,(not blue) implies circle,True,15,5,1,16,5,0.7304695291786629,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green circle,hg79,5,True,True,True,0.9627329192546584,0.512654958677686,0.7272727272727273,0.7272727272727273,True
2312,7630,(not blue) implies circle,True,16,6,0,5,16,0.3395645830598823,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg79,6,False,False,True,0.9627329192546584,0.512654958677686,0.7272727272727273,0.7272727272727273,False
2313,7631,(not blue) implies circle,True,17,6,1,20,1,0.9317502990420508,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",small green circle,hg79,6,True,True,True,0.9627329192546584,0.512654958677686,0.7272727272727273,0.7272727272727273,True
2314,7632,(not blue) implies circle,True,18,6,1,18,3,0.9552932953616846,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large blue circle,hg79,6,True,True,True,0.9627329192546584,0.512654958677686,0.7272727272727273,0.7272727272727273,True
2315,7633,(not blue) implies circle,True,19,7,1,21,0,0.9569047641448378,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",large green circle,hg79,7,True,True,True,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,True
2316,7634,(not blue) implies circle,True,20,7,0,2,19,0.1193078817756259,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small yellow triangle,hg79,7,False,False,False,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,True
2317,7635,(not blue) implies circle,True,21,7,1,19,2,0.6957531923200122,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small blue triangle,hg79,7,True,True,False,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,False
2318,7636,(not blue) implies circle,True,22,7,1,21,0,0.9607679111084052,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium green circle,hg79,7,True,True,True,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,True
2319,7637,(not blue) implies circle,True,23,7,1,10,11,0.8246813259083864,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow circle,hg79,7,True,True,True,0.9627329192546584,0.512654958677686,0.7727272727272727,0.7727272727272727,True
2320,7638,(not blue) implies circle,True,24,8,1,15,6,0.7028146341725687,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue rectangle,hg79,8,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2321,7639,(not blue) implies circle,True,25,8,0,4,17,0.169645613387388,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg79,8,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2322,7640,(not blue) implies circle,True,26,8,1,18,3,0.8639180621860305,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,8,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2323,7641,(not blue) implies circle,True,27,9,1,20,1,0.9306597586220277,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue rectangle,hg79,9,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2324,7642,(not blue) implies circle,True,28,9,1,20,1,0.9733526716889856,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,9,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2325,7643,(not blue) implies circle,True,29,9,1,18,3,0.9578968517046178,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green circle,hg79,9,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2326,7644,(not blue) implies circle,True,30,9,0,2,19,0.1466180889907491,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green rectangle,hg79,9,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2327,7645,(not blue) implies circle,True,31,9,0,2,19,0.1202608787097005,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow rectangle,hg79,9,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2328,7646,(not blue) implies circle,True,32,10,1,20,1,0.9897396294070404,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg79,10,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2329,7647,(not blue) implies circle,True,33,10,0,4,17,0.0929146568124679,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg79,10,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2330,7648,(not blue) implies circle,True,34,10,0,2,19,0.038359714979947,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow rectangle,hg79,10,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2331,7649,(not blue) implies circle,True,35,10,0,3,18,0.0366830773901938,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow triangle,hg79,10,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2332,7650,(not blue) implies circle,True,36,10,1,20,1,0.9853717124069588,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue triangle,hg79,10,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2333,7651,(not blue) implies circle,True,37,11,1,16,5,0.9339685919576368,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow circle,hg79,11,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2334,7652,(not blue) implies circle,True,38,11,0,2,19,0.0075830371629308,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg79,11,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2335,7653,(not blue) implies circle,True,39,12,1,21,0,0.984894540348364,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green circle,hg79,12,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2336,7654,(not blue) implies circle,True,40,13,1,21,0,0.9165097796592364,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,13,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2337,7655,(not blue) implies circle,True,41,13,0,0,21,0.0171465556899192,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow triangle,hg79,13,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2338,7656,(not blue) implies circle,True,42,14,0,0,21,0.0284949620954648,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg79,14,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2339,7657,(not blue) implies circle,True,43,14,0,2,19,0.0799445580947804,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg79,14,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2340,7658,(not blue) implies circle,True,44,14,0,0,21,0.0082852327172986,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow triangle,hg79,14,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2341,7659,(not blue) implies circle,True,45,14,1,20,1,0.9749488867369108,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue circle,hg79,14,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2342,7660,(not blue) implies circle,True,46,14,1,20,1,0.9571602409944262,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue triangle,hg79,14,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2343,7661,(not blue) implies circle,True,47,15,1,20,1,0.98486247660162,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,15,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2344,7662,(not blue) implies circle,True,48,15,1,18,3,0.9236139153974818,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow circle,hg79,15,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2345,7663,(not blue) implies circle,True,49,15,1,19,2,0.950743162197,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg79,15,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2346,7664,(not blue) implies circle,True,50,15,0,0,21,0.009233438091428,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg79,15,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2347,7665,(not blue) implies circle,True,51,15,1,21,0,0.9894014040783076,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,15,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2348,7666,(not blue) implies circle,True,52,16,1,17,4,0.9912027291824188,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small blue triangle,hg79,16,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2349,7667,(not blue) implies circle,True,53,16,0,1,20,0.0162684491481286,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green rectangle,hg79,16,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2350,7668,(not blue) implies circle,True,54,16,1,20,1,0.9951292097073292,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg79,16,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2351,7669,(not blue) implies circle,True,55,16,0,2,19,0.029112633624436,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg79,16,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2352,7670,(not blue) implies circle,True,56,17,0,1,20,0.0037683898281102,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green rectangle,hg79,17,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2353,7671,(not blue) implies circle,True,57,17,1,20,1,0.99483925135371,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg79,17,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2354,7672,(not blue) implies circle,True,58,17,1,20,1,0.987755921988537,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small yellow circle,hg79,17,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2355,7673,(not blue) implies circle,True,59,18,1,20,1,0.8682469885503677,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue rectangle,hg79,18,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2356,7674,(not blue) implies circle,True,60,18,0,2,19,0.0132499116662074,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green triangle,hg79,18,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2357,7675,(not blue) implies circle,True,61,18,1,19,2,0.8662805626187264,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue rectangle,hg79,18,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2358,7676,(not blue) implies circle,True,62,18,1,20,1,0.9774706820356868,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,18,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2359,7677,(not blue) implies circle,True,63,18,1,20,1,0.9945119756195026,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,18,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2360,7678,(not blue) implies circle,True,64,19,0,1,20,0.0044297908502812,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg79,19,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2361,7679,(not blue) implies circle,True,65,19,1,21,0,0.999059398836266,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,19,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2362,7680,(not blue) implies circle,True,66,19,0,1,20,0.0065268036371435,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green rectangle,hg79,19,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2363,7681,(not blue) implies circle,True,67,19,0,4,17,0.0066237175493597,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg79,19,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2364,7682,(not blue) implies circle,True,68,19,1,19,2,0.9842420892692872,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow circle,hg79,19,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2365,7683,(not blue) implies circle,True,69,20,0,0,21,0.0011441109575116,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow triangle,hg79,20,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2366,7684,(not blue) implies circle,True,70,20,0,0,21,0.0393720510255661,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large yellow triangle,hg79,20,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2367,7685,(not blue) implies circle,True,71,20,1,21,0,0.9956621241395852,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green circle,hg79,20,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2368,7686,(not blue) implies circle,True,72,20,1,21,0,0.982628770035376,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,20,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2369,7687,(not blue) implies circle,True,73,21,0,1,20,0.0038507165129431,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg79,21,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2370,7688,(not blue) implies circle,True,74,21,1,21,0,0.9981701030139902,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue triangle,hg79,21,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2371,7689,(not blue) implies circle,True,75,21,1,21,0,0.9937019904183444,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,21,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2372,7690,(not blue) implies circle,True,76,21,1,21,0,0.957932169877722,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue rectangle,hg79,21,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2373,7691,(not blue) implies circle,True,77,21,1,20,1,0.9962093036247096,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green circle,hg79,21,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2374,7692,(not blue) implies circle,True,78,22,0,3,18,0.0195173469280689,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green triangle,hg79,22,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2375,7693,(not blue) implies circle,True,79,23,0,0,21,0.000775162277705,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow triangle,hg79,23,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2376,7694,(not blue) implies circle,True,80,23,1,20,1,0.9914423973264092,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large blue circle,hg79,23,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2377,7695,(not blue) implies circle,True,81,23,0,1,20,0.0009934220840932,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",small green triangle,hg79,23,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2378,7696,(not blue) implies circle,True,82,23,0,0,21,0.0091828315814836,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg79,23,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2379,7697,(not blue) implies circle,True,83,24,1,19,2,0.9816345828302246,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow circle,hg79,24,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2380,7698,(not blue) implies circle,True,84,24,0,2,19,0.0033962146184194,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium green rectangle,hg79,24,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2381,7699,(not blue) implies circle,True,85,24,1,21,0,0.9894667557691718,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",large green circle,hg79,24,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2382,7700,(not blue) implies circle,True,86,24,1,21,0,0.9962178572354788,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium blue triangle,hg79,24,True,True,True,0.9627329192546584,0.512654958677686,1.0,1.0,True
2383,7701,(not blue) implies circle,True,87,24,0,0,21,0.0031612830179028,"""λx.apply1(compose11(compose8(or,circle),blue),x.o)""
",circle or blue,"def is_rule(obj):
    return obj.circle or obj.blue",medium yellow rectangle,hg79,24,False,False,False,0.9627329192546584,0.512654958677686,1.0,1.0,True
2384,7854,blue,True,0,0,0,8,19,0.4063607408644429,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg03,0,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2385,7855,blue,True,1,0,0,8,19,0.4692929487495121,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg03,0,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2386,7856,blue,True,2,0,0,13,14,0.48735951518222,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg03,0,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2387,7857,blue,True,3,0,1,9,18,0.4832570440596555,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg03,0,True,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2388,7858,blue,True,4,0,1,12,15,0.4590296975662795,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue triangle,hg03,0,True,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2389,7859,blue,True,5,1,1,24,3,0.7634941259880179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue triangle,hg03,1,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2390,7860,blue,True,6,2,0,2,24,0.2646626771301043,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small yellow triangle,hg03,2,False,False,True,0.9695798319327732,0.5761451516954194,0.7073170731707317,0.7073170731707317,False
2391,7861,blue,True,7,2,0,3,23,0.326143330517425,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green rectangle,hg03,2,False,False,False,0.9695798319327732,0.5761451516954194,0.7073170731707317,0.7073170731707317,True
2392,7862,blue,True,8,2,1,9,17,0.6725957395407249,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium blue circle,hg03,2,True,True,True,0.9695798319327732,0.5761451516954194,0.7073170731707317,0.7073170731707317,True
2393,7863,blue,True,9,2,1,24,2,0.802225799199391,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium blue triangle,hg03,2,True,True,True,0.9695798319327732,0.5761451516954194,0.7073170731707317,0.7073170731707317,True
2394,7864,blue,True,10,3,0,4,22,0.1094879779158191,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green triangle,hg03,3,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2395,7865,blue,True,11,4,0,1,25,0.1826513582487905,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow rectangle,hg03,4,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2396,7866,blue,True,12,4,1,20,6,0.7877394860216782,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue rectangle,hg03,4,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2397,7867,blue,True,13,4,0,4,22,0.1264802334824253,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green triangle,hg03,4,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2398,7868,blue,True,14,4,0,3,23,0.1594489856613563,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green circle,hg03,4,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2399,7869,blue,True,15,5,0,1,24,0.0684406588139836,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow circle,hg03,5,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2400,7870,blue,True,16,5,0,1,24,0.2782318421288891,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow rectangle,hg03,5,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2401,7871,blue,True,17,5,1,24,1,0.8470417930509483,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue circle,hg03,5,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2402,7872,blue,True,18,5,0,0,25,0.0126734178886636,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green triangle,hg03,5,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2403,7873,blue,True,19,6,1,24,1,0.9256035487107964,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue triangle,hg03,6,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2404,7874,blue,True,20,6,0,1,24,0.0885585307371457,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green rectangle,hg03,6,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2405,7875,blue,True,21,6,0,1,24,0.026510634502415,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,6,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2406,7876,blue,True,22,7,0,1,24,0.0246632111405915,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow triangle,hg03,7,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2407,7877,blue,True,23,7,0,1,24,0.0147877706949657,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green triangle,hg03,7,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2408,7878,blue,True,24,7,0,0,25,0.0231854963864179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow circle,hg03,7,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2409,7879,blue,True,25,7,0,1,24,0.0145638928752305,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,7,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2410,7880,blue,True,26,8,0,1,24,0.028337303262333,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green rectangle,hg03,8,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2411,7881,blue,True,27,9,1,24,1,0.8723908842337095,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue triangle,hg03,9,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2412,7882,blue,True,28,9,0,0,25,0.0799211221927862,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green triangle,hg03,9,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2413,7883,blue,True,29,9,0,1,24,0.0920763219638729,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green circle,hg03,9,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2414,7884,blue,True,30,9,0,1,24,0.0143144734614679,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green rectangle,hg03,9,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2415,7885,blue,True,31,10,0,0,25,0.0165428278719446,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow rectangle,hg03,10,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2416,7886,blue,True,32,11,1,24,1,0.8652202091409436,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue circle,hg03,11,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2417,7887,blue,True,33,11,0,0,25,0.0222124837673618,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow circle,hg03,11,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2418,7888,blue,True,34,11,0,1,24,0.0282736706105879,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green triangle,hg03,11,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2419,7889,blue,True,35,11,0,0,25,0.016040759905195,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,11,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2420,7890,blue,True,36,11,1,24,1,0.8155251780794969,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue triangle,hg03,11,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2421,7891,blue,True,37,12,1,25,0,0.9530720193365596,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue triangle,hg03,12,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2422,7892,blue,True,38,12,0,0,25,0.0084535553522755,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow rectangle,hg03,12,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2423,7893,blue,True,39,12,1,25,0,0.9071544841684726,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue rectangle,hg03,12,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2424,7894,blue,True,40,12,1,25,0,0.921869114035644,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue rectangle,hg03,12,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2425,7895,blue,True,41,12,0,0,25,0.0036352173431168,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow circle,hg03,12,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2426,7896,blue,True,42,13,0,0,25,0.0110693456020953,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green rectangle,hg03,13,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2427,7897,blue,True,43,13,0,0,25,0.0056496081864452,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green circle,hg03,13,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2428,7898,blue,True,44,13,0,0,25,0.021346616942651,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow rectangle,hg03,13,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2429,7899,blue,True,45,13,1,25,0,0.982166143074437,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue circle,hg03,13,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2430,7900,blue,True,46,14,1,25,0,0.9684410472322043,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue rectangle,hg03,14,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2431,7901,blue,True,47,14,0,0,25,0.0055320604333246,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow triangle,hg03,14,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2432,7902,blue,True,48,14,0,0,25,0.0010945258849233,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,14,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2433,7903,blue,True,49,14,0,0,25,0.0028425095156308,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow rectangle,hg03,14,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2434,7904,blue,True,50,14,0,0,25,0.002014145404928,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green rectangle,hg03,14,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2435,7905,blue,True,51,15,1,24,1,0.9455298833358938,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue circle,hg03,15,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2436,7906,blue,True,52,15,0,0,25,0.0011862181571586,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow triangle,hg03,15,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2437,7907,blue,True,53,15,1,24,1,0.9838057262289794,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue circle,hg03,15,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2438,7908,blue,True,54,16,0,0,25,0.0009147199926928,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow rectangle,hg03,16,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2439,7909,blue,True,55,17,0,1,24,0.0037886686909587,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow circle,hg03,17,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2440,7910,blue,True,56,17,0,0,25,0.003567635427089,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,17,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2441,7911,blue,True,57,17,0,0,25,0.0292032138960394,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green triangle,hg03,17,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2442,7912,blue,True,58,18,0,1,24,0.003798321707336,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green rectangle,hg03,18,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2443,7913,blue,True,59,18,1,23,2,0.9807045555146487,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue circle,hg03,18,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2444,7914,blue,True,60,18,0,1,24,0.0007860734408495,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green circle,hg03,18,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2445,7915,blue,True,61,18,0,1,24,0.0234155746261421,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green circle,hg03,18,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2446,7916,blue,True,62,18,1,24,1,0.951336707962696,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue triangle,hg03,18,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2447,7917,blue,True,63,19,1,25,0,0.9783191916812938,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium blue rectangle,hg03,19,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2448,7918,blue,True,64,19,0,0,25,0.0025312443243592,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small yellow triangle,hg03,19,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2449,7919,blue,True,65,19,0,0,25,0.0050672172197891,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green triangle,hg03,19,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2450,7920,blue,True,66,19,0,0,25,0.0008375802932505,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow rectangle,hg03,19,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2451,7921,blue,True,67,19,1,24,1,0.9726131092919558,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue rectangle,hg03,19,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2452,7922,blue,True,68,20,0,0,25,0.0003707143988549,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green triangle,hg03,20,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2453,7923,blue,True,69,20,0,0,25,0.0001413757012187,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow triangle,hg03,20,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2454,7924,blue,True,70,20,1,24,1,0.9938482035003062,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue circle,hg03,20,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2455,7925,blue,True,71,21,0,0,24,0.007209919634306,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow rectangle,hg03,21,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2456,7926,blue,True,72,21,0,0,24,0.0001940095094141,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green triangle,hg03,21,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2457,7927,blue,True,73,21,0,0,24,0.009304144128464,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large green rectangle,hg03,21,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2458,7928,blue,True,74,22,0,0,24,0.000194661809246,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small green triangle,hg03,22,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2459,7929,blue,True,75,22,0,0,24,0.0001460381027982,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green triangle,hg03,22,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2460,7930,blue,True,76,22,1,23,1,0.9866609734318672,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large blue circle,hg03,22,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2461,7931,blue,True,77,22,1,23,1,0.985751038709168,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",small blue rectangle,hg03,22,True,True,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,True
2462,7932,blue,True,78,23,0,0,23,0.0018668387855313,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium green rectangle,hg03,23,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2463,7933,blue,True,79,24,0,0,23,0.0006707176786449,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",medium yellow rectangle,hg03,24,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2464,7934,blue,True,80,24,0,0,23,0.0049985056879222,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow triangle,hg03,24,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2465,7935,blue,True,81,24,0,0,23,0.0184212406776396,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",yellow (and not) green,"def is_rule(obj):
    return not (obj.yellow and obj.green)",large yellow circle,hg03,24,False,False,True,0.9695798319327732,0.5761451516954194,0.3048780487804878,0.3048780487804878,False
2466,8307,not circle,True,0,0,1,11,14,0.4363171605180014,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg05,0,True,False,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,False
2467,8308,not circle,True,1,0,1,12,13,0.4311868668211218,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg05,0,True,False,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,False
2468,8309,not circle,True,2,0,1,15,10,0.4276201958606407,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg05,0,True,False,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,False
2469,8310,not circle,True,3,0,1,7,18,0.4976947237192916,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg05,0,True,False,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,False
2470,8311,not circle,True,4,1,1,17,8,0.7405883332498888,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg05,1,True,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2471,8312,not circle,True,5,1,1,22,3,0.861551757186703,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg05,1,True,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2472,8313,not circle,True,6,1,1,22,3,0.8457973317252935,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg05,1,True,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2473,8314,not circle,True,7,2,0,12,13,0.6150031431791376,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg05,2,False,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2474,8315,not circle,True,8,2,1,25,0,0.8795272608790583,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg05,2,True,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2475,8316,not circle,True,9,2,0,11,14,0.7254604010043976,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg05,2,False,True,True,0.9619565217391304,0.5394520893826538,0.6404494382022472,0.6404494382022472,True
2476,8317,not circle,True,10,3,1,22,3,0.8235534738282694,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow triangle,hg05,3,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2477,8318,not circle,True,11,3,1,25,0,0.7784014661878018,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow triangle,hg05,3,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2478,8319,not circle,True,12,4,1,21,4,0.8426559446617147,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg05,4,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2479,8320,not circle,True,13,4,1,25,0,0.9329855028038307,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green triangle,hg05,4,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2480,8321,not circle,True,14,4,1,25,0,0.9509137785247505,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg05,4,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2481,8322,not circle,True,15,4,1,24,1,0.8102079220120685,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue rectangle,hg05,4,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2482,8323,not circle,True,16,4,0,1,24,0.4608334952536097,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue circle,hg05,4,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2483,8324,not circle,True,17,5,1,21,3,0.8865922218740251,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg05,5,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2484,8325,not circle,True,18,5,0,1,23,0.285678471876622,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg05,5,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2485,8326,not circle,True,19,5,0,2,22,0.5944077355234185,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,5,False,True,False,0.9619565217391304,0.5394520893826538,1.0,1.0,False
2486,8327,not circle,True,20,6,1,23,1,0.9440596171884862,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,6,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2487,8328,not circle,True,21,6,1,23,1,0.9721735892899231,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg05,6,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2488,8329,not circle,True,22,6,1,23,1,0.8990212615163954,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green rectangle,hg05,6,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2489,8330,not circle,True,23,6,1,22,2,0.914695105554756,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg05,6,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2490,8331,not circle,True,24,6,0,1,23,0.2468595018772248,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,6,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2491,8332,not circle,True,25,7,0,2,22,0.076080645036427,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg05,7,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2492,8333,not circle,True,26,7,1,24,0,0.984576358076424,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg05,7,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2493,8334,not circle,True,27,7,0,2,22,0.2921940338968624,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg05,7,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2494,8335,not circle,True,28,7,1,22,2,0.9835570624345564,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg05,7,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2495,8336,not circle,True,29,8,0,2,22,0.1434470753330288,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg05,8,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2496,8337,not circle,True,30,8,0,2,22,0.0371656310077241,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg05,8,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2497,8338,not circle,True,31,8,0,1,23,0.1158346507623946,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue circle,hg05,8,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2498,8339,not circle,True,32,8,1,23,1,0.9883179570954324,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,8,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2499,8340,not circle,True,33,9,0,2,22,0.0338051899486799,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow circle,hg05,9,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2500,8341,not circle,True,34,9,1,24,0,0.9892557151780464,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg05,9,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2501,8342,not circle,True,35,10,1,24,0,0.99072164336701,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,10,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2502,8343,not circle,True,36,10,0,1,23,0.0283358874877421,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow circle,hg05,10,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2503,8344,not circle,True,37,10,1,22,2,0.9658989504348484,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow rectangle,hg05,10,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2504,8345,not circle,True,38,10,1,23,1,0.9934632837474736,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg05,10,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2505,8346,not circle,True,39,10,1,22,2,0.9924094546204288,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green triangle,hg05,10,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2506,8347,not circle,True,40,11,1,22,2,0.9956641069489932,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg05,11,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2507,8348,not circle,True,41,11,1,23,1,0.9950736850350947,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue triangle,hg05,11,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2508,8349,not circle,True,42,11,0,0,24,0.0543355287707072,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue circle,hg05,11,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2509,8350,not circle,True,43,11,0,1,23,0.065528567921433,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,11,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2510,8351,not circle,True,44,12,1,24,0,0.9848725861083948,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,12,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2511,8352,not circle,True,45,12,1,23,1,0.9869439893388972,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green triangle,hg05,12,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2512,8353,not circle,True,46,13,0,2,22,0.0263787502417471,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg05,13,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2513,8354,not circle,True,47,13,1,23,1,0.9946038801226676,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue triangle,hg05,13,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2514,8355,not circle,True,48,13,0,0,24,0.0631036356352296,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg05,13,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2515,8356,not circle,True,49,13,0,0,24,0.0353767240832212,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow circle,hg05,13,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2516,8357,not circle,True,50,14,1,22,2,0.9895574593235777,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue rectangle,hg05,14,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2517,8358,not circle,True,51,14,0,0,24,0.0019104030285461,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg05,14,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2518,8359,not circle,True,52,14,0,1,23,0.0522672171188105,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,14,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2519,8360,not circle,True,53,14,1,24,0,0.9972340015167446,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small blue triangle,hg05,14,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2520,8361,not circle,True,54,15,0,0,24,0.0310140010483337,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg05,15,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2521,8362,not circle,True,55,15,0,0,24,0.0009340160021338,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg05,15,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2522,8363,not circle,True,56,15,0,0,24,0.0282029816288513,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue circle,hg05,15,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2523,8364,not circle,True,57,15,1,23,1,0.995916909855623,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,15,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2524,8365,not circle,True,58,15,0,1,23,0.0155708816654396,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow circle,hg05,15,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2525,8366,not circle,True,59,16,1,23,1,0.9980756553542278,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green triangle,hg05,16,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2526,8367,not circle,True,60,16,1,23,1,0.989900425806354,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,16,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2527,8368,not circle,True,61,16,1,22,2,0.9952811104417378,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small yellow rectangle,hg05,16,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2528,8369,not circle,True,62,16,0,0,24,0.0085549969203384,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green circle,hg05,16,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2529,8370,not circle,True,63,16,1,23,1,0.9952148368040524,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow triangle,hg05,16,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2530,8371,not circle,True,64,17,1,24,0,0.998438355674807,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,17,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2531,8372,not circle,True,65,17,1,24,0,0.9995425455948634,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg05,17,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2532,8373,not circle,True,66,17,0,1,23,0.0181190264978567,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,17,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2533,8374,not circle,True,67,17,1,24,0,0.9991225901347888,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green triangle,hg05,17,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2534,8375,not circle,True,68,17,1,24,0,0.999308687662733,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg05,17,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2535,8376,not circle,True,69,18,0,2,22,0.000920215999713,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green circle,hg05,18,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2536,8377,not circle,True,70,19,1,23,1,0.9966576786139284,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,19,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2537,8378,not circle,True,71,19,0,2,22,0.0149997570083542,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,19,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2538,8379,not circle,True,72,20,1,23,1,0.991291282733414,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow rectangle,hg05,20,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2539,8380,not circle,True,73,20,1,23,1,0.991324474891826,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow rectangle,hg05,20,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2540,8381,not circle,True,74,20,1,24,0,0.99087852669129,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,20,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2541,8382,not circle,True,75,20,1,23,1,0.991322503929723,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,20,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2542,8383,not circle,True,76,21,0,1,23,0.0039561804310324,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow circle,hg05,21,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2543,8384,not circle,True,77,21,1,23,1,0.9993623210826854,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green rectangle,hg05,21,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2544,8385,not circle,True,78,21,1,24,0,0.9995367539780772,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large green rectangle,hg05,21,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2545,8386,not circle,True,79,21,1,24,0,0.9991222487112736,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,21,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2546,8387,not circle,True,80,21,0,0,24,0.0184862773077156,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,21,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2547,8388,not circle,True,81,22,0,0,24,0.0552638010568671,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium blue circle,hg05,22,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2548,8389,not circle,True,82,22,1,23,1,0.9968754698192014,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large yellow triangle,hg05,22,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2549,8390,not circle,True,83,23,1,22,2,0.9986071719331449,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",large blue rectangle,hg05,23,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2550,8391,not circle,True,84,23,1,22,2,0.9994155852517678,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium green rectangle,hg05,23,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2551,8392,not circle,True,85,23,1,23,1,0.9986117383074316,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg05,23,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2552,8393,not circle,True,86,24,1,23,1,0.998766599411624,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green triangle,hg05,24,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2553,8394,not circle,True,87,24,1,24,0,0.9991351447179112,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",medium yellow triangle,hg05,24,True,True,True,0.9619565217391304,0.5394520893826538,1.0,1.0,True
2554,8395,not circle,True,88,24,0,2,22,0.019858471869611,"""λx.apply7(not,apply1(circle,x.o))""
",not circle,"def is_rule(obj):
    return not obj.circle",small green circle,hg05,24,False,False,False,0.9619565217391304,0.5394520893826538,1.0,1.0,True

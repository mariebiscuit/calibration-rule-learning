,concept,is_bool,item_num,set_num,answer,hyes,hno,p(yes),lambda_rule,rule_expression,manual_code,object,concept_num,set,data_answer,model_answer,to_annotate
314.0,blue and same shape as another object,False,0.0,1.0,0.0,13.0,12.0,0.4643228591688739,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg62,1.0,False,False,True
315.0,blue and same shape as another object,False,1.0,2.0,0.0,11.0,13.0,0.3661835874714825,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg62,2.0,False,False,True
316.0,blue and same shape as another object,False,2.0,2.0,0.0,8.0,16.0,0.2788668457171752,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg62,2.0,False,False,True
317.0,blue and same shape as another object,False,3.0,3.0,1.0,10.0,14.0,0.2564041234860497,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,3.0,True,False,True
318.0,blue and same shape as another object,False,4.0,3.0,0.0,8.0,16.0,0.1564576059702176,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg62,3.0,False,False,True
319.0,blue and same shape as another object,False,5.0,3.0,0.0,8.0,16.0,0.163783815421425,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,3.0,False,False,True
320.0,blue and same shape as another object,False,6.0,3.0,0.0,7.0,17.0,0.2745512139332504,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,3.0,False,False,True
321.0,blue and same shape as another object,False,7.0,3.0,0.0,9.0,15.0,0.3862535080074849,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,3.0,False,False,True
322.0,blue and same shape as another object,False,8.0,4.0,0.0,7.0,17.0,0.1808026601833035,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,4.0,False,False,True
323.0,blue and same shape as another object,False,9.0,4.0,0.0,8.0,16.0,0.4353082508287116,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg62,4.0,False,False,True
324.0,blue and same shape as another object,False,10.0,5.0,0.0,4.0,20.0,0.1489035624407506,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg62,5.0,False,False,True
325.0,blue and same shape as another object,False,11.0,5.0,0.0,4.0,20.0,0.2190658209166258,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg62,5.0,False,False,True
326.0,blue and same shape as another object,False,12.0,5.0,0.0,11.0,13.0,0.237070554275192,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg62,5.0,False,False,True
327.0,blue and same shape as another object,False,13.0,5.0,1.0,6.0,18.0,0.262013889188438,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,5.0,True,False,True
328.0,blue and same shape as another object,False,14.0,6.0,0.0,4.0,19.0,0.2009453599396238,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,6.0,False,False,True
329.0,blue and same shape as another object,False,15.0,6.0,0.0,6.0,17.0,0.2311841434423058,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,6.0,False,False,True
330.0,blue and same shape as another object,False,16.0,6.0,1.0,20.0,3.0,0.5226673650394105,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,6.0,True,True,True
331.0,blue and same shape as another object,False,17.0,6.0,0.0,5.0,18.0,0.0772829839606856,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,6.0,False,False,True
332.0,blue and same shape as another object,False,18.0,7.0,0.0,2.0,21.0,0.0239805694682218,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,7.0,False,False,True
333.0,blue and same shape as another object,False,19.0,7.0,0.0,3.0,20.0,0.0414397210381594,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,7.0,False,False,True
334.0,blue and same shape as another object,False,20.0,8.0,0.0,3.0,20.0,0.093227599415627,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg62,8.0,False,False,True
335.0,blue and same shape as another object,False,21.0,8.0,0.0,4.0,19.0,0.0595837503162783,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,8.0,False,False,True
336.0,blue and same shape as another object,False,22.0,8.0,0.0,2.0,21.0,0.0521086907154995,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,8.0,False,False,True
337.0,blue and same shape as another object,False,23.0,9.0,0.0,0.0,23.0,0.1288751780650727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg62,9.0,False,False,True
338.0,blue and same shape as another object,False,24.0,9.0,0.0,8.0,15.0,0.4385301453719421,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg62,9.0,False,False,True
339.0,blue and same shape as another object,False,25.0,9.0,1.0,12.0,11.0,0.3563367093685201,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg62,9.0,True,False,True
340.0,blue and same shape as another object,False,26.0,9.0,0.0,0.0,23.0,0.122211583025205,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,9.0,False,False,True
341.0,blue and same shape as another object,False,27.0,9.0,0.0,2.0,21.0,0.0137419039925816,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,9.0,False,False,True
342.0,blue and same shape as another object,False,28.0,10.0,0.0,0.0,22.0,0.0325177336833348,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,10.0,False,False,True
343.0,blue and same shape as another object,False,29.0,11.0,0.0,11.0,11.0,0.3658005283722332,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,11.0,False,False,True
344.0,blue and same shape as another object,False,30.0,11.0,0.0,2.0,20.0,0.11217468115683,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg62,11.0,False,False,True
345.0,blue and same shape as another object,False,31.0,11.0,0.0,16.0,6.0,0.4220435026741143,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,11.0,False,False,True
346.0,blue and same shape as another object,False,32.0,11.0,0.0,2.0,20.0,0.0997224784574655,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg62,11.0,False,False,True
347.0,blue and same shape as another object,False,33.0,12.0,0.0,4.0,18.0,0.0520056257580563,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,12.0,False,False,True
348.0,blue and same shape as another object,False,34.0,12.0,1.0,15.0,7.0,0.1844449262928265,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg62,12.0,True,False,True
349.0,blue and same shape as another object,False,35.0,12.0,0.0,3.0,19.0,0.208347566322459,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg62,12.0,False,False,True
350.0,blue and same shape as another object,False,36.0,12.0,0.0,1.0,21.0,0.0601166254662075,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,12.0,False,False,True
351.0,blue and same shape as another object,False,37.0,13.0,1.0,4.0,18.0,0.3514077177649142,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg62,13.0,True,False,True
352.0,blue and same shape as another object,False,38.0,13.0,0.0,1.0,21.0,0.0146522383538467,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,13.0,False,False,True
353.0,blue and same shape as another object,False,39.0,13.0,0.0,1.0,21.0,0.0227401078687989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg62,13.0,False,False,True
354.0,blue and same shape as another object,False,40.0,13.0,0.0,0.0,22.0,0.030200073084643,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,13.0,False,False,True
355.0,blue and same shape as another object,False,41.0,14.0,0.0,1.0,21.0,0.0087888338358652,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,14.0,False,False,True
356.0,blue and same shape as another object,False,42.0,14.0,1.0,18.0,4.0,0.3944630510900424,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg62,14.0,True,False,True
357.0,blue and same shape as another object,False,43.0,15.0,0.0,2.0,20.0,0.0335976128824313,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,15.0,False,False,True
358.0,blue and same shape as another object,False,44.0,15.0,1.0,17.0,5.0,0.7500312168357368,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg62,15.0,True,True,True
359.0,blue and same shape as another object,False,45.0,15.0,0.0,1.0,21.0,0.0346233830830442,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,15.0,False,False,True
360.0,blue and same shape as another object,False,46.0,16.0,0.0,2.0,20.0,0.0140695330585458,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow triangle,hg62,16.0,False,False,True
361.0,blue and same shape as another object,False,47.0,17.0,0.0,1.0,21.0,0.0409502770626204,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg62,17.0,False,False,True
362.0,blue and same shape as another object,False,48.0,17.0,0.0,1.0,21.0,0.0109251527360356,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,17.0,False,False,True
363.0,blue and same shape as another object,False,49.0,18.0,1.0,18.0,4.0,0.5685655835250145,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,18.0,True,True,True
364.0,blue and same shape as another object,False,50.0,18.0,1.0,9.0,13.0,0.4168364729224549,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg62,18.0,True,False,True
365.0,blue and same shape as another object,False,51.0,18.0,0.0,1.0,21.0,0.0225150475093869,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,18.0,False,False,True
366.0,blue and same shape as another object,False,52.0,18.0,0.0,0.0,22.0,0.0601612908773177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg62,18.0,False,False,True
367.0,blue and same shape as another object,False,53.0,18.0,0.0,1.0,21.0,0.020365523908481,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg62,18.0,False,False,True
368.0,blue and same shape as another object,False,54.0,19.0,1.0,18.0,4.0,0.9225306629572289,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg62,19.0,True,True,True
369.0,blue and same shape as another object,False,55.0,19.0,0.0,0.0,22.0,0.0015125207817163,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg62,19.0,False,False,True
370.0,blue and same shape as another object,False,56.0,19.0,0.0,1.0,21.0,0.00605726574247,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg62,19.0,False,False,True
371.0,blue and same shape as another object,False,57.0,19.0,0.0,1.0,21.0,0.0166600496373803,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg62,19.0,False,False,True
372.0,blue and same shape as another object,False,58.0,20.0,0.0,1.0,21.0,0.0004698926554738,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg62,20.0,False,False,True
373.0,blue and same shape as another object,False,59.0,20.0,0.0,1.0,21.0,0.0086014000462455,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg62,20.0,False,False,True
374.0,blue and same shape as another object,False,60.0,20.0,0.0,1.0,21.0,0.0018351094204263,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg62,20.0,False,False,True
375.0,blue and same shape as another object,False,61.0,20.0,0.0,2.0,20.0,0.0021331568838149,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg62,20.0,False,False,True
376.0,blue and same shape as another object,False,62.0,21.0,0.0,0.0,22.0,0.0032544379511136,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg62,21.0,False,False,True
377.0,blue and same shape as another object,False,63.0,21.0,0.0,0.0,22.0,0.0057775820773713,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg62,21.0,False,False,True
378.0,blue and same shape as another object,False,64.0,21.0,0.0,0.0,22.0,0.001692141340186,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg62,21.0,False,False,True
379.0,blue and same shape as another object,False,65.0,22.0,0.0,8.0,14.0,0.5732880770169686,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg62,22.0,False,True,True
380.0,blue and same shape as another object,False,66.0,23.0,0.0,11.0,11.0,0.33908085428709,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,23.0,False,False,True
381.0,blue and same shape as another object,False,67.0,23.0,0.0,2.0,20.0,0.0110341019764064,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg62,23.0,False,False,True
382.0,blue and same shape as another object,False,68.0,24.0,0.0,1.0,21.0,0.0138607064704956,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,24.0,False,False,True
383.0,blue and same shape as another object,False,69.0,24.0,0.0,1.0,21.0,0.0095515705744446,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,24.0,False,False,True
384.0,blue and same shape as another object,False,70.0,24.0,0.0,2.0,20.0,0.0467102516500972,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg62,24.0,False,False,True
385.0,blue and same shape as another object,False,71.0,24.0,1.0,19.0,3.0,0.6534449605237569,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,24.0,True,True,True
386.0,blue and same shape as another object,False,72.0,25.0,0.0,2.0,20.0,0.0056105704450146,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large green circle,hg62,25.0,False,False,True
387.0,blue and same shape as another object,False,73.0,25.0,0.0,0.0,22.0,0.0097734078618714,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green rectangle,hg62,25.0,False,False,True
388.0,blue and same shape as another object,False,74.0,25.0,0.0,16.0,6.0,0.8759064844567774,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large blue triangle,hg62,25.0,False,True,True
389.0,blue and same shape as another object,False,75.0,25.0,0.0,1.0,21.0,0.0089865216846192,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg62,25.0,False,False,True
1559.0,larger than all other objects,False,0.0,1.0,0.0,14.0,9.0,0.4509910277720337,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg29,1.0,False,False,True
1560.0,larger than all other objects,False,1.0,1.0,0.0,15.0,8.0,0.4159405455546903,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg29,1.0,False,False,True
1561.0,larger than all other objects,False,2.0,2.0,0.0,9.0,14.0,0.3373488191178921,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg29,2.0,False,False,True
1562.0,larger than all other objects,False,3.0,2.0,0.0,8.0,15.0,0.3582846733767155,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg29,2.0,False,False,True
1563.0,larger than all other objects,False,4.0,2.0,0.0,5.0,18.0,0.2753194225313109,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg29,2.0,False,False,True
1564.0,larger than all other objects,False,5.0,2.0,0.0,10.0,13.0,0.4753785794262057,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg29,2.0,False,False,True
1565.0,larger than all other objects,False,6.0,2.0,0.0,9.0,14.0,0.4185487144181934,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg29,2.0,False,False,True
1566.0,larger than all other objects,False,7.0,3.0,1.0,8.0,15.0,0.1280930199595786,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg29,3.0,True,False,True
1567.0,larger than all other objects,False,8.0,4.0,1.0,14.0,9.0,0.3792277315702677,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,4.0,True,False,True
1568.0,larger than all other objects,False,9.0,4.0,0.0,5.0,18.0,0.1474752925925031,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg29,4.0,False,False,True
1569.0,larger than all other objects,False,10.0,4.0,0.0,12.0,11.0,0.3698894439691003,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg29,4.0,False,False,True
1570.0,larger than all other objects,False,11.0,4.0,0.0,4.0,19.0,0.135161902222535,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg29,4.0,False,False,True
1571.0,larger than all other objects,False,12.0,4.0,0.0,4.0,19.0,0.2559184968025647,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg29,4.0,False,False,True
1572.0,larger than all other objects,False,13.0,5.0,0.0,2.0,21.0,0.0451016368127739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg29,5.0,False,False,True
1573.0,larger than all other objects,False,14.0,5.0,0.0,2.0,21.0,0.1125519878645491,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg29,5.0,False,False,True
1574.0,larger than all other objects,False,15.0,5.0,0.0,4.0,19.0,0.134041329560091,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg29,5.0,False,False,True
1575.0,larger than all other objects,False,16.0,6.0,0.0,1.0,22.0,0.0953130186757107,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg29,6.0,False,False,True
1576.0,larger than all other objects,False,17.0,6.0,1.0,4.0,19.0,0.312976387902836,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg29,6.0,True,False,True
1577.0,larger than all other objects,False,18.0,6.0,0.0,19.0,4.0,0.280014104864108,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg29,6.0,False,False,True
1578.0,larger than all other objects,False,19.0,7.0,0.0,0.0,23.0,0.0741402078763258,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg29,7.0,False,False,True
1579.0,larger than all other objects,False,20.0,7.0,0.0,1.0,22.0,0.0220898070438124,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg29,7.0,False,False,True
1580.0,larger than all other objects,False,21.0,7.0,1.0,19.0,4.0,0.1561009749924551,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,7.0,True,False,True
1581.0,larger than all other objects,False,22.0,8.0,1.0,13.0,10.0,0.2757199660702554,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg29,8.0,True,False,True
1582.0,larger than all other objects,False,23.0,9.0,0.0,6.0,17.0,0.1118995540127798,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg29,9.0,False,False,True
1583.0,larger than all other objects,False,24.0,9.0,0.0,10.0,13.0,0.2317602095043867,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,9.0,False,False,True
1584.0,larger than all other objects,False,25.0,9.0,0.0,4.0,19.0,0.0607904080939079,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green triangle,hg29,9.0,False,False,True
1585.0,larger than all other objects,False,26.0,10.0,0.0,4.0,19.0,0.0824250394731507,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green triangle,hg29,10.0,False,False,True
1586.0,larger than all other objects,False,27.0,10.0,1.0,18.0,5.0,0.5290239694442107,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg29,10.0,True,True,True
1587.0,larger than all other objects,False,28.0,10.0,0.0,1.0,22.0,0.0345587976503338,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg29,10.0,False,False,True
1588.0,larger than all other objects,False,29.0,11.0,1.0,20.0,3.0,0.2224523906585318,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,11.0,True,False,True
1589.0,larger than all other objects,False,30.0,11.0,0.0,2.0,21.0,0.0302132626518414,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg29,11.0,False,False,True
1590.0,larger than all other objects,False,31.0,12.0,1.0,14.0,9.0,0.2163164504870565,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow rectangle,hg29,12.0,True,False,True
1591.0,larger than all other objects,False,32.0,13.0,0.0,1.0,22.0,0.248388906205605,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg29,13.0,False,False,True
1592.0,larger than all other objects,False,33.0,13.0,0.0,4.0,19.0,0.4505745757832073,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg29,13.0,False,False,True
1593.0,larger than all other objects,False,34.0,13.0,0.0,6.0,17.0,0.4157772464625395,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg29,13.0,False,False,True
1594.0,larger than all other objects,False,35.0,13.0,0.0,8.0,15.0,0.4862096279458683,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow circle,hg29,13.0,False,False,True
1595.0,larger than all other objects,False,36.0,13.0,0.0,4.0,19.0,0.2894599210235355,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,13.0,False,False,True
1596.0,larger than all other objects,False,37.0,14.0,1.0,20.0,3.0,0.3691415663390671,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,14.0,True,False,True
1597.0,larger than all other objects,False,38.0,14.0,0.0,2.0,21.0,0.0339952204674318,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg29,14.0,False,False,True
1598.0,larger than all other objects,False,39.0,14.0,0.0,2.0,21.0,0.0590524528203104,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg29,14.0,False,False,True
1599.0,larger than all other objects,False,40.0,15.0,0.0,1.0,22.0,0.0726494833496644,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue circle,hg29,15.0,False,False,True
1600.0,larger than all other objects,False,41.0,15.0,0.0,3.0,20.0,0.0649200684441666,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green rectangle,hg29,15.0,False,False,True
1601.0,larger than all other objects,False,42.0,16.0,0.0,2.0,21.0,0.1649484296070795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg29,16.0,False,False,True
1602.0,larger than all other objects,False,43.0,16.0,0.0,4.0,19.0,0.1461690854483777,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg29,16.0,False,False,True
1603.0,larger than all other objects,False,44.0,16.0,0.0,2.0,21.0,0.1577850845684452,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg29,16.0,False,False,True
1604.0,larger than all other objects,False,45.0,16.0,0.0,5.0,18.0,0.2403519966695739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,16.0,False,False,True
1605.0,larger than all other objects,False,46.0,16.0,0.0,2.0,21.0,0.1579775200635822,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg29,16.0,False,False,True
1606.0,larger than all other objects,False,47.0,17.0,1.0,21.0,2.0,0.3767470784815714,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,17.0,True,False,True
1607.0,larger than all other objects,False,48.0,18.0,1.0,18.0,5.0,0.4809516095025401,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue circle,hg29,18.0,True,False,True
1608.0,larger than all other objects,False,49.0,18.0,0.0,2.0,21.0,0.0145626182818432,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small yellow triangle,hg29,18.0,False,False,True
1609.0,larger than all other objects,False,50.0,18.0,0.0,1.0,22.0,0.0267615334927313,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green triangle,hg29,18.0,False,False,True
1610.0,larger than all other objects,False,51.0,18.0,0.0,3.0,20.0,0.0305867628775331,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow triangle,hg29,18.0,False,False,True
1611.0,larger than all other objects,False,52.0,18.0,0.0,1.0,22.0,0.0912619248919099,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green circle,hg29,18.0,False,False,True
1612.0,larger than all other objects,False,53.0,19.0,0.0,1.0,22.0,0.0267584322315315,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small blue triangle,hg29,19.0,False,False,True
1613.0,larger than all other objects,False,54.0,19.0,1.0,20.0,3.0,0.6847566597645027,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow rectangle,hg29,19.0,True,True,True
1614.0,larger than all other objects,False,55.0,20.0,0.0,1.0,22.0,0.0690275491793954,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue triangle,hg29,20.0,False,False,True
1615.0,larger than all other objects,False,56.0,20.0,0.0,1.0,22.0,0.1108010653235851,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue rectangle,hg29,20.0,False,False,True
1616.0,larger than all other objects,False,57.0,20.0,1.0,19.0,4.0,0.7813292951711901,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue rectangle,hg29,20.0,True,True,True
1617.0,larger than all other objects,False,58.0,20.0,0.0,1.0,22.0,0.0094377564735168,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small yellow triangle,hg29,20.0,False,False,True
1618.0,larger than all other objects,False,59.0,21.0,0.0,2.0,21.0,0.0246769884073501,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue rectangle,hg29,21.0,False,False,True
1619.0,larger than all other objects,False,60.0,21.0,0.0,1.0,22.0,0.0225585906213154,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue circle,hg29,21.0,False,False,True
1620.0,larger than all other objects,False,61.0,21.0,0.0,1.0,22.0,0.024743365278482,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,21.0,False,False,True
1621.0,larger than all other objects,False,62.0,21.0,1.0,22.0,1.0,0.8711333035331563,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue rectangle,hg29,21.0,True,True,True
1622.0,larger than all other objects,False,63.0,21.0,0.0,2.0,21.0,0.0243624839263247,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow circle,hg29,21.0,False,False,True
1623.0,larger than all other objects,False,64.0,22.0,0.0,1.0,22.0,0.0142210834253546,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green triangle,hg29,22.0,False,False,True
1624.0,larger than all other objects,False,65.0,22.0,1.0,19.0,4.0,0.7696252125531373,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow triangle,hg29,22.0,True,True,True
1625.0,larger than all other objects,False,66.0,22.0,0.0,0.0,23.0,0.0053486926353798,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green triangle,hg29,22.0,False,False,True
1626.0,larger than all other objects,False,67.0,23.0,0.0,5.0,18.0,0.2963160406770839,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue triangle,hg29,23.0,False,False,True
1627.0,larger than all other objects,False,68.0,23.0,0.0,5.0,18.0,0.2760266779230278,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg29,23.0,False,False,True
1628.0,larger than all other objects,False,69.0,23.0,0.0,5.0,18.0,0.2771442206002348,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg29,23.0,False,False,True
1629.0,larger than all other objects,False,70.0,23.0,0.0,0.0,23.0,0.0127515238179967,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green rectangle,hg29,23.0,False,False,True
1630.0,larger than all other objects,False,71.0,23.0,0.0,4.0,19.0,0.3003811683389585,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg29,23.0,False,False,True
1631.0,larger than all other objects,False,72.0,24.0,1.0,20.0,3.0,0.7775850641311308,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large green triangle,hg29,24.0,True,True,True
1632.0,larger than all other objects,False,73.0,24.0,0.0,3.0,20.0,0.0299312036765968,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg29,24.0,False,False,True
1633.0,larger than all other objects,False,74.0,24.0,0.0,1.0,22.0,0.0172542644099849,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,24.0,False,False,True
1634.0,larger than all other objects,False,75.0,25.0,0.0,2.0,21.0,0.0111650368776281,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green rectangle,hg29,25.0,False,False,True
1635.0,larger than all other objects,False,76.0,25.0,0.0,0.0,23.0,0.0084155630275972,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,25.0,False,False,True
1636.0,larger than all other objects,False,77.0,25.0,1.0,20.0,3.0,0.8823822223617981,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow triangle,hg29,25.0,True,True,True
2243.0,same shape as another object that is blue,False,0.0,1.0,0.0,17.0,9.0,0.3564421919421647,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg72,1.0,False,False,True
2244.0,same shape as another object that is blue,False,1.0,2.0,0.0,7.0,19.0,0.2806495441568586,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,2.0,False,False,True
2245.0,same shape as another object that is blue,False,2.0,2.0,0.0,9.0,17.0,0.4551586325155767,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg72,2.0,False,False,True
2246.0,same shape as another object that is blue,False,3.0,3.0,0.0,7.0,19.0,0.2904155191130257,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,3.0,False,False,True
2247.0,same shape as another object that is blue,False,4.0,3.0,0.0,3.0,23.0,0.1143534568436734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,3.0,False,False,True
2248.0,same shape as another object that is blue,False,5.0,4.0,1.0,11.0,15.0,0.3421018827564239,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,4.0,True,False,True
2249.0,same shape as another object that is blue,False,6.0,4.0,0.0,10.0,16.0,0.4048913430984839,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg72,4.0,False,False,True
2250.0,same shape as another object that is blue,False,7.0,4.0,0.0,5.0,21.0,0.1449675854414636,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,4.0,False,False,True
2251.0,same shape as another object that is blue,False,8.0,5.0,1.0,1.0,25.0,0.0952015935777126,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,5.0,True,False,True
2252.0,same shape as another object that is blue,False,9.0,5.0,0.0,2.0,24.0,0.1426428119874572,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg72,5.0,False,False,True
2253.0,same shape as another object that is blue,False,10.0,5.0,0.0,3.0,23.0,0.2812785607791284,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg72,5.0,False,False,True
2254.0,same shape as another object that is blue,False,11.0,5.0,0.0,3.0,23.0,0.208430576267915,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg72,5.0,False,False,True
2255.0,same shape as another object that is blue,False,12.0,5.0,0.0,19.0,7.0,0.5340755119674441,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,5.0,False,True,True
2256.0,same shape as another object that is blue,False,13.0,6.0,0.0,13.0,13.0,0.0970625371049891,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,6.0,False,False,True
2257.0,same shape as another object that is blue,False,14.0,6.0,1.0,2.0,24.0,0.2689850865355083,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg72,6.0,True,False,True
2258.0,same shape as another object that is blue,False,15.0,6.0,0.0,0.0,26.0,0.1969100186904597,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg72,6.0,False,False,True
2259.0,same shape as another object that is blue,False,16.0,6.0,1.0,13.0,13.0,0.2396094420530516,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,6.0,True,False,True
2260.0,same shape as another object that is blue,False,17.0,7.0,0.0,3.0,23.0,0.0956007463331616,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,7.0,False,False,True
2261.0,same shape as another object that is blue,False,18.0,8.0,0.0,5.0,20.0,0.0992399214117085,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg72,8.0,False,False,True
2262.0,same shape as another object that is blue,False,19.0,8.0,0.0,13.0,12.0,0.2531767107004725,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg72,8.0,False,False,True
2263.0,same shape as another object that is blue,False,20.0,8.0,0.0,10.0,15.0,0.1427402432392455,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg72,8.0,False,False,True
2264.0,same shape as another object that is blue,False,21.0,8.0,1.0,14.0,11.0,0.5489527145120974,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg72,8.0,True,True,True
2265.0,same shape as another object that is blue,False,22.0,9.0,0.0,12.0,13.0,0.020663726713451,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green triangle,hg72,9.0,False,False,True
2266.0,same shape as another object that is blue,False,23.0,9.0,0.0,2.0,23.0,0.1015896539208824,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue rectangle,hg72,9.0,False,False,True
2267.0,same shape as another object that is blue,False,24.0,10.0,0.0,15.0,10.0,0.6217855669020764,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg72,10.0,False,True,True
2268.0,same shape as another object that is blue,False,25.0,10.0,0.0,7.0,18.0,0.0130875894691371,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,10.0,False,False,True
2269.0,same shape as another object that is blue,False,26.0,11.0,0.0,12.0,11.0,0.2940210727949761,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,11.0,False,False,True
2270.0,same shape as another object that is blue,False,27.0,11.0,0.0,4.0,19.0,0.0973382461771734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg72,11.0,False,False,True
2271.0,same shape as another object that is blue,False,28.0,11.0,0.0,2.0,21.0,0.0607303391220739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,11.0,False,False,True
2272.0,same shape as another object that is blue,False,29.0,12.0,0.0,1.0,22.0,0.1136849049681814,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,12.0,False,False,True
2273.0,same shape as another object that is blue,False,30.0,12.0,0.0,2.0,21.0,0.0940136913828837,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg72,12.0,False,False,True
2274.0,same shape as another object that is blue,False,31.0,12.0,0.0,4.0,19.0,0.1086081629641739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,12.0,False,False,True
2275.0,same shape as another object that is blue,False,32.0,13.0,0.0,1.0,22.0,0.1245108497961382,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,13.0,False,False,True
2276.0,same shape as another object that is blue,False,33.0,13.0,0.0,3.0,20.0,0.0839032356383313,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg72,13.0,False,False,True
2277.0,same shape as another object that is blue,False,34.0,13.0,0.0,7.0,16.0,0.2384319390687324,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg72,13.0,False,False,True
2278.0,same shape as another object that is blue,False,35.0,13.0,0.0,13.0,10.0,0.1854394904613627,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,13.0,False,False,True
2279.0,same shape as another object that is blue,False,36.0,13.0,0.0,12.0,11.0,0.0947092978435648,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,13.0,False,False,True
2280.0,same shape as another object that is blue,False,37.0,14.0,0.0,4.0,19.0,0.0594119100675243,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg72,14.0,False,False,True
2281.0,same shape as another object that is blue,False,38.0,14.0,1.0,1.0,22.0,0.1230592623902566,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg72,14.0,True,False,True
2282.0,same shape as another object that is blue,False,39.0,14.0,1.0,1.0,22.0,0.1802680767324318,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg72,14.0,True,False,True
2283.0,same shape as another object that is blue,False,40.0,15.0,0.0,6.0,17.0,0.0690951178773957,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,15.0,False,False,True
2284.0,same shape as another object that is blue,False,41.0,15.0,0.0,6.0,17.0,0.073165694786212,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,15.0,False,False,True
2285.0,same shape as another object that is blue,False,42.0,15.0,1.0,14.0,9.0,0.2108932843750608,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,15.0,True,False,True
2286.0,same shape as another object that is blue,False,43.0,15.0,1.0,16.0,7.0,0.3394874487418065,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg72,15.0,True,False,True
2287.0,same shape as another object that is blue,False,44.0,15.0,1.0,10.0,13.0,0.131577942503327,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg72,15.0,True,False,True
2288.0,same shape as another object that is blue,False,45.0,16.0,0.0,3.0,20.0,0.0262395308068335,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium green circle,hg72,16.0,False,False,True
2289.0,same shape as another object that is blue,False,46.0,16.0,0.0,2.0,21.0,0.0177609607227395,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium yellow rectangle,hg72,16.0,False,False,True
2290.0,same shape as another object that is blue,False,47.0,16.0,1.0,14.0,9.0,0.4574862380859485,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium yellow triangle,hg72,16.0,True,False,True
2291.0,same shape as another object that is blue,False,48.0,16.0,0.0,10.0,13.0,0.2183442927851047,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small blue triangle,hg72,16.0,False,False,True
2292.0,same shape as another object that is blue,False,49.0,17.0,0.0,6.0,17.0,0.1135726098367513,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,17.0,False,False,True
2293.0,same shape as another object that is blue,False,50.0,17.0,1.0,14.0,9.0,0.4773895187780681,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green rectangle,hg72,17.0,True,False,True
2294.0,same shape as another object that is blue,False,51.0,17.0,0.0,3.0,20.0,0.0328592597694523,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg72,17.0,False,False,True
2295.0,same shape as another object that is blue,False,52.0,17.0,1.0,13.0,10.0,0.4782427554428068,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow rectangle,hg72,17.0,True,False,True
2296.0,same shape as another object that is blue,False,53.0,17.0,0.0,4.0,19.0,0.1047521206281771,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg72,17.0,False,False,True
2297.0,same shape as another object that is blue,False,54.0,18.0,0.0,6.0,17.0,0.0646974983748123,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,18.0,False,False,True
2298.0,same shape as another object that is blue,False,55.0,18.0,0.0,4.0,19.0,0.0232754211630208,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green circle,hg72,18.0,False,False,True
2299.0,same shape as another object that is blue,False,56.0,18.0,0.0,7.0,16.0,0.0285077954997632,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue triangle,hg72,18.0,False,False,True
2300.0,same shape as another object that is blue,False,57.0,18.0,1.0,16.0,7.0,0.7251052939095644,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow rectangle,hg72,18.0,True,True,True
2301.0,same shape as another object that is blue,False,58.0,18.0,1.0,15.0,8.0,0.7319380512043381,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green triangle,hg72,18.0,True,True,True
2302.0,same shape as another object that is blue,False,59.0,19.0,0.0,3.0,20.0,0.0071080123976798,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,19.0,False,False,True
2303.0,same shape as another object that is blue,False,60.0,20.0,0.0,1.0,22.0,0.031104088200891,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue circle,hg72,20.0,False,False,True
2304.0,same shape as another object that is blue,False,61.0,20.0,0.0,7.0,16.0,0.3342192873643625,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue rectangle,hg72,20.0,False,False,True
2305.0,same shape as another object that is blue,False,62.0,21.0,0.0,3.0,20.0,0.0174040547233289,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium green circle,hg72,21.0,False,False,True
2306.0,same shape as another object that is blue,False,63.0,22.0,0.0,13.0,10.0,0.2134351157023957,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg72,22.0,False,False,True
2307.0,same shape as another object that is blue,False,64.0,22.0,0.0,2.0,21.0,0.033770761516962,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,22.0,False,False,True
2308.0,same shape as another object that is blue,False,65.0,22.0,0.0,1.0,22.0,0.0666498956909436,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg72,22.0,False,False,True
2309.0,same shape as another object that is blue,False,66.0,22.0,0.0,7.0,16.0,0.1901326190819645,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg72,22.0,False,False,True
2310.0,same shape as another object that is blue,False,67.0,23.0,0.0,1.0,22.0,0.0236955173095338,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,23.0,False,False,True
2311.0,same shape as another object that is blue,False,68.0,23.0,0.0,12.0,11.0,0.1778960947515315,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg72,23.0,False,False,True
2312.0,same shape as another object that is blue,False,69.0,23.0,0.0,0.0,23.0,0.0354155605364212,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg72,23.0,False,False,True
2313.0,same shape as another object that is blue,False,70.0,23.0,0.0,5.0,18.0,0.0771495401479569,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,23.0,False,False,True
2314.0,same shape as another object that is blue,False,71.0,24.0,0.0,4.0,19.0,0.0348516651749832,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,24.0,False,False,True
2315.0,same shape as another object that is blue,False,72.0,25.0,0.0,12.0,11.0,0.1391259594296343,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,25.0,False,False,True
2316.0,same shape as another object that is blue,False,73.0,25.0,0.0,2.0,21.0,0.0364522229864405,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,25.0,False,False,True
2317.0,same shape as another object that is blue,False,74.0,25.0,0.0,2.0,21.0,0.0608077307160783,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,25.0,False,False,True
2318.0,same shape as another object that is blue,False,75.0,25.0,0.0,5.0,18.0,0.095553256613357,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg72,25.0,False,False,True
2391.0,exists another object of the same shape that is blue,False,0.0,1.0,0.0,12.0,12.0,0.4513961497743821,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg89,1.0,False,False,True
2392.0,exists another object of the same shape that is blue,False,1.0,2.0,0.0,11.0,13.0,0.4498018967907455,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,2.0,False,False,True
2393.0,exists another object of the same shape that is blue,False,2.0,2.0,0.0,3.0,21.0,0.3219275156112644,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,2.0,False,False,True
2394.0,exists another object of the same shape that is blue,False,3.0,2.0,1.0,11.0,13.0,0.3450832132270989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,2.0,True,False,True
2395.0,exists another object of the same shape that is blue,False,4.0,2.0,1.0,12.0,12.0,0.386945847824677,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg89,2.0,True,False,True
2396.0,exists another object of the same shape that is blue,False,5.0,2.0,1.0,9.0,15.0,0.3392934118243147,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg89,2.0,True,False,True
2397.0,exists another object of the same shape that is blue,False,6.0,3.0,0.0,5.0,19.0,0.4039541817001009,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium blue triangle,hg89,3.0,False,False,True
2398.0,exists another object of the same shape that is blue,False,7.0,3.0,1.0,23.0,1.0,0.753339971675473,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green triangle,hg89,3.0,True,True,True
2399.0,exists another object of the same shape that is blue,False,8.0,4.0,0.0,20.0,4.0,0.6942108633588759,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow triangle,hg89,4.0,False,True,True
2400.0,exists another object of the same shape that is blue,False,9.0,4.0,0.0,22.0,2.0,0.7660427516215123,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green triangle,hg89,4.0,False,True,True
2401.0,exists another object of the same shape that is blue,False,10.0,5.0,0.0,18.0,6.0,0.2265265275331103,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg89,5.0,False,False,True
2402.0,exists another object of the same shape that is blue,False,11.0,5.0,0.0,4.0,20.0,0.2804430077759434,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg89,5.0,False,False,True
2403.0,exists another object of the same shape that is blue,False,12.0,6.0,0.0,2.0,21.0,0.2739156724165923,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,6.0,False,False,True
2404.0,exists another object of the same shape that is blue,False,13.0,6.0,0.0,4.0,19.0,0.1931233842759638,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,6.0,False,False,True
2405.0,exists another object of the same shape that is blue,False,14.0,7.0,0.0,4.0,19.0,0.2514847136714024,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,7.0,False,False,True
2406.0,exists another object of the same shape that is blue,False,15.0,8.0,0.0,1.0,22.0,0.1873751222067312,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,8.0,False,False,True
2407.0,exists another object of the same shape that is blue,False,16.0,8.0,0.0,3.0,20.0,0.3475706044835078,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,8.0,False,False,True
2408.0,exists another object of the same shape that is blue,False,17.0,8.0,0.0,2.0,21.0,0.098290711545701,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,8.0,False,False,True
2409.0,exists another object of the same shape that is blue,False,18.0,8.0,0.0,3.0,20.0,0.2289158755421567,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg89,8.0,False,False,True
2410.0,exists another object of the same shape that is blue,False,19.0,8.0,0.0,2.0,21.0,0.2298017802833101,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,8.0,False,False,True
2411.0,exists another object of the same shape that is blue,False,20.0,9.0,1.0,7.0,16.0,0.1626513902439228,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,9.0,True,False,True
2412.0,exists another object of the same shape that is blue,False,21.0,9.0,0.0,0.0,23.0,0.2179079436298252,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg89,9.0,False,False,True
2413.0,exists another object of the same shape that is blue,False,22.0,9.0,0.0,1.0,22.0,0.1121768438878234,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,9.0,False,False,True
2414.0,exists another object of the same shape that is blue,False,23.0,10.0,0.0,0.0,23.0,0.0424998119246993,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,10.0,False,False,True
2415.0,exists another object of the same shape that is blue,False,24.0,10.0,0.0,18.0,5.0,0.3360165359550819,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,10.0,False,False,True
2416.0,exists another object of the same shape that is blue,False,25.0,10.0,0.0,1.0,22.0,0.1268084702770693,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,10.0,False,False,True
2417.0,exists another object of the same shape that is blue,False,26.0,11.0,0.0,1.0,22.0,0.1451954885335453,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg89,11.0,False,False,True
2418.0,exists another object of the same shape that is blue,False,27.0,11.0,0.0,1.0,22.0,0.1726361792626676,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,11.0,False,False,True
2419.0,exists another object of the same shape that is blue,False,28.0,11.0,0.0,0.0,23.0,0.0746861467742974,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,11.0,False,False,True
2420.0,exists another object of the same shape that is blue,False,29.0,11.0,0.0,0.0,23.0,0.0549036765947903,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,11.0,False,False,True
2421.0,exists another object of the same shape that is blue,False,30.0,12.0,0.0,1.0,22.0,0.1327704892220254,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,12.0,False,False,True
2422.0,exists another object of the same shape that is blue,False,31.0,12.0,0.0,1.0,22.0,0.050461671497942,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,12.0,False,False,True
2423.0,exists another object of the same shape that is blue,False,32.0,12.0,0.0,1.0,22.0,0.077306193037657,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,12.0,False,False,True
2424.0,exists another object of the same shape that is blue,False,33.0,13.0,0.0,1.0,22.0,0.1008514562897744,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,13.0,False,False,True
2425.0,exists another object of the same shape that is blue,False,34.0,13.0,1.0,1.0,22.0,0.0806904511380253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,13.0,True,False,True
2426.0,exists another object of the same shape that is blue,False,35.0,14.0,0.0,4.0,19.0,0.128112848058322,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg89,14.0,False,False,True
2427.0,exists another object of the same shape that is blue,False,36.0,14.0,0.0,2.0,21.0,0.0532838830421269,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,14.0,False,False,True
2428.0,exists another object of the same shape that is blue,False,37.0,14.0,0.0,0.0,23.0,0.0558014439168346,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg89,14.0,False,False,True
2429.0,exists another object of the same shape that is blue,False,38.0,15.0,0.0,0.0,23.0,0.0407470607915456,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,15.0,False,False,True
2430.0,exists another object of the same shape that is blue,False,39.0,15.0,0.0,1.0,22.0,0.106839931159925,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg89,15.0,False,False,True
2431.0,exists another object of the same shape that is blue,False,40.0,15.0,0.0,12.0,11.0,0.1144057083313327,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,15.0,False,False,True
2432.0,exists another object of the same shape that is blue,False,41.0,15.0,0.0,12.0,11.0,0.1194526511632148,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,15.0,False,False,True
2433.0,exists another object of the same shape that is blue,False,42.0,15.0,0.0,1.0,22.0,0.0748817606901184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,15.0,False,False,True
2434.0,exists another object of the same shape that is blue,False,43.0,16.0,0.0,2.0,21.0,0.0415687847635126,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,16.0,False,False,True
2435.0,exists another object of the same shape that is blue,False,44.0,16.0,0.0,2.0,21.0,0.074533174464932,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg89,16.0,False,False,True
2436.0,exists another object of the same shape that is blue,False,45.0,16.0,0.0,2.0,21.0,0.0410627948174351,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,16.0,False,False,True
2437.0,exists another object of the same shape that is blue,False,46.0,16.0,1.0,10.0,13.0,0.2006202951631621,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg89,16.0,True,False,True
2438.0,exists another object of the same shape that is blue,False,47.0,16.0,0.0,2.0,21.0,0.0510345706748012,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,16.0,False,False,True
2439.0,exists another object of the same shape that is blue,False,48.0,17.0,1.0,4.0,19.0,0.0889003423802705,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow circle,hg89,17.0,True,False,True
2440.0,exists another object of the same shape that is blue,False,49.0,17.0,0.0,1.0,22.0,0.0206714331267221,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue circle,hg89,17.0,False,False,True
2441.0,exists another object of the same shape that is blue,False,50.0,17.0,1.0,2.0,21.0,0.1140773759966577,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow rectangle,hg89,17.0,True,False,True
2442.0,exists another object of the same shape that is blue,False,51.0,17.0,0.0,2.0,21.0,0.0361777617586085,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium blue rectangle,hg89,17.0,False,False,True
2443.0,exists another object of the same shape that is blue,False,52.0,17.0,1.0,10.0,13.0,0.1217543613012139,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green circle,hg89,17.0,True,False,True
2444.0,exists another object of the same shape that is blue,False,53.0,18.0,0.0,3.0,20.0,0.0138228100367996,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg89,18.0,False,False,True
2445.0,exists another object of the same shape that is blue,False,54.0,19.0,0.0,8.0,15.0,0.0370393916418834,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg89,19.0,False,False,True
2446.0,exists another object of the same shape that is blue,False,55.0,19.0,1.0,17.0,6.0,0.406315448777832,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,19.0,True,False,True
2447.0,exists another object of the same shape that is blue,False,56.0,19.0,0.0,0.0,23.0,0.0176473333821149,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg89,19.0,False,False,True
2448.0,exists another object of the same shape that is blue,False,57.0,19.0,1.0,16.0,7.0,0.4191343333063742,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,19.0,True,False,True
2449.0,exists another object of the same shape that is blue,False,58.0,19.0,0.0,1.0,22.0,0.0136220180165764,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,19.0,False,False,True
2450.0,exists another object of the same shape that is blue,False,59.0,20.0,0.0,1.0,21.0,0.0193987064253633,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg89,20.0,False,False,True
2451.0,exists another object of the same shape that is blue,False,60.0,20.0,1.0,12.0,10.0,0.7749731761989551,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green circle,hg89,20.0,True,True,True
2452.0,exists another object of the same shape that is blue,False,61.0,21.0,0.0,5.0,17.0,0.0608079810436947,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow circle,hg89,21.0,False,False,True
2453.0,exists another object of the same shape that is blue,False,62.0,21.0,0.0,1.0,21.0,0.0184095645117849,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg89,21.0,False,False,True
2454.0,exists another object of the same shape that is blue,False,63.0,21.0,0.0,3.0,19.0,0.0440669093324004,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green circle,hg89,21.0,False,False,True
2455.0,exists another object of the same shape that is blue,False,64.0,21.0,0.0,6.0,16.0,0.0299839869896914,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg89,21.0,False,False,True
2456.0,exists another object of the same shape that is blue,False,65.0,21.0,0.0,6.0,16.0,0.0397216487550622,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small yellow triangle,hg89,21.0,False,False,True
2457.0,exists another object of the same shape that is blue,False,66.0,22.0,0.0,7.0,15.0,0.041221275251587,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,22.0,False,False,True
2458.0,exists another object of the same shape that is blue,False,67.0,22.0,0.0,2.0,20.0,0.060740093463778,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,22.0,False,False,True
2459.0,exists another object of the same shape that is blue,False,68.0,22.0,0.0,2.0,20.0,0.0258176678440804,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,22.0,False,False,True
2460.0,exists another object of the same shape that is blue,False,69.0,22.0,1.0,10.0,12.0,0.6325911178166734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg89,22.0,True,True,True
2461.0,exists another object of the same shape that is blue,False,70.0,23.0,0.0,1.0,21.0,0.00897604685656,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue triangle,hg89,23.0,False,False,True
2462.0,exists another object of the same shape that is blue,False,71.0,23.0,1.0,17.0,5.0,0.6297641755859331,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium yellow triangle,hg89,23.0,True,True,True
2463.0,exists another object of the same shape that is blue,False,72.0,23.0,0.0,0.0,22.0,0.0605765524937851,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium green rectangle,hg89,23.0,False,False,True
2464.0,exists another object of the same shape that is blue,False,73.0,23.0,1.0,18.0,4.0,0.8115598890423144,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green triangle,hg89,23.0,True,True,True
2465.0,exists another object of the same shape that is blue,False,74.0,24.0,0.0,1.0,21.0,0.0128749946211428,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue circle,hg89,24.0,False,False,True
2466.0,exists another object of the same shape that is blue,False,75.0,24.0,1.0,8.0,14.0,0.8558715622109503,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small yellow circle,hg89,24.0,True,True,True
2467.0,exists another object of the same shape that is blue,False,76.0,24.0,1.0,16.0,6.0,0.7353293199736299,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green circle,hg89,24.0,True,True,True
2468.0,exists another object of the same shape that is blue,False,77.0,25.0,0.0,11.0,11.0,0.0078200136849773,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg89,25.0,False,False,True
2469.0,exists another object of the same shape that is blue,False,78.0,25.0,0.0,1.0,21.0,0.0045876040691155,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg89,25.0,False,False,True
2470.0,exists another object of the same shape that is blue,False,79.0,25.0,0.0,3.0,19.0,0.0042033857187107,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg89,25.0,False,False,True
2471.0,exists another object of the same shape that is blue,False,80.0,25.0,0.0,10.0,12.0,0.0154735173015296,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg89,25.0,False,False,True
2698.0,no other object has the same shape,False,0.0,1.0,0.0,14.0,8.0,0.4327655660324581,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg64,1.0,False,False,True
2699.0,no other object has the same shape,False,1.0,1.0,0.0,12.0,10.0,0.4635304118537533,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg64,1.0,False,False,True
2700.0,no other object has the same shape,False,2.0,1.0,1.0,14.0,8.0,0.4317993963637718,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg64,1.0,True,False,True
2701.0,no other object has the same shape,False,3.0,1.0,1.0,11.0,11.0,0.4772680499445414,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg64,1.0,True,False,True
2702.0,no other object has the same shape,False,4.0,1.0,0.0,9.0,13.0,0.4319360647588155,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg64,1.0,False,False,True
2703.0,no other object has the same shape,False,5.0,2.0,1.0,7.0,15.0,0.1201440032987193,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green triangle,hg64,2.0,True,False,True
2704.0,no other object has the same shape,False,6.0,2.0,0.0,17.0,5.0,0.6870085518029327,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green circle,hg64,2.0,False,True,True
2705.0,no other object has the same shape,False,7.0,2.0,0.0,8.0,14.0,0.6256312567018085,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue circle,hg64,2.0,False,True,True
2706.0,no other object has the same shape,False,8.0,2.0,0.0,5.0,17.0,0.5730007119146876,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg64,2.0,False,True,True
2707.0,no other object has the same shape,False,9.0,3.0,0.0,3.0,19.0,0.3436226547127035,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg64,3.0,False,False,True
2708.0,no other object has the same shape,False,10.0,3.0,0.0,13.0,9.0,0.4123932866950781,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg64,3.0,False,False,True
2709.0,no other object has the same shape,False,11.0,3.0,1.0,13.0,9.0,0.2837813831994253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg64,3.0,True,False,True
2710.0,no other object has the same shape,False,12.0,4.0,1.0,15.0,7.0,0.3228615392064284,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg64,4.0,True,False,True
2711.0,no other object has the same shape,False,13.0,5.0,0.0,5.0,17.0,0.2216940701000567,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg64,5.0,False,False,True
2712.0,no other object has the same shape,False,14.0,5.0,0.0,3.0,19.0,0.2819301951241186,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg64,5.0,False,False,True
2713.0,no other object has the same shape,False,15.0,5.0,0.0,10.0,12.0,0.3120130735470638,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg64,5.0,False,False,True
2714.0,no other object has the same shape,False,16.0,5.0,1.0,20.0,2.0,0.6075122593991864,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg64,5.0,True,True,True
2715.0,no other object has the same shape,False,17.0,5.0,0.0,5.0,17.0,0.2026187835007249,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow rectangle,hg64,5.0,False,False,True
2716.0,no other object has the same shape,False,18.0,6.0,0.0,7.0,15.0,0.2867523152533522,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg64,6.0,False,False,True
2717.0,no other object has the same shape,False,19.0,6.0,0.0,3.0,19.0,0.0936960899687164,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg64,6.0,False,False,True
2718.0,no other object has the same shape,False,20.0,6.0,1.0,14.0,8.0,0.2199211695221947,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg64,6.0,True,False,True
2719.0,no other object has the same shape,False,21.0,6.0,1.0,12.0,10.0,0.4503521893311699,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg64,6.0,True,False,True
2720.0,no other object has the same shape,False,22.0,6.0,0.0,3.0,19.0,0.086189661365438,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg64,6.0,False,False,True
2721.0,no other object has the same shape,False,23.0,7.0,1.0,15.0,7.0,0.6316892528204789,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green triangle,hg64,7.0,True,True,True
2722.0,no other object has the same shape,False,24.0,7.0,0.0,4.0,18.0,0.2674546686372423,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small blue circle,hg64,7.0,False,False,True
2723.0,no other object has the same shape,False,25.0,7.0,0.0,9.0,13.0,0.3231611743572102,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green circle,hg64,7.0,False,False,True
2724.0,no other object has the same shape,False,26.0,7.0,1.0,17.0,5.0,0.5662029956113201,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",large yellow rectangle,hg64,7.0,True,True,True
2725.0,no other object has the same shape,False,27.0,7.0,0.0,14.0,8.0,0.2753745848424387,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",large blue circle,hg64,7.0,False,False,True
2726.0,no other object has the same shape,False,28.0,8.0,0.0,5.0,17.0,0.114161603577827,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small green circle,hg64,8.0,False,False,True
2727.0,no other object has the same shape,False,29.0,8.0,0.0,11.0,11.0,0.1195724549229453,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green circle,hg64,8.0,False,False,True
2728.0,no other object has the same shape,False,30.0,8.0,1.0,13.0,9.0,0.9240307998798016,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small green triangle,hg64,8.0,True,True,True
2729.0,no other object has the same shape,False,31.0,9.0,1.0,12.0,10.0,0.8871238237691159,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,9.0,True,True,True
2730.0,no other object has the same shape,False,32.0,9.0,1.0,17.0,5.0,0.8666167753812033,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,9.0,True,True,True
2731.0,no other object has the same shape,False,33.0,10.0,0.0,9.0,12.0,0.0639231474794996,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green rectangle,hg64,10.0,False,False,True
2732.0,no other object has the same shape,False,34.0,10.0,1.0,14.0,7.0,0.8697806858913282,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,10.0,True,True,True
2733.0,no other object has the same shape,False,35.0,10.0,0.0,4.0,17.0,0.0285958037200089,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow rectangle,hg64,10.0,False,False,True
2734.0,no other object has the same shape,False,36.0,10.0,1.0,15.0,6.0,0.8947233058161146,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,10.0,True,True,True
2735.0,no other object has the same shape,False,37.0,11.0,1.0,17.0,4.0,0.9680070734784748,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,11.0,True,True,True
2736.0,no other object has the same shape,False,38.0,12.0,0.0,7.0,14.0,0.0786122415139516,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green triangle,hg64,12.0,False,False,True
2737.0,no other object has the same shape,False,39.0,12.0,0.0,2.0,19.0,0.0637279734910407,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue rectangle,hg64,12.0,False,False,True
2738.0,no other object has the same shape,False,40.0,12.0,1.0,13.0,8.0,0.9203541408137426,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green circle,hg64,12.0,True,True,True
2739.0,no other object has the same shape,False,41.0,12.0,0.0,9.0,12.0,0.0889630287924774,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue triangle,hg64,12.0,False,False,True
2740.0,no other object has the same shape,False,42.0,12.0,0.0,1.0,20.0,0.0681369806540033,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,12.0,False,False,True
2741.0,no other object has the same shape,False,43.0,13.0,1.0,18.0,3.0,0.973960008462882,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,13.0,True,True,True
2742.0,no other object has the same shape,False,44.0,14.0,0.0,3.0,18.0,0.0221823291356031,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,14.0,False,False,True
2743.0,no other object has the same shape,False,45.0,14.0,1.0,14.0,7.0,0.9508301753318164,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue circle,hg64,14.0,True,True,True
2744.0,no other object has the same shape,False,46.0,14.0,0.0,0.0,21.0,0.0169970096811766,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow rectangle,hg64,14.0,False,False,True
2745.0,no other object has the same shape,False,47.0,14.0,1.0,17.0,4.0,0.9145282550456386,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,14.0,True,True,True
2746.0,no other object has the same shape,False,48.0,15.0,0.0,4.0,17.0,0.0083028198814645,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green rectangle,hg64,15.0,False,False,True
2747.0,no other object has the same shape,False,49.0,15.0,0.0,3.0,18.0,0.003477892801925,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,15.0,False,False,True
2748.0,no other object has the same shape,False,50.0,16.0,1.0,18.0,3.0,0.9337887504243554,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,16.0,True,True,True
2749.0,no other object has the same shape,False,51.0,17.0,0.0,6.0,15.0,0.0671184096876231,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green triangle,hg64,17.0,False,False,True
2750.0,no other object has the same shape,False,52.0,17.0,0.0,5.0,16.0,0.0829673047099959,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue triangle,hg64,17.0,False,False,True
2751.0,no other object has the same shape,False,53.0,17.0,0.0,5.0,16.0,0.0679987216610698,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green triangle,hg64,17.0,False,False,True
2752.0,no other object has the same shape,False,54.0,18.0,0.0,5.0,16.0,0.0220119963006482,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,18.0,False,False,True
2753.0,no other object has the same shape,False,55.0,18.0,1.0,14.0,7.0,0.7969077174712993,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow rectangle,hg64,18.0,True,True,True
2754.0,no other object has the same shape,False,56.0,18.0,0.0,4.0,17.0,0.0939987652155878,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green circle,hg64,18.0,False,False,True
2755.0,no other object has the same shape,False,57.0,18.0,0.0,7.0,14.0,0.0970293953997725,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green circle,hg64,18.0,False,False,True
2756.0,no other object has the same shape,False,58.0,18.0,0.0,4.0,17.0,0.0121760379328179,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow triangle,hg64,18.0,False,False,True
2757.0,no other object has the same shape,False,59.0,19.0,0.0,6.0,15.0,0.0047676457876377,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,19.0,False,False,True
2758.0,no other object has the same shape,False,60.0,19.0,0.0,2.0,19.0,0.0062406070222778,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow triangle,hg64,19.0,False,False,True
2759.0,no other object has the same shape,False,61.0,19.0,1.0,15.0,6.0,0.9674339116030524,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow circle,hg64,19.0,True,True,True
2760.0,no other object has the same shape,False,62.0,19.0,1.0,13.0,8.0,0.9412914174140496,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue rectangle,hg64,19.0,True,True,True
2761.0,no other object has the same shape,False,63.0,20.0,1.0,14.0,7.0,0.98163258378122,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,20.0,True,True,True
2762.0,no other object has the same shape,False,64.0,20.0,1.0,18.0,3.0,0.9937121744833348,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow circle,hg64,20.0,True,True,True
2763.0,no other object has the same shape,False,65.0,21.0,1.0,14.0,7.0,0.985521225299408,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue circle,hg64,21.0,True,True,True
2764.0,no other object has the same shape,False,66.0,21.0,0.0,9.0,12.0,0.0101528312209211,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,21.0,False,False,True
2765.0,no other object has the same shape,False,67.0,21.0,0.0,4.0,17.0,0.001924905326291,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green rectangle,hg64,21.0,False,False,True
2766.0,no other object has the same shape,False,68.0,21.0,0.0,6.0,15.0,0.0073871885977041,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,21.0,False,False,True
2767.0,no other object has the same shape,False,69.0,21.0,0.0,9.0,12.0,0.0058773265999434,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow rectangle,hg64,21.0,False,False,True
2768.0,no other object has the same shape,False,70.0,22.0,0.0,5.0,16.0,0.0012716868903908,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,22.0,False,False,True
2769.0,no other object has the same shape,False,71.0,22.0,1.0,17.0,4.0,0.9954361915556548,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow circle,hg64,22.0,True,True,True
2770.0,no other object has the same shape,False,72.0,22.0,0.0,4.0,17.0,0.0002268842091552,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green rectangle,hg64,22.0,False,False,True
2771.0,no other object has the same shape,False,73.0,22.0,1.0,16.0,5.0,0.9727297965174556,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,22.0,True,True,True
2772.0,no other object has the same shape,False,74.0,23.0,1.0,19.0,2.0,0.9975589401534536,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,23.0,True,True,True
2773.0,no other object has the same shape,False,75.0,24.0,0.0,8.0,13.0,0.0280665902506598,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,24.0,False,False,True
2774.0,no other object has the same shape,False,76.0,24.0,0.0,9.0,12.0,0.0307006822238236,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,24.0,False,False,True
2775.0,no other object has the same shape,False,77.0,25.0,0.0,5.0,16.0,0.0029188907112711,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green circle,hg64,25.0,False,False,True
2776.0,no other object has the same shape,False,78.0,25.0,0.0,3.0,18.0,0.0002630733132491,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,25.0,False,False,True
2777.0,no other object has the same shape,False,79.0,25.0,0.0,4.0,17.0,0.000604772898896,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green rectangle,hg64,25.0,False,False,True
2778.0,no other object has the same shape,False,80.0,25.0,0.0,4.0,17.0,0.0043393204319954,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue circle,hg64,25.0,False,False,True
3844.0,the unique element and is (blue or green),False,0.0,1.0,0.0,12.0,10.0,0.464158940698212,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg94,1.0,False,False,True
3845.0,the unique element and is (blue or green),False,1.0,1.0,0.0,6.0,16.0,0.4635622563455399,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg94,1.0,False,False,True
3846.0,the unique element and is (blue or green),False,2.0,1.0,0.0,9.0,13.0,0.4735315146895118,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg94,1.0,False,False,True
3847.0,the unique element and is (blue or green),False,3.0,2.0,0.0,7.0,15.0,0.2689515992464066,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,2.0,False,False,True
3848.0,the unique element and is (blue or green),False,4.0,2.0,0.0,10.0,12.0,0.295885149982837,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg94,2.0,False,False,True
3849.0,the unique element and is (blue or green),False,5.0,3.0,0.0,4.0,18.0,0.1354677615015589,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg94,3.0,False,False,True
3850.0,the unique element and is (blue or green),False,6.0,3.0,0.0,6.0,16.0,0.1904531024410971,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,3.0,False,False,True
3851.0,the unique element and is (blue or green),False,7.0,4.0,0.0,3.0,19.0,0.1757157043401775,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,4.0,False,False,True
3852.0,the unique element and is (blue or green),False,8.0,4.0,0.0,10.0,12.0,0.2240316855355786,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,4.0,False,False,True
3853.0,the unique element and is (blue or green),False,9.0,4.0,0.0,8.0,14.0,0.2651723951577196,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,4.0,False,False,True
3854.0,the unique element and is (blue or green),False,10.0,4.0,0.0,3.0,19.0,0.1072981975362381,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,4.0,False,False,True
3855.0,the unique element and is (blue or green),False,11.0,5.0,0.0,5.0,17.0,0.1427454110605595,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg94,5.0,False,False,True
3856.0,the unique element and is (blue or green),False,12.0,6.0,0.0,4.0,18.0,0.0945149308038253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg94,6.0,False,False,True
3857.0,the unique element and is (blue or green),False,13.0,6.0,1.0,3.0,19.0,0.2779913855348468,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,6.0,True,False,True
3858.0,the unique element and is (blue or green),False,14.0,7.0,0.0,10.0,12.0,0.2577196518744813,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg94,7.0,False,False,True
3859.0,the unique element and is (blue or green),False,15.0,7.0,0.0,4.0,18.0,0.0996736513117184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,7.0,False,False,True
3860.0,the unique element and is (blue or green),False,16.0,7.0,0.0,4.0,18.0,0.3785544455129184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,7.0,False,False,True
3861.0,the unique element and is (blue or green),False,17.0,7.0,0.0,3.0,19.0,0.2604980887718966,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,7.0,False,False,True
3862.0,the unique element and is (blue or green),False,18.0,8.0,0.0,14.0,8.0,0.3649636444951056,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,8.0,False,False,True
3863.0,the unique element and is (blue or green),False,19.0,8.0,0.0,0.0,22.0,0.053883691310375,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,8.0,False,False,True
3864.0,the unique element and is (blue or green),False,20.0,8.0,0.0,1.0,21.0,0.0761710438224554,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,8.0,False,False,True
3865.0,the unique element and is (blue or green),False,21.0,8.0,0.0,1.0,21.0,0.1177660485710703,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,8.0,False,False,True
3866.0,the unique element and is (blue or green),False,22.0,8.0,0.0,10.0,12.0,0.3839173337197508,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg94,8.0,False,False,True
3867.0,the unique element and is (blue or green),False,23.0,9.0,1.0,3.0,19.0,0.1575655960231188,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,9.0,True,False,True
3868.0,the unique element and is (blue or green),False,24.0,9.0,0.0,3.0,19.0,0.0941102320772415,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,9.0,False,False,True
3869.0,the unique element and is (blue or green),False,25.0,10.0,0.0,3.0,19.0,0.060555625218285,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg94,10.0,False,False,True
3870.0,the unique element and is (blue or green),False,26.0,10.0,0.0,1.0,21.0,0.0902022110540201,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,10.0,False,False,True
3871.0,the unique element and is (blue or green),False,27.0,10.0,0.0,3.0,19.0,0.0842101630582874,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg94,10.0,False,False,True
3872.0,the unique element and is (blue or green),False,28.0,10.0,0.0,16.0,6.0,0.3836894602850407,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,10.0,False,False,True
3873.0,the unique element and is (blue or green),False,29.0,11.0,0.0,2.0,20.0,0.0810514263408777,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,11.0,False,False,True
3874.0,the unique element and is (blue or green),False,30.0,11.0,0.0,2.0,20.0,0.0719307610600026,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,11.0,False,False,True
3875.0,the unique element and is (blue or green),False,31.0,11.0,0.0,2.0,20.0,0.1668850882451806,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,11.0,False,False,True
3876.0,the unique element and is (blue or green),False,32.0,12.0,0.0,0.0,22.0,0.0972080966297426,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,12.0,False,False,True
3877.0,the unique element and is (blue or green),False,33.0,12.0,0.0,4.0,18.0,0.0793298676610447,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,12.0,False,False,True
3878.0,the unique element and is (blue or green),False,34.0,12.0,1.0,1.0,21.0,0.0833070691767261,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,12.0,True,False,True
3879.0,the unique element and is (blue or green),False,35.0,13.0,0.0,3.0,19.0,0.160762878929404,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,13.0,False,False,True
3880.0,the unique element and is (blue or green),False,36.0,13.0,0.0,4.0,18.0,0.1104666420056901,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,13.0,False,False,True
3881.0,the unique element and is (blue or green),False,37.0,13.0,0.0,2.0,20.0,0.1234646272588406,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,13.0,False,False,True
3882.0,the unique element and is (blue or green),False,38.0,14.0,1.0,11.0,11.0,0.1599241830182336,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,14.0,True,False,True
3883.0,the unique element and is (blue or green),False,39.0,14.0,0.0,1.0,21.0,0.0781103745823657,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg94,14.0,False,False,True
3884.0,the unique element and is (blue or green),False,40.0,14.0,0.0,0.0,22.0,0.0450355131467858,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg94,14.0,False,False,True
3885.0,the unique element and is (blue or green),False,41.0,15.0,0.0,2.0,20.0,0.0576520644420952,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg94,15.0,False,False,True
3886.0,the unique element and is (blue or green),False,42.0,15.0,1.0,9.0,13.0,0.2547705413915082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,15.0,True,False,True
3887.0,the unique element and is (blue or green),False,43.0,16.0,0.0,2.0,20.0,0.1104517131445845,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,16.0,False,False,True
3888.0,the unique element and is (blue or green),False,44.0,16.0,0.0,1.0,21.0,0.0593724880120589,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,16.0,False,False,True
3889.0,the unique element and is (blue or green),False,45.0,16.0,0.0,5.0,17.0,0.1379968250238334,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,16.0,False,False,True
3890.0,the unique element and is (blue or green),False,46.0,16.0,0.0,3.0,19.0,0.0332145116699393,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,16.0,False,False,True
3891.0,the unique element and is (blue or green),False,47.0,17.0,0.0,4.0,18.0,0.0298462038674642,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,17.0,False,False,True
3892.0,the unique element and is (blue or green),False,48.0,17.0,0.0,6.0,16.0,0.0865894738408314,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,17.0,False,False,True
3893.0,the unique element and is (blue or green),False,49.0,17.0,0.0,0.0,22.0,0.0255710908202217,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,17.0,False,False,True
3894.0,the unique element and is (blue or green),False,50.0,17.0,0.0,4.0,18.0,0.0483622390809159,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,17.0,False,False,True
3895.0,the unique element and is (blue or green),False,51.0,17.0,0.0,5.0,17.0,0.0486446355208727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,17.0,False,False,True
3896.0,the unique element and is (blue or green),False,52.0,18.0,0.0,5.0,17.0,0.1798341170015192,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,18.0,False,False,True
3897.0,the unique element and is (blue or green),False,53.0,18.0,0.0,1.0,21.0,0.066831039121439,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,18.0,False,False,True
3898.0,the unique element and is (blue or green),False,54.0,19.0,0.0,3.0,19.0,0.0462630786371391,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,19.0,False,False,True
3899.0,the unique element and is (blue or green),False,55.0,19.0,0.0,4.0,18.0,0.0366388995270199,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,19.0,False,False,True
3900.0,the unique element and is (blue or green),False,56.0,20.0,0.0,1.0,21.0,0.0622710383074718,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,20.0,False,False,True
3901.0,the unique element and is (blue or green),False,57.0,20.0,0.0,6.0,16.0,0.0484825423671964,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,20.0,False,False,True
3902.0,the unique element and is (blue or green),False,58.0,20.0,0.0,0.0,22.0,0.0362908747971459,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,20.0,False,False,True
3903.0,the unique element and is (blue or green),False,59.0,20.0,0.0,1.0,21.0,0.076447285345921,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg94,20.0,False,False,True
3904.0,the unique element and is (blue or green),False,60.0,20.0,0.0,2.0,20.0,0.1982749741404177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,20.0,False,False,True
3905.0,the unique element and is (blue or green),False,61.0,21.0,0.0,2.0,20.0,0.0477757894225305,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg94,21.0,False,False,True
3906.0,the unique element and is (blue or green),False,62.0,21.0,0.0,4.0,18.0,0.0407119097238819,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,21.0,False,False,True
3907.0,the unique element and is (blue or green),False,63.0,21.0,0.0,1.0,21.0,0.0528711213145243,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg94,21.0,False,False,True
3908.0,the unique element and is (blue or green),False,64.0,21.0,0.0,1.0,21.0,0.0342739285187008,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,21.0,False,False,True
3909.0,the unique element and is (blue or green),False,65.0,21.0,0.0,2.0,20.0,0.0430879291519659,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,21.0,False,False,True
3910.0,the unique element and is (blue or green),False,66.0,22.0,0.0,2.0,20.0,0.0706344030290893,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,22.0,False,False,True
3911.0,the unique element and is (blue or green),False,67.0,22.0,0.0,2.0,20.0,0.065507183593354,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,22.0,False,False,True
3912.0,the unique element and is (blue or green),False,68.0,22.0,0.0,0.0,22.0,0.0241213698283218,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,22.0,False,False,True
3913.0,the unique element and is (blue or green),False,69.0,22.0,0.0,3.0,19.0,0.0290925200512219,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,22.0,False,False,True
3914.0,the unique element and is (blue or green),False,70.0,22.0,0.0,0.0,22.0,0.0359609370768794,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg94,22.0,False,False,True
3915.0,the unique element and is (blue or green),False,71.0,23.0,0.0,0.0,22.0,0.029174794944879,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg94,23.0,False,False,True
3916.0,the unique element and is (blue or green),False,72.0,23.0,0.0,0.0,22.0,0.0322287962193286,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,23.0,False,False,True
3917.0,the unique element and is (blue or green),False,73.0,23.0,0.0,4.0,18.0,0.054172930320874,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,23.0,False,False,True
3918.0,the unique element and is (blue or green),False,74.0,23.0,0.0,1.0,21.0,0.0238915606061027,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,23.0,False,False,True
3919.0,the unique element and is (blue or green),False,75.0,24.0,0.0,2.0,20.0,0.0232594469622426,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,24.0,False,False,True
3920.0,the unique element and is (blue or green),False,76.0,24.0,0.0,0.0,22.0,0.0110782681997534,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,24.0,False,False,True
3921.0,the unique element and is (blue or green),False,77.0,24.0,0.0,0.0,22.0,0.0536036166381563,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,24.0,False,False,True
3922.0,the unique element and is (blue or green),False,78.0,24.0,0.0,0.0,22.0,0.0211463031747598,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg94,24.0,False,False,True
3923.0,the unique element and is (blue or green),False,79.0,25.0,1.0,21.0,1.0,0.1563272650653289,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,25.0,True,False,True
3924.0,the unique element and is (blue or green),False,80.0,25.0,0.0,0.0,22.0,0.0404803801558273,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,25.0,False,False,True
4082.0,there is another object of the same shape<br>that is the same color as another different object,False,0.0,1.0,0.0,15.0,11.0,0.4608983285449994,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg75,1.0,False,False,True
4083.0,there is another object of the same shape<br>that is the same color as another different object,False,1.0,1.0,0.0,2.0,24.0,0.4158480799879953,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg75,1.0,False,False,True
4084.0,there is another object of the same shape<br>that is the same color as another different object,False,2.0,2.0,0.0,10.0,16.0,0.1838326600368418,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,2.0,False,False,True
4085.0,there is another object of the same shape<br>that is the same color as another different object,False,3.0,2.0,0.0,7.0,19.0,0.1995994161011367,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg75,2.0,False,False,True
4086.0,there is another object of the same shape<br>that is the same color as another different object,False,4.0,3.0,1.0,17.0,9.0,0.3628990094338178,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg75,3.0,True,False,True
4087.0,there is another object of the same shape<br>that is the same color as another different object,False,5.0,3.0,0.0,11.0,15.0,0.2382054806846554,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg75,3.0,False,False,True
4088.0,there is another object of the same shape<br>that is the same color as another different object,False,6.0,3.0,0.0,4.0,22.0,0.2392092697293719,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg75,3.0,False,False,True
4089.0,there is another object of the same shape<br>that is the same color as another different object,False,7.0,3.0,0.0,4.0,22.0,0.1601781922456666,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,3.0,False,False,True
4090.0,there is another object of the same shape<br>that is the same color as another different object,False,8.0,4.0,1.0,2.0,24.0,0.1186718153329593,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg75,4.0,True,False,True
4091.0,there is another object of the same shape<br>that is the same color as another different object,False,9.0,4.0,1.0,15.0,11.0,0.5399192871535661,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg75,4.0,True,True,True
4092.0,there is another object of the same shape<br>that is the same color as another different object,False,10.0,4.0,1.0,2.0,24.0,0.0609905078824795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,4.0,True,False,True
4093.0,there is another object of the same shape<br>that is the same color as another different object,False,11.0,4.0,0.0,15.0,11.0,0.4289456692553131,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg75,4.0,False,False,True
4094.0,there is another object of the same shape<br>that is the same color as another different object,False,12.0,4.0,1.0,5.0,21.0,0.1254659834667109,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg75,4.0,True,False,True
4095.0,there is another object of the same shape<br>that is the same color as another different object,False,13.0,5.0,1.0,15.0,11.0,0.5680119640263683,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue circle,hg75,5.0,True,True,True
4096.0,there is another object of the same shape<br>that is the same color as another different object,False,14.0,5.0,1.0,17.0,9.0,0.7997946938966152,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small blue circle,hg75,5.0,True,True,True
4097.0,there is another object of the same shape<br>that is the same color as another different object,False,15.0,5.0,0.0,18.0,8.0,0.6190030251873395,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue triangle,hg75,5.0,False,True,True
4098.0,there is another object of the same shape<br>that is the same color as another different object,False,16.0,6.0,0.0,3.0,23.0,0.1844565028993656,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg75,6.0,False,False,True
4099.0,there is another object of the same shape<br>that is the same color as another different object,False,17.0,6.0,0.0,6.0,20.0,0.5311298138793745,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green circle,hg75,6.0,False,True,True
4100.0,there is another object of the same shape<br>that is the same color as another different object,False,18.0,6.0,0.0,8.0,18.0,0.2995552204672549,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue triangle,hg75,6.0,False,False,True
4101.0,there is another object of the same shape<br>that is the same color as another different object,False,19.0,7.0,1.0,8.0,18.0,0.1083493444207306,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium green rectangle,hg75,7.0,True,False,True
4102.0,there is another object of the same shape<br>that is the same color as another different object,False,20.0,7.0,1.0,10.0,16.0,0.0996931216805023,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium yellow rectangle,hg75,7.0,True,False,True
4103.0,there is another object of the same shape<br>that is the same color as another different object,False,21.0,7.0,1.0,11.0,15.0,0.2872260060673852,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",large yellow triangle,hg75,7.0,True,False,True
4104.0,there is another object of the same shape<br>that is the same color as another different object,False,22.0,7.0,1.0,9.0,17.0,0.2832550454140801,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium green triangle,hg75,7.0,True,False,True
4105.0,there is another object of the same shape<br>that is the same color as another different object,False,23.0,8.0,0.0,19.0,7.0,0.4235038289704107,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green circle,hg75,8.0,False,False,True
4106.0,there is another object of the same shape<br>that is the same color as another different object,False,24.0,8.0,0.0,19.0,7.0,0.4635917675180963,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg75,8.0,False,False,True
4107.0,there is another object of the same shape<br>that is the same color as another different object,False,25.0,9.0,0.0,7.0,19.0,0.3327957556418823,"""λx.exists(apply2(same_color,x.o), filter(triangle, x.s))""
",same color as a triangle,"def is_rule(obj):
    return np.any([x.triangle and x.color == obj.color for x in obj.current_set.objs])",large green rectangle,hg75,9.0,False,False,True
4108.0,there is another object of the same shape<br>that is the same color as another different object,False,26.0,9.0,0.0,10.0,16.0,0.2554177655674721,"""λx.exists(apply2(same_color,x.o), filter(triangle, x.s))""
",same color as a triangle,"def is_rule(obj):
    return np.any([x.triangle and x.color == obj.color for x in obj.current_set.objs])",medium green circle,hg75,9.0,False,False,True
4109.0,there is another object of the same shape<br>that is the same color as another different object,False,27.0,10.0,0.0,6.0,19.0,0.2443501794264193,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow rectangle,hg75,10.0,False,False,True
4110.0,there is another object of the same shape<br>that is the same color as another different object,False,28.0,11.0,0.0,4.0,21.0,0.3155829965287466,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg75,11.0,False,False,True
4111.0,there is another object of the same shape<br>that is the same color as another different object,False,29.0,11.0,0.0,6.0,19.0,0.2907887439683918,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg75,11.0,False,False,True
4112.0,there is another object of the same shape<br>that is the same color as another different object,False,30.0,12.0,1.0,12.0,13.0,0.4467008866157584,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,12.0,True,False,True
4113.0,there is another object of the same shape<br>that is the same color as another different object,False,31.0,12.0,1.0,18.0,7.0,0.5545565981100253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg75,12.0,True,True,True
4114.0,there is another object of the same shape<br>that is the same color as another different object,False,32.0,12.0,1.0,9.0,16.0,0.2737643167455417,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg75,12.0,True,False,True
4115.0,there is another object of the same shape<br>that is the same color as another different object,False,33.0,12.0,1.0,13.0,12.0,0.3235112062001235,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg75,12.0,True,False,True
4116.0,there is another object of the same shape<br>that is the same color as another different object,False,34.0,12.0,1.0,13.0,12.0,0.3409505525806935,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg75,12.0,True,False,True
4117.0,there is another object of the same shape<br>that is the same color as another different object,False,35.0,13.0,0.0,3.0,22.0,0.2363333117222055,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large green triangle,hg75,13.0,False,False,True
4118.0,there is another object of the same shape<br>that is the same color as another different object,False,36.0,14.0,0.0,4.0,21.0,0.3739346483193912,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small green rectangle,hg75,14.0,False,False,True
4119.0,there is another object of the same shape<br>that is the same color as another different object,False,37.0,14.0,0.0,9.0,16.0,0.4502023772953407,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small yellow triangle,hg75,14.0,False,False,True
4120.0,there is another object of the same shape<br>that is the same color as another different object,False,38.0,15.0,1.0,16.0,9.0,0.6431217818280857,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small yellow rectangle,hg75,15.0,True,True,True
4121.0,there is another object of the same shape<br>that is the same color as another different object,False,39.0,15.0,0.0,10.0,15.0,0.5393794846543187,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium yellow circle,hg75,15.0,False,True,True
4122.0,there is another object of the same shape<br>that is the same color as another different object,False,40.0,15.0,1.0,16.0,9.0,0.6596068917629054,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium green triangle,hg75,15.0,True,True,True
4123.0,there is another object of the same shape<br>that is the same color as another different object,False,41.0,15.0,1.0,18.0,7.0,0.593117049809166,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large yellow triangle,hg75,15.0,True,True,True
4124.0,there is another object of the same shape<br>that is the same color as another different object,False,42.0,15.0,1.0,17.0,8.0,0.5580549309227081,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large green rectangle,hg75,15.0,True,True,True
4125.0,there is another object of the same shape<br>that is the same color as another different object,False,43.0,16.0,0.0,10.0,15.0,0.2356421622575908,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg75,16.0,False,False,True
4126.0,there is another object of the same shape<br>that is the same color as another different object,False,44.0,17.0,0.0,16.0,9.0,0.6523590841505893,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg75,17.0,False,True,True
4127.0,there is another object of the same shape<br>that is the same color as another different object,False,45.0,17.0,0.0,18.0,7.0,0.6786420626983727,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,17.0,False,True,True
4128.0,there is another object of the same shape<br>that is the same color as another different object,False,46.0,18.0,0.0,4.0,21.0,0.2805681766093357,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small green triangle,hg75,18.0,False,False,True
4129.0,there is another object of the same shape<br>that is the same color as another different object,False,47.0,18.0,0.0,4.0,21.0,0.2511903570481308,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium yellow circle,hg75,18.0,False,False,True
4130.0,there is another object of the same shape<br>that is the same color as another different object,False,48.0,18.0,0.0,5.0,20.0,0.2206282156796533,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium blue rectangle,hg75,18.0,False,False,True
4131.0,there is another object of the same shape<br>that is the same color as another different object,False,49.0,19.0,1.0,18.0,7.0,0.4399466890361054,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium blue rectangle,hg75,19.0,True,False,True
4132.0,there is another object of the same shape<br>that is the same color as another different object,False,50.0,19.0,0.0,11.0,14.0,0.4750687145134407,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large blue circle,hg75,19.0,False,False,True
4133.0,there is another object of the same shape<br>that is the same color as another different object,False,51.0,19.0,1.0,15.0,10.0,0.3419619306191634,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium green triangle,hg75,19.0,True,False,True
4134.0,there is another object of the same shape<br>that is the same color as another different object,False,52.0,19.0,1.0,15.0,10.0,0.4711309889028143,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small blue rectangle,hg75,19.0,True,False,True
4135.0,there is another object of the same shape<br>that is the same color as another different object,False,53.0,19.0,0.0,21.0,4.0,0.5711709339998379,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large blue triangle,hg75,19.0,False,True,True
4136.0,there is another object of the same shape<br>that is the same color as another different object,False,54.0,20.0,1.0,18.0,7.0,0.7496023020662506,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",medium green rectangle,hg75,20.0,True,True,True
4137.0,there is another object of the same shape<br>that is the same color as another different object,False,55.0,20.0,0.0,17.0,8.0,0.7394258016396407,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",small green circle,hg75,20.0,False,True,True
4138.0,there is another object of the same shape<br>that is the same color as another different object,False,56.0,20.0,1.0,13.0,12.0,0.4146632729268731,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",large yellow circle,hg75,20.0,True,False,True
4139.0,there is another object of the same shape<br>that is the same color as another different object,False,57.0,20.0,1.0,18.0,7.0,0.7233065406650212,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",small green rectangle,hg75,20.0,True,True,True
4140.0,there is another object of the same shape<br>that is the same color as another different object,False,58.0,20.0,1.0,17.0,8.0,0.4767659919618836,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",large green rectangle,hg75,20.0,True,False,True
4141.0,there is another object of the same shape<br>that is the same color as another different object,False,59.0,21.0,0.0,16.0,9.0,0.7219683785649522,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg75,21.0,False,True,True
4142.0,there is another object of the same shape<br>that is the same color as another different object,False,60.0,21.0,0.0,8.0,17.0,0.1441924548079214,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg75,21.0,False,False,True
4143.0,there is another object of the same shape<br>that is the same color as another different object,False,61.0,21.0,1.0,20.0,5.0,0.7165816802315703,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg75,21.0,True,True,True
4144.0,there is another object of the same shape<br>that is the same color as another different object,False,62.0,21.0,1.0,16.0,9.0,0.6320224903178087,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg75,21.0,True,True,True
4145.0,there is another object of the same shape<br>that is the same color as another different object,False,63.0,21.0,1.0,16.0,9.0,0.7007510897693692,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green triangle,hg75,21.0,True,True,True
4146.0,there is another object of the same shape<br>that is the same color as another different object,False,64.0,22.0,0.0,3.0,22.0,0.0664854320320955,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg75,22.0,False,False,True
4147.0,there is another object of the same shape<br>that is the same color as another different object,False,65.0,22.0,0.0,6.0,19.0,0.1236901796816027,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow triangle,hg75,22.0,False,False,True
4148.0,there is another object of the same shape<br>that is the same color as another different object,False,66.0,23.0,1.0,20.0,5.0,0.7297524369752182,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg75,23.0,True,True,True
4149.0,there is another object of the same shape<br>that is the same color as another different object,False,67.0,23.0,0.0,4.0,21.0,0.0931999768446303,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue triangle,hg75,23.0,False,False,True
4150.0,there is another object of the same shape<br>that is the same color as another different object,False,68.0,23.0,1.0,16.0,9.0,0.7157028478615075,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,23.0,True,True,True
4151.0,there is another object of the same shape<br>that is the same color as another different object,False,69.0,24.0,0.0,7.0,18.0,0.0756628445353726,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,24.0,False,False,True
4152.0,there is another object of the same shape<br>that is the same color as another different object,False,70.0,25.0,0.0,7.0,18.0,0.1148602450147109,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow circle,hg75,25.0,False,False,True
4153.0,there is another object of the same shape<br>that is the same color as another different object,False,71.0,25.0,0.0,7.0,18.0,0.1148731875949806,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg75,25.0,False,False,True
5153.0,same shape as the unique largest,False,0.0,1.0,1.0,15.0,11.0,0.4955165499829945,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg44,1.0,True,False,True
5154.0,same shape as the unique largest,False,1.0,1.0,0.0,6.0,20.0,0.4684074021306514,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg44,1.0,False,False,True
5155.0,same shape as the unique largest,False,2.0,1.0,1.0,20.0,6.0,0.5037854732393043,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg44,1.0,True,True,True
5156.0,same shape as the unique largest,False,3.0,1.0,0.0,12.0,14.0,0.4794263572961199,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg44,1.0,False,False,True
5157.0,same shape as the unique largest,False,4.0,1.0,1.0,7.0,19.0,0.4100751721916822,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg44,1.0,True,False,True
5158.0,same shape as the unique largest,False,5.0,2.0,0.0,2.0,24.0,0.4804986054058417,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green circle,hg44,2.0,False,False,True
5159.0,same shape as the unique largest,False,6.0,2.0,0.0,1.0,25.0,0.2853589706446655,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green rectangle,hg44,2.0,False,False,True
5160.0,same shape as the unique largest,False,7.0,2.0,0.0,3.0,23.0,0.4571945573870835,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small blue rectangle,hg44,2.0,False,False,True
5161.0,same shape as the unique largest,False,8.0,2.0,1.0,23.0,3.0,0.8491198831029578,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue triangle,hg44,2.0,True,True,True
5162.0,same shape as the unique largest,False,9.0,3.0,0.0,4.0,22.0,0.371210280964533,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large green circle,hg44,3.0,False,False,True
5163.0,same shape as the unique largest,False,10.0,3.0,0.0,23.0,3.0,0.6109858132485897,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large green triangle,hg44,3.0,False,True,True
5164.0,same shape as the unique largest,False,11.0,4.0,1.0,24.0,2.0,0.428763434669122,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium blue triangle,hg44,4.0,True,False,True
5165.0,same shape as the unique largest,False,12.0,5.0,0.0,25.0,1.0,0.4005648538783362,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,5.0,False,False,True
5166.0,same shape as the unique largest,False,13.0,5.0,1.0,0.0,26.0,0.2546809867699267,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green rectangle,hg44,5.0,True,False,True
5167.0,same shape as the unique largest,False,14.0,5.0,0.0,0.0,26.0,0.1733691390038529,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green circle,hg44,5.0,False,False,True
5168.0,same shape as the unique largest,False,15.0,6.0,1.0,8.0,18.0,0.1755994997093921,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow rectangle,hg44,6.0,True,False,True
5169.0,same shape as the unique largest,False,16.0,7.0,0.0,8.0,18.0,0.187244886606436,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green circle,hg44,7.0,False,False,True
5170.0,same shape as the unique largest,False,17.0,7.0,0.0,9.0,17.0,0.5350633084776746,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large blue rectangle,hg44,7.0,False,True,True
5171.0,same shape as the unique largest,False,18.0,8.0,0.0,25.0,1.0,0.4088767789733083,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue triangle,hg44,8.0,False,False,True
5172.0,same shape as the unique largest,False,19.0,8.0,0.0,15.0,11.0,0.3052344479538078,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,8.0,False,False,True
5173.0,same shape as the unique largest,False,20.0,8.0,0.0,4.0,22.0,0.2896175223537511,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small blue circle,hg44,8.0,False,False,True
5174.0,same shape as the unique largest,False,21.0,8.0,0.0,5.0,21.0,0.2554989171931083,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue rectangle,hg44,8.0,False,False,True
5175.0,same shape as the unique largest,False,22.0,9.0,1.0,14.0,12.0,0.0859516644995892,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,9.0,True,False,True
5176.0,same shape as the unique largest,False,23.0,9.0,1.0,20.0,6.0,0.3449419524762334,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,9.0,True,False,True
5177.0,same shape as the unique largest,False,24.0,9.0,1.0,19.0,7.0,0.1012126468440328,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg44,9.0,True,False,True
5178.0,same shape as the unique largest,False,25.0,9.0,0.0,4.0,22.0,0.0747238913257888,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg44,9.0,False,False,True
5179.0,same shape as the unique largest,False,26.0,10.0,0.0,10.0,16.0,0.1283034237814035,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large yellow rectangle,hg44,10.0,False,False,True
5180.0,same shape as the unique largest,False,27.0,10.0,0.0,3.0,23.0,0.1241959922060687,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue circle,hg44,10.0,False,False,True
5181.0,same shape as the unique largest,False,28.0,10.0,0.0,7.0,19.0,0.4024125008982082,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green triangle,hg44,10.0,False,False,True
5182.0,same shape as the unique largest,False,29.0,10.0,0.0,8.0,18.0,0.1591378709920263,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow rectangle,hg44,10.0,False,False,True
5183.0,same shape as the unique largest,False,30.0,11.0,0.0,4.0,21.0,0.0205458330863166,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow rectangle,hg44,11.0,False,False,True
5184.0,same shape as the unique largest,False,31.0,11.0,0.0,3.0,22.0,0.0594715010101936,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue circle,hg44,11.0,False,False,True
5185.0,same shape as the unique largest,False,32.0,11.0,0.0,4.0,21.0,0.1045648183542198,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green triangle,hg44,11.0,False,False,True
5186.0,same shape as the unique largest,False,33.0,11.0,0.0,5.0,20.0,0.0634412552998355,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow circle,hg44,11.0,False,False,True
5187.0,same shape as the unique largest,False,34.0,12.0,1.0,23.0,2.0,0.325154254721383,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue triangle,hg44,12.0,True,False,True
5188.0,same shape as the unique largest,False,35.0,13.0,0.0,2.0,23.0,0.0345911030170782,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large yellow circle,hg44,13.0,False,False,True
5189.0,same shape as the unique largest,False,36.0,13.0,0.0,2.0,23.0,0.0662401934314402,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large green circle,hg44,13.0,False,False,True
5190.0,same shape as the unique largest,False,37.0,13.0,0.0,13.0,12.0,0.1364724350966071,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large yellow triangle,hg44,13.0,False,False,True
5191.0,same shape as the unique largest,False,38.0,14.0,0.0,7.0,18.0,0.1316703598469075,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",small yellow rectangle,hg44,14.0,False,False,True
5192.0,same shape as the unique largest,False,39.0,14.0,1.0,23.0,2.0,0.5967285381999545,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium blue triangle,hg44,14.0,True,True,True
5193.0,same shape as the unique largest,False,40.0,15.0,0.0,8.0,17.0,0.2502919751087802,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow rectangle,hg44,15.0,False,False,True
5194.0,same shape as the unique largest,False,41.0,15.0,0.0,13.0,12.0,0.2835052150114734,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium green rectangle,hg44,15.0,False,False,True
5195.0,same shape as the unique largest,False,42.0,15.0,0.0,2.0,23.0,0.3912901530445651,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium blue circle,hg44,15.0,False,False,True
5196.0,same shape as the unique largest,False,43.0,15.0,0.0,1.0,24.0,0.0683944053095046,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",small green circle,hg44,15.0,False,False,True
5197.0,same shape as the unique largest,False,44.0,16.0,0.0,1.0,24.0,0.0373987913308155,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium green circle,hg44,16.0,False,False,True
5198.0,same shape as the unique largest,False,45.0,16.0,0.0,5.0,20.0,0.0122023324207702,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow rectangle,hg44,16.0,False,False,True
5199.0,same shape as the unique largest,False,46.0,17.0,1.0,3.0,22.0,0.2199626249564517,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue circle,hg44,17.0,True,False,True
5200.0,same shape as the unique largest,False,47.0,17.0,0.0,14.0,11.0,0.1189938110860566,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,17.0,False,False,True
5201.0,same shape as the unique largest,False,48.0,17.0,0.0,5.0,20.0,0.058592054913106,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green rectangle,hg44,17.0,False,False,True
5202.0,same shape as the unique largest,False,49.0,17.0,0.0,14.0,11.0,0.1774440414021683,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium yellow triangle,hg44,17.0,False,False,True
5203.0,same shape as the unique largest,False,50.0,17.0,0.0,2.0,23.0,0.0444499675232918,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green rectangle,hg44,17.0,False,False,True
5204.0,same shape as the unique largest,False,51.0,18.0,0.0,5.0,20.0,0.2323786508904959,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg44,18.0,False,False,True
5205.0,same shape as the unique largest,False,52.0,18.0,1.0,2.0,23.0,0.0433424345389994,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg44,18.0,True,False,True
5206.0,same shape as the unique largest,False,53.0,18.0,0.0,1.0,24.0,0.0146206293735531,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,18.0,False,False,True
5207.0,same shape as the unique largest,False,54.0,18.0,1.0,21.0,4.0,0.5972670812039951,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg44,18.0,True,True,True
5208.0,same shape as the unique largest,False,55.0,19.0,0.0,12.0,13.0,0.3146290435943228,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",medium blue circle,hg44,19.0,False,False,True
5209.0,same shape as the unique largest,False,56.0,19.0,0.0,13.0,12.0,0.1486787431535958,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",large yellow circle,hg44,19.0,False,False,True
5210.0,same shape as the unique largest,False,57.0,19.0,0.0,4.0,21.0,0.0789143009828876,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",small blue rectangle,hg44,19.0,False,False,True
5211.0,same shape as the unique largest,False,58.0,19.0,0.0,4.0,21.0,0.0461558528812702,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",large green rectangle,hg44,19.0,False,False,True
5212.0,same shape as the unique largest,False,59.0,20.0,0.0,12.0,12.0,0.030960871742991,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg44,20.0,False,False,True
5213.0,same shape as the unique largest,False,60.0,20.0,0.0,1.0,23.0,0.0117814240784355,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg44,20.0,False,False,True
5214.0,same shape as the unique largest,False,61.0,20.0,0.0,15.0,9.0,0.3172812787709063,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg44,20.0,False,False,True
5215.0,same shape as the unique largest,False,62.0,21.0,0.0,15.0,9.0,0.0271240338787492,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,21.0,False,False,True
5216.0,same shape as the unique largest,False,63.0,21.0,0.0,4.0,20.0,0.0274998424596333,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,21.0,False,False,True
5217.0,same shape as the unique largest,False,64.0,21.0,0.0,14.0,10.0,0.1286968240627857,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,21.0,False,False,True
5218.0,same shape as the unique largest,False,65.0,21.0,0.0,3.0,21.0,0.0864298639532989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg44,21.0,False,False,True
5219.0,same shape as the unique largest,False,66.0,22.0,0.0,5.0,19.0,0.0376735324159653,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg44,22.0,False,False,True
5220.0,same shape as the unique largest,False,67.0,22.0,0.0,8.0,16.0,0.0399921212649587,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg44,22.0,False,False,True
5221.0,same shape as the unique largest,False,68.0,22.0,0.0,3.0,21.0,0.0429313901328214,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg44,22.0,False,False,True
5222.0,same shape as the unique largest,False,69.0,22.0,0.0,4.0,20.0,0.0352607681768404,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg44,22.0,False,False,True
5223.0,same shape as the unique largest,False,70.0,22.0,0.0,11.0,13.0,0.019725410117303,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg44,22.0,False,False,True
5224.0,same shape as the unique largest,False,71.0,23.0,1.0,9.0,15.0,0.0482262314419585,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,23.0,True,False,True
5225.0,same shape as the unique largest,False,72.0,23.0,1.0,8.0,16.0,0.3796318320946739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,23.0,True,False,True
5226.0,same shape as the unique largest,False,73.0,24.0,0.0,15.0,9.0,0.3201015265763089,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",medium blue triangle,hg44,24.0,False,False,True
5227.0,same shape as the unique largest,False,74.0,24.0,0.0,2.0,22.0,0.094112478741863,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",large yellow rectangle,hg44,24.0,False,False,True
5228.0,same shape as the unique largest,False,75.0,24.0,0.0,1.0,23.0,0.1010275803303102,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",large green rectangle,hg44,24.0,False,False,True
5229.0,same shape as the unique largest,False,76.0,25.0,0.0,1.0,23.0,0.0262169798542117,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,25.0,False,False,True
5230.0,same shape as the unique largest,False,77.0,25.0,1.0,6.0,18.0,0.2609695695315395,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg44,25.0,True,False,True
5599.0,unique largest blue object,False,0.0,1.0,0.0,8.0,17.0,0.4806882153621927,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg55,1.0,False,False,True
5600.0,unique largest blue object,False,1.0,1.0,0.0,14.0,11.0,0.4856571167659922,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg55,1.0,False,False,True
5601.0,unique largest blue object,False,2.0,1.0,0.0,8.0,17.0,0.4491950327561653,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg55,1.0,False,False,True
5602.0,unique largest blue object,False,3.0,1.0,1.0,15.0,10.0,0.5090230274942087,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg55,1.0,True,True,True
5603.0,unique largest blue object,False,4.0,1.0,0.0,11.0,14.0,0.4397586186662465,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg55,1.0,False,False,True
5604.0,unique largest blue object,False,5.0,2.0,1.0,11.0,14.0,0.3686078591628074,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",large blue rectangle,hg55,2.0,True,False,True
5605.0,unique largest blue object,False,6.0,2.0,0.0,16.0,9.0,0.3497490781614942,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small blue triangle,hg55,2.0,False,False,True
5606.0,unique largest blue object,False,7.0,2.0,0.0,5.0,20.0,0.1590176013024802,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small green rectangle,hg55,2.0,False,False,True
5607.0,unique largest blue object,False,8.0,2.0,0.0,5.0,20.0,0.127366441451727,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",large green circle,hg55,2.0,False,False,True
5608.0,unique largest blue object,False,9.0,3.0,0.0,6.0,19.0,0.0587691916952053,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green triangle,hg55,3.0,False,False,True
5609.0,unique largest blue object,False,10.0,3.0,0.0,3.0,22.0,0.1310692763215684,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium yellow triangle,hg55,3.0,False,False,True
5610.0,unique largest blue object,False,11.0,3.0,1.0,7.0,18.0,0.2468827725838309,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue circle,hg55,3.0,True,False,True
5611.0,unique largest blue object,False,12.0,3.0,0.0,4.0,21.0,0.1111132661202418,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium yellow rectangle,hg55,3.0,False,False,True
5612.0,unique largest blue object,False,13.0,4.0,0.0,3.0,22.0,0.2653199954112324,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,4.0,False,False,True
5613.0,unique largest blue object,False,14.0,5.0,0.0,2.0,23.0,0.088751610534814,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg55,5.0,False,False,True
5614.0,unique largest blue object,False,15.0,5.0,0.0,1.0,24.0,0.0605750096556221,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg55,5.0,False,False,True
5615.0,unique largest blue object,False,16.0,6.0,1.0,20.0,5.0,0.4865992711864919,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg55,6.0,True,False,True
5616.0,unique largest blue object,False,17.0,6.0,0.0,0.0,25.0,0.166730719256634,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg55,6.0,False,False,True
5617.0,unique largest blue object,False,18.0,6.0,0.0,3.0,22.0,0.1550436689279877,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,6.0,False,False,True
5618.0,unique largest blue object,False,19.0,6.0,0.0,1.0,24.0,0.0819973265940916,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg55,6.0,False,False,True
5619.0,unique largest blue object,False,20.0,7.0,0.0,0.0,25.0,0.046589563618113,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg55,7.0,False,False,True
5620.0,unique largest blue object,False,21.0,7.0,0.0,1.0,24.0,0.0551701167329383,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg55,7.0,False,False,True
5621.0,unique largest blue object,False,22.0,7.0,0.0,8.0,17.0,0.4771529798558731,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,7.0,False,False,True
5622.0,unique largest blue object,False,23.0,7.0,1.0,24.0,1.0,0.5781560040530849,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg55,7.0,True,True,True
5623.0,unique largest blue object,False,24.0,7.0,0.0,0.0,25.0,0.0218144178971897,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg55,7.0,False,False,True
5624.0,unique largest blue object,False,25.0,8.0,1.0,23.0,2.0,0.7273411248637558,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large blue triangle,hg55,8.0,True,True,True
5625.0,unique largest blue object,False,26.0,8.0,0.0,0.0,25.0,0.0400885735651854,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large green circle,hg55,8.0,False,False,True
5626.0,unique largest blue object,False,27.0,8.0,0.0,2.0,23.0,0.0304275463283829,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green circle,hg55,8.0,False,False,True
5627.0,unique largest blue object,False,28.0,9.0,0.0,2.0,23.0,0.016621467357254,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg55,9.0,False,False,True
5628.0,unique largest blue object,False,29.0,9.0,1.0,18.0,7.0,0.4649772672455583,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,9.0,True,False,True
5629.0,unique largest blue object,False,30.0,9.0,0.0,1.0,24.0,0.0197870622863547,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg55,9.0,False,False,True
5630.0,unique largest blue object,False,31.0,9.0,0.0,1.0,24.0,0.0119189480820978,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg55,9.0,False,False,True
5631.0,unique largest blue object,False,32.0,10.0,0.0,1.0,24.0,0.0038461941617242,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg55,10.0,False,False,True
5632.0,unique largest blue object,False,33.0,10.0,0.0,1.0,24.0,0.0151294964582575,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg55,10.0,False,False,True
5633.0,unique largest blue object,False,34.0,11.0,0.0,11.0,14.0,0.5972807059123397,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg55,11.0,False,True,True
5634.0,unique largest blue object,False,35.0,11.0,0.0,8.0,17.0,0.5448798171789804,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,11.0,False,True,True
5635.0,unique largest blue object,False,36.0,11.0,1.0,23.0,2.0,0.7855500075488635,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg55,11.0,True,True,True
5636.0,unique largest blue object,False,37.0,12.0,1.0,18.0,7.0,0.3059827729229027,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium blue rectangle,hg55,12.0,True,False,True
5637.0,unique largest blue object,False,38.0,13.0,0.0,0.0,24.0,0.0315622033917861,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg55,13.0,False,False,True
5638.0,unique largest blue object,False,39.0,13.0,0.0,0.0,24.0,0.0183539695798344,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg55,13.0,False,False,True
5639.0,unique largest blue object,False,40.0,13.0,0.0,1.0,23.0,0.0426744266759442,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg55,13.0,False,False,True
5640.0,unique largest blue object,False,41.0,14.0,0.0,0.0,24.0,0.0229223630724391,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg55,14.0,False,False,True
5641.0,unique largest blue object,False,42.0,14.0,0.0,0.0,24.0,0.0087907352085494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg55,14.0,False,False,True
5642.0,unique largest blue object,False,43.0,14.0,0.0,0.0,24.0,0.0334383537166331,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg55,14.0,False,False,True
5643.0,unique largest blue object,False,44.0,14.0,0.0,0.0,24.0,0.0232602265922423,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,14.0,False,False,True
5644.0,unique largest blue object,False,45.0,15.0,0.0,0.0,24.0,0.0049269339579041,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,15.0,False,False,True
5645.0,unique largest blue object,False,46.0,15.0,0.0,0.0,24.0,0.0052684184377085,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg55,15.0,False,False,True
5646.0,unique largest blue object,False,47.0,16.0,0.0,0.0,24.0,0.0175733568562463,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg55,16.0,False,False,True
5647.0,unique largest blue object,False,48.0,16.0,0.0,0.0,24.0,0.0353498096696967,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,16.0,False,False,True
5648.0,unique largest blue object,False,49.0,16.0,0.0,0.0,24.0,0.0141106065983649,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg55,16.0,False,False,True
5649.0,unique largest blue object,False,50.0,16.0,0.0,0.0,24.0,0.052588749294955,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg55,16.0,False,False,True
5650.0,unique largest blue object,False,51.0,16.0,0.0,0.0,24.0,0.0177533976492441,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg55,16.0,False,False,True
5651.0,unique largest blue object,False,52.0,17.0,0.0,1.0,23.0,0.026784583249082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg55,17.0,False,False,True
5652.0,unique largest blue object,False,53.0,17.0,0.0,1.0,23.0,0.0114980066865655,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg55,17.0,False,False,True
5653.0,unique largest blue object,False,54.0,17.0,0.0,17.0,7.0,0.4302607583008466,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg55,17.0,False,False,True
5654.0,unique largest blue object,False,55.0,17.0,0.0,16.0,8.0,0.3882314340332868,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg55,17.0,False,False,True
5655.0,unique largest blue object,False,56.0,17.0,0.0,1.0,23.0,0.0080342452840795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg55,17.0,False,False,True
5656.0,unique largest blue object,False,57.0,18.0,0.0,0.0,24.0,0.0539044762977027,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg55,18.0,False,False,True
5657.0,unique largest blue object,False,58.0,19.0,0.0,0.0,24.0,0.0206561319447473,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg55,19.0,False,False,True
5658.0,unique largest blue object,False,59.0,19.0,1.0,17.0,7.0,0.3669394334899607,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg55,19.0,True,False,True
5659.0,unique largest blue object,False,60.0,20.0,1.0,17.0,7.0,0.6268894858386602,"""λx.apply1(compose11(compose8(and,blue),compose2(not,small)),x.o)""
",blue and (not small),"def is_rule(obj):
    return obj.blue and (not obj.small)",medium blue triangle,hg55,20.0,True,True,True
5660.0,unique largest blue object,False,61.0,21.0,0.0,2.0,22.0,0.0255595317366896,"""λx.apply1(compose11(compose8(and,blue),compose2(not,small)),x.o)""
",blue and (not small),"def is_rule(obj):
    return obj.blue and (not obj.small)",large green rectangle,hg55,21.0,False,False,True
5661.0,unique largest blue object,False,62.0,22.0,0.0,0.0,24.0,0.010288282059264,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg55,22.0,False,False,True
5662.0,unique largest blue object,False,63.0,22.0,0.0,0.0,24.0,0.0222761899168517,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg55,22.0,False,False,True
5663.0,unique largest blue object,False,64.0,22.0,0.0,0.0,24.0,0.0104068235467593,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg55,22.0,False,False,True
5664.0,unique largest blue object,False,65.0,22.0,0.0,1.0,23.0,0.0208329409716725,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg55,22.0,False,False,True
5665.0,unique largest blue object,False,66.0,22.0,1.0,21.0,3.0,0.7621070248527531,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg55,22.0,True,True,True
5666.0,unique largest blue object,False,67.0,23.0,0.0,11.0,12.0,0.5424222410858874,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg55,23.0,False,True,True
5667.0,unique largest blue object,False,68.0,23.0,0.0,0.0,23.0,0.0010644123678957,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,23.0,False,False,True
5668.0,unique largest blue object,False,69.0,23.0,0.0,0.0,23.0,0.0015179083164866,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg55,23.0,False,False,True
5669.0,unique largest blue object,False,70.0,23.0,0.0,2.0,21.0,0.0035529867426475,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg55,23.0,False,False,True
5670.0,unique largest blue object,False,71.0,23.0,1.0,21.0,2.0,0.8188677216381848,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg55,23.0,True,True,True
5671.0,unique largest blue object,False,72.0,24.0,0.0,0.0,23.0,0.0031659124186944,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small yellow triangle,hg55,24.0,False,False,True
5672.0,unique largest blue object,False,73.0,24.0,0.0,0.0,23.0,0.0035324947357366,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg55,24.0,False,False,True
5673.0,unique largest blue object,False,74.0,24.0,1.0,21.0,2.0,0.5489769480668656,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium blue triangle,hg55,24.0,True,True,True
5674.0,unique largest blue object,False,75.0,25.0,0.0,1.0,22.0,0.010324265050599,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg55,25.0,False,False,True
5675.0,unique largest blue object,False,76.0,25.0,1.0,19.0,4.0,0.6992352242858715,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,25.0,True,True,True
5676.0,unique largest blue object,False,77.0,25.0,0.0,0.0,23.0,0.0036280533912531,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg55,25.0,False,False,True
6049.0,(same shape as one of the largest) and blue,False,0.0,1.0,0.0,10.0,16.0,0.3564421919421647,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg46,1.0,False,False,True
6050.0,(same shape as one of the largest) and blue,False,1.0,2.0,1.0,10.0,16.0,0.5334409821338113,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg46,2.0,True,True,True
6051.0,(same shape as one of the largest) and blue,False,2.0,2.0,1.0,7.0,19.0,0.36109737056222,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg46,2.0,True,False,True
6052.0,(same shape as one of the largest) and blue,False,3.0,2.0,0.0,6.0,20.0,0.3178205664835332,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg46,2.0,False,False,True
6053.0,(same shape as one of the largest) and blue,False,4.0,2.0,0.0,7.0,19.0,0.3968540863824046,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg46,2.0,False,False,True
6054.0,(same shape as one of the largest) and blue,False,5.0,2.0,0.0,6.0,20.0,0.3585787681397505,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg46,2.0,False,False,True
6055.0,(same shape as one of the largest) and blue,False,6.0,3.0,0.0,2.0,24.0,0.0762562251042027,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg46,3.0,False,False,True
6056.0,(same shape as one of the largest) and blue,False,7.0,3.0,0.0,6.0,20.0,0.0601568562390184,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg46,3.0,False,False,True
6057.0,(same shape as one of the largest) and blue,False,8.0,3.0,0.0,5.0,21.0,0.1099216210603799,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg46,3.0,False,False,True
6058.0,(same shape as one of the largest) and blue,False,9.0,4.0,0.0,2.0,24.0,0.1031439499787438,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg46,4.0,False,False,True
6059.0,(same shape as one of the largest) and blue,False,10.0,4.0,1.0,21.0,5.0,0.5539606381435078,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg46,4.0,True,True,True
6060.0,(same shape as one of the largest) and blue,False,11.0,5.0,0.0,7.0,19.0,0.1688322829077151,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,5.0,False,False,True
6061.0,(same shape as one of the largest) and blue,False,12.0,5.0,0.0,4.0,22.0,0.321651551777677,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg46,5.0,False,False,True
6062.0,(same shape as one of the largest) and blue,False,13.0,6.0,0.0,3.0,23.0,0.209870571187821,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,6.0,False,False,True
6063.0,(same shape as one of the largest) and blue,False,14.0,6.0,0.0,4.0,22.0,0.0594127348548454,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,6.0,False,False,True
6064.0,(same shape as one of the largest) and blue,False,15.0,6.0,1.0,22.0,4.0,0.6509973990991966,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,6.0,True,True,True
6065.0,(same shape as one of the largest) and blue,False,16.0,6.0,0.0,6.0,20.0,0.1673435498981916,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,6.0,False,False,True
6066.0,(same shape as one of the largest) and blue,False,17.0,6.0,0.0,5.0,21.0,0.165329744228643,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,6.0,False,False,True
6067.0,(same shape as one of the largest) and blue,False,18.0,7.0,0.0,4.0,22.0,0.019786494233017,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,7.0,False,False,True
6068.0,(same shape as one of the largest) and blue,False,19.0,7.0,0.0,1.0,25.0,0.0176105319872021,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg46,7.0,False,False,True
6069.0,(same shape as one of the largest) and blue,False,20.0,7.0,0.0,3.0,23.0,0.0322962956051924,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg46,7.0,False,False,True
6070.0,(same shape as one of the largest) and blue,False,21.0,7.0,0.0,3.0,23.0,0.0316824244257532,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,7.0,False,False,True
6071.0,(same shape as one of the largest) and blue,False,22.0,7.0,0.0,2.0,24.0,0.0364806139751863,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg46,7.0,False,False,True
6072.0,(same shape as one of the largest) and blue,False,23.0,8.0,1.0,21.0,5.0,0.7224375652446042,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,8.0,True,True,True
6073.0,(same shape as one of the largest) and blue,False,24.0,8.0,0.0,2.0,24.0,0.0332295597423808,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,8.0,False,False,True
6074.0,(same shape as one of the largest) and blue,False,25.0,8.0,0.0,1.0,25.0,0.0385553813443948,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg46,8.0,False,False,True
6075.0,(same shape as one of the largest) and blue,False,26.0,8.0,1.0,18.0,8.0,0.5723156445392306,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg46,8.0,True,True,True
6076.0,(same shape as one of the largest) and blue,False,27.0,8.0,0.0,2.0,24.0,0.0342574857905901,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,8.0,False,False,True
6077.0,(same shape as one of the largest) and blue,False,28.0,9.0,1.0,26.0,0.0,0.9149355940304532,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,9.0,True,True,True
6078.0,(same shape as one of the largest) and blue,False,29.0,9.0,0.0,22.0,4.0,0.8721156178130514,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg46,9.0,False,True,True
6079.0,(same shape as one of the largest) and blue,False,30.0,9.0,0.0,0.0,26.0,0.0070089281692844,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,9.0,False,False,True
6080.0,(same shape as one of the largest) and blue,False,31.0,9.0,1.0,22.0,4.0,0.9118660575475132,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg46,9.0,True,True,True
6081.0,(same shape as one of the largest) and blue,False,32.0,9.0,0.0,24.0,2.0,0.8767735167158435,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg46,9.0,False,True,True
6082.0,(same shape as one of the largest) and blue,False,33.0,10.0,0.0,3.0,23.0,0.0089695499311801,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg46,10.0,False,False,True
6083.0,(same shape as one of the largest) and blue,False,34.0,10.0,0.0,2.0,24.0,0.0124185269569352,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg46,10.0,False,False,True
6084.0,(same shape as one of the largest) and blue,False,35.0,10.0,1.0,21.0,5.0,0.4665759534427707,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,10.0,True,False,True
6085.0,(same shape as one of the largest) and blue,False,36.0,11.0,0.0,1.0,25.0,0.0267484085812839,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,11.0,False,False,True
6086.0,(same shape as one of the largest) and blue,False,37.0,11.0,0.0,0.0,26.0,0.0049831428648303,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,11.0,False,False,True
6087.0,(same shape as one of the largest) and blue,False,38.0,12.0,1.0,26.0,0.0,0.7963457986754747,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,12.0,True,True,True
6088.0,(same shape as one of the largest) and blue,False,39.0,12.0,0.0,2.0,24.0,0.0149265145981871,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,12.0,False,False,True
6089.0,(same shape as one of the largest) and blue,False,40.0,13.0,1.0,22.0,4.0,0.8900398685204891,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,13.0,True,True,True
6090.0,(same shape as one of the largest) and blue,False,41.0,13.0,0.0,0.0,26.0,0.0205770110729872,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,13.0,False,False,True
6091.0,(same shape as one of the largest) and blue,False,42.0,13.0,1.0,22.0,4.0,0.8685520565056777,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg46,13.0,True,True,True
6092.0,(same shape as one of the largest) and blue,False,43.0,13.0,0.0,0.0,26.0,0.0127573600182131,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg46,13.0,False,False,True
6093.0,(same shape as one of the largest) and blue,False,44.0,13.0,0.0,1.0,25.0,0.0138213431437179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg46,13.0,False,False,True
6094.0,(same shape as one of the largest) and blue,False,45.0,14.0,0.0,1.0,25.0,0.012874694828497,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,14.0,False,False,True
6095.0,(same shape as one of the largest) and blue,False,46.0,14.0,0.0,0.0,26.0,0.0015196783792816,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg46,14.0,False,False,True
6096.0,(same shape as one of the largest) and blue,False,47.0,15.0,1.0,26.0,0.0,0.8165217364168029,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg46,15.0,True,True,True
6097.0,(same shape as one of the largest) and blue,False,48.0,15.0,0.0,1.0,25.0,0.0065909807268553,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,15.0,False,False,True
6098.0,(same shape as one of the largest) and blue,False,49.0,15.0,0.0,0.0,26.0,0.0042195873537593,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,15.0,False,False,True
6099.0,(same shape as one of the largest) and blue,False,50.0,15.0,0.0,1.0,25.0,0.0034583505577074,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,15.0,False,False,True
6100.0,(same shape as one of the largest) and blue,False,51.0,16.0,1.0,23.0,3.0,0.90989482471241,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,16.0,True,True,True
6101.0,(same shape as one of the largest) and blue,False,52.0,16.0,0.0,0.0,26.0,0.0111231463349668,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,16.0,False,False,True
6102.0,(same shape as one of the largest) and blue,False,53.0,16.0,0.0,0.0,26.0,0.0021883273601588,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,16.0,False,False,True
6103.0,(same shape as one of the largest) and blue,False,54.0,16.0,1.0,26.0,0.0,0.917219263525908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,16.0,True,True,True
6104.0,(same shape as one of the largest) and blue,False,55.0,17.0,1.0,25.0,1.0,0.9630498812051655,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,17.0,True,True,True
6105.0,(same shape as one of the largest) and blue,False,56.0,18.0,1.0,26.0,0.0,0.9693713718945672,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,18.0,True,True,True
6106.0,(same shape as one of the largest) and blue,False,57.0,18.0,1.0,26.0,0.0,0.9851925637863131,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,18.0,True,True,True
6107.0,(same shape as one of the largest) and blue,False,58.0,19.0,0.0,0.0,26.0,0.0037694381385335,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,19.0,False,False,True
6108.0,(same shape as one of the largest) and blue,False,59.0,19.0,0.0,2.0,24.0,0.0040003407532367,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,19.0,False,False,True
6109.0,(same shape as one of the largest) and blue,False,60.0,19.0,0.0,1.0,25.0,0.0077893532383086,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,19.0,False,False,True
6110.0,(same shape as one of the largest) and blue,False,61.0,19.0,0.0,1.0,25.0,0.017894400479804,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg46,19.0,False,False,True
6111.0,(same shape as one of the largest) and blue,False,62.0,20.0,0.0,0.0,26.0,0.0058773517290546,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg46,20.0,False,False,True
6112.0,(same shape as one of the largest) and blue,False,63.0,20.0,1.0,26.0,0.0,0.9861774887585852,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,20.0,True,True,True
6113.0,(same shape as one of the largest) and blue,False,64.0,20.0,1.0,22.0,4.0,0.9743822995887969,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,20.0,True,True,True
6114.0,(same shape as one of the largest) and blue,False,65.0,20.0,1.0,25.0,1.0,0.982231969612826,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,20.0,True,True,True
6115.0,(same shape as one of the largest) and blue,False,66.0,21.0,0.0,0.0,26.0,0.0008874585355442,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,21.0,False,False,True
6116.0,(same shape as one of the largest) and blue,False,67.0,22.0,0.0,0.0,26.0,0.0153728699649491,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,22.0,False,False,True
6117.0,(same shape as one of the largest) and blue,False,68.0,22.0,0.0,0.0,26.0,0.0056571653517494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,22.0,False,False,True
6118.0,(same shape as one of the largest) and blue,False,69.0,22.0,0.0,0.0,26.0,0.0048273854939679,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg46,22.0,False,False,True
6119.0,(same shape as one of the largest) and blue,False,70.0,22.0,0.0,0.0,26.0,0.0077855216960642,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg46,22.0,False,False,True
6120.0,(same shape as one of the largest) and blue,False,71.0,22.0,1.0,25.0,1.0,0.995212625838576,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,22.0,True,True,True
6121.0,(same shape as one of the largest) and blue,False,72.0,23.0,0.0,0.0,26.0,0.0049829255739268,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg46,23.0,False,False,True
6122.0,(same shape as one of the largest) and blue,False,73.0,23.0,0.0,0.0,26.0,0.0002177642701326,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,23.0,False,False,True
6123.0,(same shape as one of the largest) and blue,False,74.0,23.0,0.0,0.0,26.0,0.000429630221447,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,23.0,False,False,True
6124.0,(same shape as one of the largest) and blue,False,75.0,23.0,1.0,26.0,0.0,0.997503409935348,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,23.0,True,True,True
6125.0,(same shape as one of the largest) and blue,False,76.0,23.0,0.0,26.0,0.0,0.9700415205053332,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,23.0,False,True,True
6126.0,(same shape as one of the largest) and blue,False,77.0,24.0,0.0,15.0,11.0,0.85035803423375,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,24.0,False,True,True
6127.0,(same shape as one of the largest) and blue,False,78.0,24.0,0.0,16.0,10.0,0.7835075901965638,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg46,24.0,False,True,True
6128.0,(same shape as one of the largest) and blue,False,79.0,24.0,1.0,26.0,0.0,0.9969478597292892,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,24.0,True,True,True
6129.0,(same shape as one of the largest) and blue,False,80.0,24.0,0.0,0.0,26.0,0.0021768819806311,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,24.0,False,False,True
6130.0,(same shape as one of the largest) and blue,False,81.0,25.0,0.0,1.0,25.0,0.0019442374336904,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg46,25.0,False,False,True
6131.0,(same shape as one of the largest) and blue,False,82.0,25.0,0.0,11.0,15.0,0.2722192116915494,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue circle,hg46,25.0,False,False,True
6132.0,(same shape as one of the largest) and blue,False,83.0,25.0,0.0,1.0,25.0,0.0009976533807503,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green triangle,hg46,25.0,False,False,True
6133.0,(same shape as one of the largest) and blue,False,84.0,25.0,0.0,10.0,16.0,0.269158454830972,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue triangle,hg46,25.0,False,False,True
6134.0,(same shape as one of the largest) and blue,False,85.0,25.0,0.0,1.0,25.0,0.0012110208870126,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small yellow rectangle,hg46,25.0,False,False,True
6290.0,there is another object of the same shape and another object of the same color,False,0.0,1.0,0.0,4.0,17.0,0.4796923432645599,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg73,1.0,False,False,True
6291.0,there is another object of the same shape and another object of the same color,False,1.0,1.0,0.0,5.0,16.0,0.4584272152180801,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg73,1.0,False,False,True
6292.0,there is another object of the same shape and another object of the same color,False,2.0,1.0,1.0,15.0,6.0,0.4431425766891834,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg73,1.0,True,False,True
6293.0,there is another object of the same shape and another object of the same color,False,3.0,1.0,0.0,6.0,15.0,0.4183692236009619,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg73,1.0,False,False,True
6294.0,there is another object of the same shape and another object of the same color,False,4.0,1.0,0.0,11.0,10.0,0.4798510823923152,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg73,1.0,False,False,True
6295.0,there is another object of the same shape and another object of the same color,False,5.0,2.0,0.0,11.0,10.0,0.2543072843345726,"""λx.apply1(compose11(compose7(and,yellow),large),x.o)""
",yellow and large,"def is_rule(obj):
    return obj.yellow and obj.large",large green rectangle,hg73,2.0,False,False,True
6296.0,there is another object of the same shape and another object of the same color,False,6.0,2.0,0.0,1.0,20.0,0.2862232903614767,"""λx.apply1(compose11(compose7(and,yellow),large),x.o)""
",yellow and large,"def is_rule(obj):
    return obj.yellow and obj.large",small blue circle,hg73,2.0,False,False,True
6297.0,there is another object of the same shape and another object of the same color,False,7.0,3.0,0.0,6.0,15.0,0.1698722959924907,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg73,3.0,False,False,True
6298.0,there is another object of the same shape and another object of the same color,False,8.0,3.0,0.0,3.0,18.0,0.2053238839243931,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg73,3.0,False,False,True
6299.0,there is another object of the same shape and another object of the same color,False,9.0,3.0,1.0,1.0,20.0,0.2064752914981227,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg73,3.0,True,False,True
6300.0,there is another object of the same shape and another object of the same color,False,10.0,3.0,0.0,6.0,15.0,0.2254916806609799,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg73,3.0,False,False,True
6301.0,there is another object of the same shape and another object of the same color,False,11.0,3.0,1.0,3.0,18.0,0.214425662783583,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg73,3.0,True,False,True
6302.0,there is another object of the same shape and another object of the same color,False,12.0,4.0,0.0,8.0,13.0,0.1562569349723617,"""λx.apply1(compose11(compose8(and,triangle),medium),x.o)""
",triangle and medium,"def is_rule(obj):
    return obj.triangle and obj.medium",medium yellow circle,hg73,4.0,False,False,True
6303.0,there is another object of the same shape and another object of the same color,False,13.0,4.0,0.0,7.0,14.0,0.1504707636257762,"""λx.apply1(compose11(compose8(and,triangle),medium),x.o)""
",triangle and medium,"def is_rule(obj):
    return obj.triangle and obj.medium",large blue rectangle,hg73,4.0,False,False,True
6304.0,there is another object of the same shape and another object of the same color,False,14.0,5.0,0.0,9.0,12.0,0.1066601817095715,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg73,5.0,False,False,True
6305.0,there is another object of the same shape and another object of the same color,False,15.0,6.0,0.0,1.0,20.0,0.1862669409805448,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg73,6.0,False,False,True
6306.0,there is another object of the same shape and another object of the same color,False,16.0,7.0,1.0,6.0,15.0,0.1881276236508711,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg73,7.0,True,False,True
6307.0,there is another object of the same shape and another object of the same color,False,17.0,7.0,0.0,3.0,18.0,0.1456616260027203,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg73,7.0,False,False,True
6308.0,there is another object of the same shape and another object of the same color,False,18.0,7.0,0.0,1.0,20.0,0.2039774382575387,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg73,7.0,False,False,True
6309.0,there is another object of the same shape and another object of the same color,False,19.0,7.0,1.0,18.0,3.0,0.1546950973795446,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg73,7.0,True,False,True
6310.0,there is another object of the same shape and another object of the same color,False,20.0,8.0,0.0,8.0,13.0,0.4534278620122904,"""λx.exists(apply3(size-gt,x.o), filter(apply2(same_color,x.o), x.s))""
",larger than an object of the same color,"def is_rule(obj):
    return np.any([(x.color == obj.color) and (obj.size_num > x.size_num) for x in obj.current_set.objs])",large blue circle,hg73,8.0,False,False,True
6311.0,there is another object of the same shape and another object of the same color,False,21.0,8.0,0.0,6.0,15.0,0.1484879785068642,"""λx.exists(apply3(size-gt,x.o), filter(apply2(same_color,x.o), x.s))""
",larger than an object of the same color,"def is_rule(obj):
    return np.any([(x.color == obj.color) and (obj.size_num > x.size_num) for x in obj.current_set.objs])",medium blue triangle,hg73,8.0,False,False,True
6312.0,there is another object of the same shape and another object of the same color,False,22.0,9.0,1.0,7.0,14.0,0.1604145192437727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg73,9.0,True,False,True
6313.0,there is another object of the same shape and another object of the same color,False,23.0,9.0,0.0,4.0,17.0,0.1745195660060972,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg73,9.0,False,False,True
6314.0,there is another object of the same shape and another object of the same color,False,24.0,9.0,1.0,13.0,8.0,0.353869844313067,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg73,9.0,True,False,True
6315.0,there is another object of the same shape and another object of the same color,False,25.0,9.0,1.0,5.0,16.0,0.2114000774556643,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg73,9.0,True,False,True
6316.0,there is another object of the same shape and another object of the same color,False,26.0,10.0,0.0,3.0,18.0,0.1644809318040643,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large green circle,hg73,10.0,False,False,True
6317.0,there is another object of the same shape and another object of the same color,False,27.0,10.0,1.0,13.0,8.0,0.2186197413782338,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium yellow circle,hg73,10.0,True,False,True
6318.0,there is another object of the same shape and another object of the same color,False,28.0,10.0,0.0,16.0,5.0,0.537040785003569,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large yellow triangle,hg73,10.0,False,True,True
6319.0,there is another object of the same shape and another object of the same color,False,29.0,11.0,1.0,14.0,7.0,0.4172956147054947,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large blue rectangle,hg73,11.0,True,False,True
6320.0,there is another object of the same shape and another object of the same color,False,30.0,11.0,0.0,5.0,16.0,0.1030862824405858,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large green triangle,hg73,11.0,False,False,True
6321.0,there is another object of the same shape and another object of the same color,False,31.0,11.0,1.0,8.0,13.0,0.4479499542794656,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",small blue rectangle,hg73,11.0,True,False,True
6322.0,there is another object of the same shape and another object of the same color,False,32.0,11.0,0.0,12.0,9.0,0.5045478098451213,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium yellow rectangle,hg73,11.0,False,True,True
6323.0,there is another object of the same shape and another object of the same color,False,33.0,11.0,0.0,3.0,18.0,0.2441347650187708,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium green circle,hg73,11.0,False,False,True
6324.0,there is another object of the same shape and another object of the same color,False,34.0,12.0,0.0,8.0,13.0,0.1246337801319441,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow triangle,hg73,12.0,False,False,True
6325.0,there is another object of the same shape and another object of the same color,False,35.0,12.0,0.0,9.0,12.0,0.14758224935224,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow rectangle,hg73,12.0,False,False,True
6326.0,there is another object of the same shape and another object of the same color,False,36.0,13.0,0.0,7.0,14.0,0.2354576542459199,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,13.0,False,False,True
6327.0,there is another object of the same shape and another object of the same color,False,37.0,13.0,1.0,14.0,7.0,0.1342338906399618,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow circle,hg73,13.0,True,False,True
6328.0,there is another object of the same shape and another object of the same color,False,38.0,13.0,0.0,7.0,14.0,0.041578290500297,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow rectangle,hg73,13.0,False,False,True
6329.0,there is another object of the same shape and another object of the same color,False,39.0,14.0,0.0,7.0,14.0,0.1786901796618849,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,14.0,False,False,True
6330.0,there is another object of the same shape and another object of the same color,False,40.0,14.0,1.0,7.0,14.0,0.3613955892448075,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",small green rectangle,hg73,14.0,True,False,True
6331.0,there is another object of the same shape and another object of the same color,False,41.0,14.0,1.0,10.0,11.0,0.3418933722981592,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large green rectangle,hg73,14.0,True,False,True
6332.0,there is another object of the same shape and another object of the same color,False,42.0,14.0,1.0,12.0,9.0,0.4883984567547941,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",small blue rectangle,hg73,14.0,True,False,True
6333.0,there is another object of the same shape and another object of the same color,False,43.0,15.0,0.0,12.0,9.0,0.0665102603430796,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow circle,hg73,15.0,False,False,True
6334.0,there is another object of the same shape and another object of the same color,False,44.0,15.0,0.0,9.0,12.0,0.4832657209113904,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow rectangle,hg73,15.0,False,False,True
6335.0,there is another object of the same shape and another object of the same color,False,45.0,16.0,0.0,3.0,18.0,0.0632530643730433,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow triangle,hg73,16.0,False,False,True
6336.0,there is another object of the same shape and another object of the same color,False,46.0,16.0,0.0,6.0,15.0,0.1042468502589599,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium blue rectangle,hg73,16.0,False,False,True
6337.0,there is another object of the same shape and another object of the same color,False,47.0,16.0,1.0,12.0,9.0,0.3403347481223591,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow circle,hg73,16.0,True,False,True
6338.0,there is another object of the same shape and another object of the same color,False,48.0,16.0,1.0,14.0,7.0,0.2599974090809382,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,16.0,True,False,True
6339.0,there is another object of the same shape and another object of the same color,False,49.0,17.0,0.0,5.0,16.0,0.1187930192168096,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg73,17.0,False,False,True
6340.0,there is another object of the same shape and another object of the same color,False,50.0,17.0,0.0,3.0,18.0,0.0424815457752174,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue triangle,hg73,17.0,False,False,True
6341.0,there is another object of the same shape and another object of the same color,False,51.0,18.0,0.0,2.0,19.0,0.0383319233496877,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg73,18.0,False,False,True
6342.0,there is another object of the same shape and another object of the same color,False,52.0,19.0,1.0,16.0,5.0,0.4700172955599555,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg73,19.0,True,False,True
6343.0,there is another object of the same shape and another object of the same color,False,53.0,19.0,1.0,14.0,7.0,0.5000228152589443,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg73,19.0,True,True,True
6344.0,there is another object of the same shape and another object of the same color,False,54.0,19.0,1.0,13.0,8.0,0.456943802081696,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg73,19.0,True,False,True
6345.0,there is another object of the same shape and another object of the same color,False,55.0,19.0,1.0,19.0,2.0,0.4567605409969246,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg73,19.0,True,False,True
6346.0,there is another object of the same shape and another object of the same color,False,56.0,19.0,0.0,14.0,7.0,0.465217499654841,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg73,19.0,False,False,True
6347.0,there is another object of the same shape and another object of the same color,False,57.0,20.0,0.0,4.0,17.0,0.0316041576817269,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue circle,hg73,20.0,False,False,True
6348.0,there is another object of the same shape and another object of the same color,False,58.0,20.0,1.0,17.0,4.0,0.6465536556642064,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue rectangle,hg73,20.0,True,True,True
6349.0,there is another object of the same shape and another object of the same color,False,59.0,20.0,0.0,5.0,16.0,0.0453264817438139,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg73,20.0,False,False,True
6350.0,there is another object of the same shape and another object of the same color,False,60.0,20.0,1.0,16.0,5.0,0.8441809785783789,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg73,20.0,True,True,True
6351.0,there is another object of the same shape and another object of the same color,False,61.0,21.0,1.0,15.0,6.0,0.4603785944990477,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg73,21.0,True,False,True
6352.0,there is another object of the same shape and another object of the same color,False,62.0,21.0,1.0,16.0,5.0,0.4433364220808471,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg73,21.0,True,False,True
6353.0,there is another object of the same shape and another object of the same color,False,63.0,22.0,0.0,14.0,7.0,0.8420188263503405,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow triangle,hg73,22.0,False,True,True
6354.0,there is another object of the same shape and another object of the same color,False,64.0,22.0,0.0,11.0,10.0,0.8497213590840147,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg73,22.0,False,True,True
6355.0,there is another object of the same shape and another object of the same color,False,65.0,23.0,0.0,5.0,16.0,0.1141215947553746,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg73,23.0,False,False,True
6356.0,there is another object of the same shape and another object of the same color,False,66.0,23.0,1.0,14.0,7.0,0.4102100145036047,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg73,23.0,True,False,True
6357.0,there is another object of the same shape and another object of the same color,False,67.0,23.0,0.0,7.0,14.0,0.5729039657925341,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg73,23.0,False,True,True
6358.0,there is another object of the same shape and another object of the same color,False,68.0,23.0,0.0,6.0,15.0,0.1274984570975448,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg73,23.0,False,False,True
6359.0,there is another object of the same shape and another object of the same color,False,69.0,24.0,0.0,4.0,17.0,0.068888926930299,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large blue circle,hg73,24.0,False,False,True
6360.0,there is another object of the same shape and another object of the same color,False,70.0,25.0,0.0,6.0,15.0,0.0761447472077634,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow circle,hg73,25.0,False,False,True
6361.0,there is another object of the same shape and another object of the same color,False,71.0,25.0,0.0,3.0,18.0,0.0608304069386349,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small yellow triangle,hg73,25.0,False,False,True
6362.0,same shape as a blue object,False,0.0,1.0,0.0,11.0,9.0,0.4876674154086231,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg87,1.0,False,False,True
6363.0,same shape as a blue object,False,1.0,1.0,0.0,8.0,12.0,0.3911391170893239,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg87,1.0,False,False,True
6364.0,same shape as a blue object,False,2.0,1.0,0.0,10.0,10.0,0.4638930062770896,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg87,1.0,False,False,True
6365.0,same shape as a blue object,False,3.0,1.0,1.0,7.0,13.0,0.4907401597936314,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg87,1.0,True,False,True
6366.0,same shape as a blue object,False,4.0,1.0,0.0,10.0,10.0,0.4784632751084245,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg87,1.0,False,False,True
6367.0,same shape as a blue object,False,5.0,2.0,1.0,17.0,3.0,0.6129783209612469,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small blue rectangle,hg87,2.0,True,True,True
6368.0,same shape as a blue object,False,6.0,2.0,1.0,10.0,10.0,0.2796922508752004,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green rectangle,hg87,2.0,True,False,True
6369.0,same shape as a blue object,False,7.0,2.0,0.0,0.0,20.0,0.0701743356220276,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow triangle,hg87,2.0,False,False,True
6370.0,same shape as a blue object,False,8.0,2.0,0.0,0.0,20.0,0.0894444842764414,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green triangle,hg87,2.0,False,False,True
6371.0,same shape as a blue object,False,9.0,3.0,0.0,19.0,1.0,0.6066102525281849,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green rectangle,hg87,3.0,False,True,True
6372.0,same shape as a blue object,False,10.0,3.0,1.0,2.0,18.0,0.4628592070016566,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium blue circle,hg87,3.0,True,False,True
6373.0,same shape as a blue object,False,11.0,4.0,0.0,3.0,17.0,0.201459317544618,"""λx.apply1(compose11(compose8(compose6(and,not),green),triangle),x.o)""
",not green and not triangle,"def is_rule(obj):
    return (not obj.green) and (not obj.triangle)",medium yellow rectangle,hg87,4.0,False,False,True
6374.0,same shape as a blue object,False,12.0,4.0,1.0,16.0,4.0,0.771809431228462,"""λx.apply1(compose11(compose8(compose6(and,not),green),triangle),x.o)""
",not green and not triangle,"def is_rule(obj):
    return (not obj.green) and (not obj.triangle)",large blue circle,hg87,4.0,True,True,True
6375.0,same shape as a blue object,False,13.0,5.0,0.0,5.0,15.0,0.23148372102753,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,5.0,False,False,True
6376.0,same shape as a blue object,False,14.0,5.0,0.0,3.0,17.0,0.1748474795374477,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,5.0,False,False,True
6377.0,same shape as a blue object,False,15.0,5.0,1.0,13.0,7.0,0.7215380511100875,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,5.0,True,True,True
6378.0,same shape as a blue object,False,16.0,6.0,1.0,19.0,1.0,0.8533745005879609,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg87,6.0,True,True,True
6379.0,same shape as a blue object,False,17.0,6.0,1.0,4.0,16.0,0.0796788067068519,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,6.0,True,False,True
6380.0,same shape as a blue object,False,18.0,6.0,0.0,3.0,17.0,0.094161042696669,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg87,6.0,False,False,True
6381.0,same shape as a blue object,False,19.0,7.0,0.0,0.0,20.0,0.0539879765809701,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green circle,hg87,7.0,False,False,True
6382.0,same shape as a blue object,False,20.0,7.0,0.0,5.0,15.0,0.1720434489579929,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green rectangle,hg87,7.0,False,False,True
6383.0,same shape as a blue object,False,21.0,7.0,0.0,1.0,19.0,0.1869212905210133,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium yellow circle,hg87,7.0,False,False,True
6384.0,same shape as a blue object,False,22.0,7.0,0.0,1.0,19.0,0.1281718381167138,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small green triangle,hg87,7.0,False,False,True
6385.0,same shape as a blue object,False,23.0,7.0,0.0,4.0,16.0,0.333037475555443,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large yellow rectangle,hg87,7.0,False,False,True
6386.0,same shape as a blue object,False,24.0,8.0,1.0,20.0,0.0,0.7306287965390084,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,8.0,True,True,True
6387.0,same shape as a blue object,False,25.0,8.0,1.0,13.0,7.0,0.0734204593537697,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,8.0,True,False,True
6388.0,same shape as a blue object,False,26.0,8.0,1.0,18.0,2.0,0.705636222234375,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,8.0,True,True,True
6389.0,same shape as a blue object,False,27.0,8.0,1.0,15.0,5.0,0.7844656201924636,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg87,8.0,True,True,True
6390.0,same shape as a blue object,False,28.0,9.0,0.0,4.0,16.0,0.1185474472829355,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green rectangle,hg87,9.0,False,False,True
6391.0,same shape as a blue object,False,29.0,10.0,0.0,1.0,19.0,0.0772937466634857,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,10.0,False,False,True
6392.0,same shape as a blue object,False,30.0,11.0,0.0,1.0,18.0,0.056360435352758,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,11.0,False,False,True
6393.0,same shape as a blue object,False,31.0,11.0,0.0,1.0,18.0,0.1513909034206335,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg87,11.0,False,False,True
6394.0,same shape as a blue object,False,32.0,12.0,0.0,4.0,15.0,0.1000117052302584,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,12.0,False,False,True
6395.0,same shape as a blue object,False,33.0,12.0,0.0,0.0,19.0,0.0233346967677334,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,12.0,False,False,True
6396.0,same shape as a blue object,False,34.0,13.0,0.0,3.0,16.0,0.0416752995085971,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg87,13.0,False,False,True
6397.0,same shape as a blue object,False,35.0,13.0,1.0,8.0,11.0,0.0660942719705417,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,13.0,True,False,True
6398.0,same shape as a blue object,False,36.0,13.0,0.0,1.0,18.0,0.085188709183285,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,13.0,False,False,True
6399.0,same shape as a blue object,False,37.0,13.0,0.0,0.0,19.0,0.0624290382817207,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,13.0,False,False,True
6400.0,same shape as a blue object,False,38.0,13.0,1.0,18.0,1.0,0.7957433192297003,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg87,13.0,True,True,True
6401.0,same shape as a blue object,False,39.0,14.0,0.0,1.0,18.0,0.0059482409134261,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,14.0,False,False,True
6402.0,same shape as a blue object,False,40.0,14.0,0.0,3.0,16.0,0.0881531131560677,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,14.0,False,False,True
6403.0,same shape as a blue object,False,41.0,14.0,0.0,1.0,18.0,0.008696455165932,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,14.0,False,False,True
6404.0,same shape as a blue object,False,42.0,15.0,0.0,0.0,19.0,0.0493745353327312,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg87,15.0,False,False,True
6405.0,same shape as a blue object,False,43.0,15.0,0.0,0.0,19.0,0.0338827857423211,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,15.0,False,False,True
6406.0,same shape as a blue object,False,44.0,15.0,0.0,1.0,18.0,0.0481117474522534,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,15.0,False,False,True
6407.0,same shape as a blue object,False,45.0,15.0,1.0,15.0,4.0,0.8682605879630501,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg87,15.0,True,True,True
6408.0,same shape as a blue object,False,46.0,15.0,0.0,0.0,19.0,0.0664779953152674,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg87,15.0,False,False,True
6409.0,same shape as a blue object,False,47.0,16.0,0.0,0.0,19.0,0.004955965196018,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,16.0,False,False,True
6410.0,same shape as a blue object,False,48.0,16.0,1.0,13.0,6.0,0.0696550901468526,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,16.0,True,False,True
6411.0,same shape as a blue object,False,49.0,16.0,1.0,17.0,2.0,0.8719181690598816,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,16.0,True,True,True
6412.0,same shape as a blue object,False,50.0,16.0,1.0,18.0,1.0,0.8992672705832092,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg87,16.0,True,True,True
6413.0,same shape as a blue object,False,51.0,17.0,0.0,1.0,18.0,0.0366271897472643,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,17.0,False,False,True
6414.0,same shape as a blue object,False,52.0,17.0,0.0,0.0,19.0,0.0060542484060306,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg87,17.0,False,False,True
6415.0,same shape as a blue object,False,53.0,18.0,0.0,2.0,17.0,0.002085258647412,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,18.0,False,False,True
6416.0,same shape as a blue object,False,54.0,18.0,0.0,1.0,18.0,0.0274354869743547,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,18.0,False,False,True
6417.0,same shape as a blue object,False,55.0,19.0,1.0,12.0,7.0,0.0912687848780251,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg87,19.0,True,False,True
6418.0,same shape as a blue object,False,56.0,19.0,1.0,18.0,1.0,0.8743966700603778,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,19.0,True,True,True
6419.0,same shape as a blue object,False,57.0,19.0,1.0,14.0,5.0,0.099353865846183,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,19.0,True,False,True
6420.0,same shape as a blue object,False,58.0,19.0,1.0,19.0,0.0,0.8832550572579976,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,19.0,True,True,True
6421.0,same shape as a blue object,False,59.0,20.0,0.0,0.0,19.0,0.0301625147834556,"""λx.exists(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s)""
",same shape as a blue object,"def is_rule(obj):
    return np.any([x.blue and (obj.shape == x.shape) for x in obj.current_set.objs])",large green rectangle,hg87,20.0,False,False,True
6422.0,same shape as a blue object,False,60.0,21.0,1.0,14.0,5.0,0.3422516475967541,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,21.0,True,False,True
6423.0,same shape as a blue object,False,61.0,21.0,0.0,1.0,18.0,0.035444756089987,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,21.0,False,False,True
6424.0,same shape as a blue object,False,62.0,21.0,1.0,15.0,4.0,0.3170573350349741,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg87,21.0,True,False,True
6425.0,same shape as a blue object,False,63.0,21.0,1.0,16.0,3.0,0.945693056305572,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg87,21.0,True,True,True
6426.0,same shape as a blue object,False,64.0,21.0,1.0,17.0,2.0,0.9421823167675712,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg87,21.0,True,True,True
6427.0,same shape as a blue object,False,65.0,22.0,0.0,1.0,18.0,0.0170436253857815,"""λx.exists(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s)""
",same shape as a blue object,"def is_rule(obj):
    return np.any([x.blue and (obj.shape == x.shape) for x in obj.current_set.objs])",large yellow rectangle,hg87,22.0,False,False,True
6428.0,same shape as a blue object,False,66.0,23.0,1.0,17.0,2.0,0.9604410354777428,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,23.0,True,True,True
6429.0,same shape as a blue object,False,67.0,24.0,0.0,1.0,18.0,0.0792544052811763,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,24.0,False,False,True
6430.0,same shape as a blue object,False,68.0,24.0,0.0,1.0,18.0,0.0313253098170207,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,24.0,False,False,True
6431.0,same shape as a blue object,False,69.0,24.0,1.0,18.0,1.0,0.9431310299307823,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,24.0,True,True,True
6432.0,same shape as a blue object,False,70.0,24.0,1.0,18.0,1.0,0.9503944313332796,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,24.0,True,True,True
6433.0,same shape as a blue object,False,71.0,24.0,0.0,2.0,17.0,0.1031935084142787,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,24.0,False,False,True
6434.0,same shape as a blue object,False,72.0,25.0,0.0,1.0,18.0,0.0022064149967491,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,25.0,False,False,True
6435.0,same shape as a blue object,False,73.0,25.0,0.0,2.0,17.0,0.0080233240386178,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,25.0,False,False,True
6436.0,same shape as a blue object,False,74.0,25.0,0.0,3.0,16.0,0.0082241898983284,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg87,25.0,False,False,True
6437.0,same shape as a blue object,False,75.0,25.0,0.0,2.0,17.0,0.0151953304552989,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,25.0,False,False,True
7532.0,blue or larger than all other objects,False,0.0,1.0,0.0,12.0,14.0,0.4254627170529375,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg31,1.0,False,False,True
7533.0,blue or larger than all other objects,False,1.0,1.0,1.0,14.0,12.0,0.485010594522123,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg31,1.0,True,False,True
7534.0,blue or larger than all other objects,False,2.0,1.0,0.0,7.0,19.0,0.4752908851672828,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg31,1.0,False,False,True
7535.0,blue or larger than all other objects,False,3.0,1.0,1.0,8.0,18.0,0.4552429588410405,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg31,1.0,True,False,True
7536.0,blue or larger than all other objects,False,4.0,2.0,0.0,1.0,25.0,0.1719929659200261,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow circle,hg31,2.0,False,False,True
7537.0,blue or larger than all other objects,False,5.0,2.0,0.0,16.0,10.0,0.4496405782803094,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow rectangle,hg31,2.0,False,False,True
7538.0,blue or larger than all other objects,False,6.0,3.0,0.0,5.0,21.0,0.2381931823869081,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,3.0,False,False,True
7539.0,blue or larger than all other objects,False,7.0,3.0,0.0,2.0,24.0,0.2351029824618535,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg31,3.0,False,False,True
7540.0,blue or larger than all other objects,False,8.0,3.0,0.0,1.0,25.0,0.0547705079077331,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,3.0,False,False,True
7541.0,blue or larger than all other objects,False,9.0,4.0,0.0,3.0,23.0,0.2133576901545666,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg31,4.0,False,False,True
7542.0,blue or larger than all other objects,False,10.0,4.0,1.0,10.0,16.0,0.5341997339072577,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg31,4.0,True,True,True
7543.0,blue or larger than all other objects,False,11.0,4.0,1.0,12.0,14.0,0.6196446456985996,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg31,4.0,True,True,True
7544.0,blue or larger than all other objects,False,12.0,5.0,0.0,5.0,21.0,0.1174996869923461,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg31,5.0,False,False,True
7545.0,blue or larger than all other objects,False,13.0,5.0,0.0,6.0,20.0,0.1758774083443768,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg31,5.0,False,False,True
7546.0,blue or larger than all other objects,False,14.0,5.0,0.0,1.0,25.0,0.1697332127777144,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,5.0,False,False,True
7547.0,blue or larger than all other objects,False,15.0,5.0,0.0,1.0,25.0,0.1017136801707465,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,5.0,False,False,True
7548.0,blue or larger than all other objects,False,16.0,6.0,1.0,19.0,7.0,0.736342749459368,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg31,6.0,True,True,True
7549.0,blue or larger than all other objects,False,17.0,6.0,1.0,16.0,10.0,0.674246207078113,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,6.0,True,True,True
7550.0,blue or larger than all other objects,False,18.0,7.0,1.0,21.0,4.0,0.8799025751320642,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg31,7.0,True,True,True
7551.0,blue or larger than all other objects,False,19.0,7.0,0.0,3.0,22.0,0.0528730643079597,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,7.0,False,False,True
7552.0,blue or larger than all other objects,False,20.0,7.0,0.0,1.0,24.0,0.0544020951984975,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,7.0,False,False,True
7553.0,blue or larger than all other objects,False,21.0,8.0,0.0,0.0,25.0,0.027368230424372,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,8.0,False,False,True
7554.0,blue or larger than all other objects,False,22.0,8.0,1.0,23.0,2.0,0.9112929192177716,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg31,8.0,True,True,True
7555.0,blue or larger than all other objects,False,23.0,8.0,0.0,2.0,23.0,0.0137764982225689,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,8.0,False,False,True
7556.0,blue or larger than all other objects,False,24.0,8.0,0.0,0.0,25.0,0.025590945094791,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,8.0,False,False,True
7557.0,blue or larger than all other objects,False,25.0,8.0,1.0,23.0,2.0,0.9113654472173494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,8.0,True,True,True
7558.0,blue or larger than all other objects,False,26.0,9.0,0.0,2.0,23.0,0.0096643977447001,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,9.0,False,False,True
7559.0,blue or larger than all other objects,False,27.0,9.0,0.0,2.0,23.0,0.0152893429403775,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,9.0,False,False,True
7560.0,blue or larger than all other objects,False,28.0,9.0,0.0,0.0,25.0,0.2138221765951584,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,9.0,False,False,True
7561.0,blue or larger than all other objects,False,29.0,9.0,1.0,21.0,4.0,0.9292429529449464,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg31,9.0,True,True,True
7562.0,blue or larger than all other objects,False,30.0,10.0,0.0,1.0,24.0,0.0031961541086502,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg31,10.0,False,False,True
7563.0,blue or larger than all other objects,False,31.0,10.0,0.0,1.0,24.0,0.0618489630504655,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,10.0,False,False,True
7564.0,blue or larger than all other objects,False,32.0,10.0,0.0,1.0,24.0,0.005682627590545,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,10.0,False,False,True
7565.0,blue or larger than all other objects,False,33.0,10.0,1.0,0.0,25.0,0.032900453952493,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,10.0,True,False,True
7566.0,blue or larger than all other objects,False,34.0,11.0,1.0,24.0,1.0,0.9164644045757768,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg31,11.0,True,True,True
7567.0,blue or larger than all other objects,False,35.0,11.0,1.0,22.0,3.0,0.8733286591302658,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg31,11.0,True,True,True
7568.0,blue or larger than all other objects,False,36.0,11.0,1.0,15.0,10.0,0.1930429014627179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,11.0,True,False,True
7569.0,blue or larger than all other objects,False,37.0,11.0,0.0,7.0,18.0,0.1200391111740373,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg31,11.0,False,False,True
7570.0,blue or larger than all other objects,False,38.0,11.0,0.0,6.0,19.0,0.0834353757180679,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,11.0,False,False,True
7571.0,blue or larger than all other objects,False,39.0,12.0,1.0,22.0,3.0,0.2783737971039954,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,12.0,True,False,True
7572.0,blue or larger than all other objects,False,40.0,12.0,0.0,1.0,24.0,0.0042274711016716,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,12.0,False,False,True
7573.0,blue or larger than all other objects,False,41.0,12.0,1.0,23.0,2.0,0.97458117741769,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,12.0,True,True,True
7574.0,blue or larger than all other objects,False,42.0,13.0,1.0,3.0,22.0,0.0373935593147507,"""λx.apply1(compose11(compose8(or,blue),compose11(compose8(and,large),circle)),x.o)""
",blue or (circle and large),"def is_rule(obj):
    return obj.blue or (obj.circle and obj.large)",small green triangle,hg31,13.0,True,False,True
7575.0,blue or larger than all other objects,False,43.0,14.0,1.0,24.0,1.0,0.956523131689778,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg31,14.0,True,True,True
7576.0,blue or larger than all other objects,False,44.0,14.0,1.0,23.0,2.0,0.9515905965156436,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg31,14.0,True,True,True
7577.0,blue or larger than all other objects,False,45.0,14.0,0.0,4.0,21.0,0.2380564578510302,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg31,14.0,False,False,True
7578.0,blue or larger than all other objects,False,46.0,15.0,0.0,2.0,23.0,0.0280342688774908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,15.0,False,False,True
7579.0,blue or larger than all other objects,False,47.0,15.0,0.0,2.0,23.0,0.071690143143769,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg31,15.0,False,False,True
7580.0,blue or larger than all other objects,False,48.0,15.0,0.0,14.0,11.0,0.0592333959456254,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,15.0,False,False,True
7581.0,blue or larger than all other objects,False,49.0,15.0,1.0,23.0,2.0,0.9373415545539956,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,15.0,True,True,True
7582.0,blue or larger than all other objects,False,50.0,16.0,0.0,3.0,22.0,0.0078343292952922,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg31,16.0,False,False,True
7583.0,blue or larger than all other objects,False,51.0,16.0,1.0,3.0,22.0,0.1728310157531041,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg31,16.0,True,False,True
7584.0,blue or larger than all other objects,False,52.0,16.0,0.0,6.0,19.0,0.0060862980852789,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,16.0,False,False,True
7585.0,blue or larger than all other objects,False,53.0,17.0,0.0,3.0,22.0,0.0041324333971033,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium yellow triangle,hg31,17.0,False,False,True
7586.0,blue or larger than all other objects,False,54.0,17.0,1.0,24.0,1.0,0.9810840604120584,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",large blue circle,hg31,17.0,True,True,True
7587.0,blue or larger than all other objects,False,55.0,17.0,1.0,23.0,2.0,0.9580002999059616,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium blue triangle,hg31,17.0,True,True,True
7588.0,blue or larger than all other objects,False,56.0,17.0,0.0,2.0,23.0,0.0307480052968003,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium yellow circle,hg31,17.0,False,False,True
7589.0,blue or larger than all other objects,False,57.0,17.0,0.0,3.0,22.0,0.0023287942901788,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium green rectangle,hg31,17.0,False,False,True
7590.0,blue or larger than all other objects,False,58.0,18.0,0.0,3.0,22.0,0.006912282417943,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,18.0,False,False,True
7591.0,blue or larger than all other objects,False,59.0,18.0,0.0,1.0,24.0,0.0136563136951508,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg31,18.0,False,False,True
7592.0,blue or larger than all other objects,False,60.0,18.0,1.0,21.0,4.0,0.9834847231632012,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,18.0,True,True,True
7593.0,blue or larger than all other objects,False,61.0,19.0,0.0,3.0,22.0,0.0020646692320269,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,19.0,False,False,True
7594.0,blue or larger than all other objects,False,62.0,19.0,0.0,3.0,22.0,0.0086196037449326,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,19.0,False,False,True
7595.0,blue or larger than all other objects,False,63.0,19.0,0.0,1.0,24.0,0.0014855036364451,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,19.0,False,False,True
7596.0,blue or larger than all other objects,False,64.0,19.0,0.0,1.0,24.0,0.0111720388459843,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,19.0,False,False,True
7597.0,blue or larger than all other objects,False,65.0,19.0,1.0,22.0,3.0,0.9780333502088752,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,19.0,True,True,True
7598.0,blue or larger than all other objects,False,66.0,20.0,0.0,1.0,24.0,0.2525719005084283,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg31,20.0,False,False,True
7599.0,blue or larger than all other objects,False,67.0,20.0,0.0,2.0,23.0,0.2473438111846917,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg31,20.0,False,False,True
7600.0,blue or larger than all other objects,False,68.0,20.0,0.0,1.0,24.0,0.2769515411391694,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg31,20.0,False,False,True
7601.0,blue or larger than all other objects,False,69.0,20.0,1.0,24.0,1.0,0.9838002647019266,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg31,20.0,True,True,True
7602.0,blue or larger than all other objects,False,70.0,20.0,0.0,1.0,24.0,0.0005755414575787,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,20.0,False,False,True
7603.0,blue or larger than all other objects,False,71.0,21.0,1.0,21.0,4.0,0.9815684036598212,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,21.0,True,True,True
7604.0,blue or larger than all other objects,False,72.0,21.0,0.0,1.0,24.0,0.0005366964990116,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,21.0,False,False,True
7605.0,blue or larger than all other objects,False,73.0,22.0,1.0,23.0,2.0,0.9792638364854156,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,22.0,True,True,True
7606.0,blue or larger than all other objects,False,74.0,22.0,1.0,24.0,1.0,0.9713392693327024,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,22.0,True,True,True
7607.0,blue or larger than all other objects,False,75.0,23.0,1.0,17.0,8.0,0.0521695639060908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,23.0,True,False,True
7608.0,blue or larger than all other objects,False,76.0,23.0,1.0,25.0,0.0,0.9959105507525692,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,23.0,True,True,True
7609.0,blue or larger than all other objects,False,77.0,24.0,1.0,23.0,2.0,0.9942244321584894,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,24.0,True,True,True
7610.0,blue or larger than all other objects,False,78.0,25.0,0.0,2.0,23.0,0.0233012663609315,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg31,25.0,False,False,True
7611.0,blue or larger than all other objects,False,79.0,25.0,1.0,23.0,2.0,0.993742715379426,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,25.0,True,True,True
7612.0,blue or larger than all other objects,False,80.0,25.0,0.0,1.0,24.0,0.0145824337948852,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg31,25.0,False,False,True
7613.0,blue or larger than all other objects,False,81.0,25.0,0.0,4.0,21.0,0.0093197857451059,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,25.0,False,False,True
8008.0,same size as a circular object,False,0.0,1.0,1.0,10.0,14.0,0.4630532420618465,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg88,1.0,True,False,True
8009.0,same size as a circular object,False,1.0,1.0,1.0,8.0,16.0,0.4881590794785779,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg88,1.0,True,False,True
8010.0,same size as a circular object,False,2.0,1.0,1.0,11.0,13.0,0.5126572996757659,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg88,1.0,True,True,True
8011.0,same size as a circular object,False,3.0,1.0,1.0,12.0,12.0,0.4257402797596796,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg88,1.0,True,False,True
8012.0,same size as a circular object,False,4.0,1.0,1.0,8.0,16.0,0.4310227053450717,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg88,1.0,True,False,True
8013.0,same size as a circular object,False,5.0,2.0,0.0,8.0,16.0,0.6658960945650279,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg88,2.0,False,True,True
8014.0,same size as a circular object,False,6.0,3.0,1.0,16.0,7.0,0.6312829580342623,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green rectangle,hg88,3.0,True,True,True
8015.0,same size as a circular object,False,7.0,3.0,1.0,16.0,7.0,0.7213615304174255,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg88,3.0,True,True,True
8016.0,same size as a circular object,False,8.0,3.0,1.0,22.0,1.0,0.7956755918648923,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg88,3.0,True,True,True
8017.0,same size as a circular object,False,9.0,3.0,1.0,4.0,19.0,0.5286186639681318,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow triangle,hg88,3.0,True,True,True
8018.0,same size as a circular object,False,10.0,4.0,0.0,13.0,10.0,0.8143431393075389,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg88,4.0,False,True,True
8019.0,same size as a circular object,False,11.0,4.0,1.0,19.0,4.0,0.7125587442646975,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg88,4.0,True,True,True
8020.0,same size as a circular object,False,12.0,4.0,1.0,19.0,4.0,0.903532255064988,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg88,4.0,True,True,True
8021.0,same size as a circular object,False,13.0,5.0,0.0,20.0,3.0,0.6804452737929978,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow rectangle,hg88,5.0,False,True,True
8022.0,same size as a circular object,False,14.0,5.0,1.0,19.0,4.0,0.755207699531411,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow rectangle,hg88,5.0,True,True,True
8023.0,same size as a circular object,False,15.0,5.0,1.0,21.0,2.0,0.8539346810065354,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow circle,hg88,5.0,True,True,True
8024.0,same size as a circular object,False,16.0,6.0,1.0,20.0,3.0,0.8480694766358283,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg88,6.0,True,True,True
8025.0,same size as a circular object,False,17.0,6.0,1.0,12.0,11.0,0.6462395853091039,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg88,6.0,True,True,True
8026.0,same size as a circular object,False,18.0,6.0,0.0,10.0,13.0,0.5023598452202123,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg88,6.0,False,True,True
8027.0,same size as a circular object,False,19.0,6.0,0.0,20.0,3.0,0.3978373905951002,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg88,6.0,False,False,True
8028.0,same size as a circular object,False,20.0,6.0,0.0,21.0,2.0,0.5524929672617418,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg88,6.0,False,True,True
8029.0,same size as a circular object,False,21.0,7.0,0.0,16.0,7.0,0.186707977497349,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,7.0,False,False,True
8030.0,same size as a circular object,False,22.0,7.0,1.0,16.0,7.0,0.8961192561255302,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,7.0,True,True,True
8031.0,same size as a circular object,False,23.0,7.0,1.0,19.0,4.0,0.90502435262556,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,7.0,True,True,True
8032.0,same size as a circular object,False,24.0,7.0,1.0,18.0,5.0,0.9752876547233882,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,7.0,True,True,True
8033.0,same size as a circular object,False,25.0,7.0,1.0,16.0,7.0,0.725915298515929,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,7.0,True,True,True
8034.0,same size as a circular object,False,26.0,8.0,1.0,16.0,7.0,0.9864059769786307,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,8.0,True,True,True
8035.0,same size as a circular object,False,27.0,8.0,1.0,22.0,1.0,0.8326944227605964,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,8.0,True,True,True
8036.0,same size as a circular object,False,28.0,8.0,1.0,18.0,5.0,0.9081541036674708,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,8.0,True,True,True
8037.0,same size as a circular object,False,29.0,8.0,0.0,7.0,16.0,0.080893138273268,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow rectangle,hg88,8.0,False,False,True
8038.0,same size as a circular object,False,30.0,8.0,1.0,22.0,1.0,0.9926341543607576,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,8.0,True,True,True
8039.0,same size as a circular object,False,31.0,9.0,0.0,5.0,18.0,0.0501813906422512,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,9.0,False,False,True
8040.0,same size as a circular object,False,32.0,9.0,1.0,20.0,3.0,0.9948073033787068,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,9.0,True,True,True
8041.0,same size as a circular object,False,33.0,9.0,1.0,17.0,6.0,0.9688032482350764,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue rectangle,hg88,9.0,True,True,True
8042.0,same size as a circular object,False,34.0,10.0,0.0,16.0,7.0,0.4676904251184623,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,10.0,False,False,True
8043.0,same size as a circular object,False,35.0,10.0,0.0,8.0,15.0,0.0290791422178244,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,10.0,False,False,True
8044.0,same size as a circular object,False,36.0,11.0,0.0,14.0,9.0,0.3036174041205868,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,11.0,False,False,True
8045.0,same size as a circular object,False,37.0,11.0,1.0,13.0,10.0,0.9114631914613938,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,11.0,True,True,True
8046.0,same size as a circular object,False,38.0,11.0,0.0,14.0,9.0,0.2407854067621428,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,11.0,False,False,True
8047.0,same size as a circular object,False,39.0,11.0,0.0,15.0,8.0,0.2550919727300424,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue rectangle,hg88,11.0,False,False,True
8048.0,same size as a circular object,False,40.0,11.0,0.0,14.0,9.0,0.1587773400241303,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow rectangle,hg88,11.0,False,False,True
8049.0,same size as a circular object,False,41.0,12.0,0.0,11.0,12.0,0.0560684930201205,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,12.0,False,False,True
8050.0,same size as a circular object,False,42.0,12.0,0.0,15.0,8.0,0.0682906506849576,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,12.0,False,False,True
8051.0,same size as a circular object,False,43.0,13.0,1.0,7.0,15.0,0.8405927970305811,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,13.0,True,True,True
8052.0,same size as a circular object,False,44.0,13.0,1.0,18.0,4.0,0.979749220641338,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,13.0,True,True,True
8053.0,same size as a circular object,False,45.0,13.0,1.0,18.0,4.0,0.9807757728061688,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,13.0,True,True,True
8054.0,same size as a circular object,False,46.0,13.0,1.0,16.0,6.0,0.8408527234507801,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,13.0,True,True,True
8055.0,same size as a circular object,False,47.0,13.0,1.0,16.0,6.0,0.8430577147324811,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green triangle,hg88,13.0,True,True,True
8056.0,same size as a circular object,False,48.0,14.0,0.0,17.0,5.0,0.0479201702836462,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,14.0,False,False,True
8057.0,same size as a circular object,False,49.0,14.0,1.0,15.0,7.0,0.9840959312252836,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green triangle,hg88,14.0,True,True,True
8058.0,same size as a circular object,False,50.0,14.0,1.0,15.0,7.0,0.996698209253168,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,14.0,True,True,True
8059.0,same size as a circular object,False,51.0,14.0,0.0,10.0,12.0,0.0283678164144021,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue rectangle,hg88,14.0,False,False,True
8060.0,same size as a circular object,False,52.0,15.0,1.0,8.0,13.0,0.975745348399073,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,15.0,True,True,True
8061.0,same size as a circular object,False,53.0,15.0,1.0,15.0,6.0,0.9986017958980256,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,15.0,True,True,True
8062.0,same size as a circular object,False,54.0,15.0,0.0,5.0,16.0,0.0212008554136673,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,15.0,False,False,True
8063.0,same size as a circular object,False,55.0,15.0,1.0,16.0,5.0,0.9940554398928044,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,15.0,True,True,True
8064.0,same size as a circular object,False,56.0,16.0,1.0,12.0,9.0,0.9828771241645882,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue rectangle,hg88,16.0,True,True,True
8065.0,same size as a circular object,False,57.0,16.0,1.0,12.0,9.0,0.9986929132138584,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,16.0,True,True,True
8066.0,same size as a circular object,False,58.0,17.0,1.0,16.0,5.0,0.9909796028726988,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow circle,hg88,17.0,True,True,True
8067.0,same size as a circular object,False,59.0,17.0,0.0,9.0,12.0,0.0176934427536252,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,17.0,False,False,True
8068.0,same size as a circular object,False,60.0,18.0,1.0,15.0,6.0,0.9952429206418856,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,18.0,True,True,True
8069.0,same size as a circular object,False,61.0,19.0,0.0,6.0,15.0,0.0508256594857812,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue triangle,hg88,19.0,False,False,True
8070.0,same size as a circular object,False,62.0,19.0,1.0,18.0,3.0,0.9643540713715312,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,19.0,True,True,True
8071.0,same size as a circular object,False,63.0,19.0,1.0,21.0,0.0,0.9956313766435868,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow circle,hg88,19.0,True,True,True
8072.0,same size as a circular object,False,64.0,19.0,0.0,6.0,15.0,0.0340283554822917,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,19.0,False,False,True
8073.0,same size as a circular object,False,65.0,19.0,1.0,16.0,5.0,0.9652474131544296,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,19.0,True,True,True
8074.0,same size as a circular object,False,66.0,20.0,0.0,7.0,14.0,0.0173759805752524,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow rectangle,hg88,20.0,False,False,True
8075.0,same size as a circular object,False,67.0,20.0,0.0,7.0,14.0,0.0195217943205534,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,20.0,False,False,True
8076.0,same size as a circular object,False,68.0,21.0,0.0,8.0,13.0,0.0321327662270505,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium green triangle,hg88,21.0,False,False,True
8077.0,same size as a circular object,False,69.0,21.0,0.0,5.0,16.0,0.0032480177599154,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,21.0,False,False,True
8078.0,same size as a circular object,False,70.0,21.0,0.0,6.0,15.0,0.0436815770528937,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,21.0,False,False,True
8079.0,same size as a circular object,False,71.0,21.0,0.0,9.0,12.0,0.0072318784310709,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,21.0,False,False,True
8080.0,same size as a circular object,False,72.0,21.0,0.0,6.0,15.0,0.0439196177965186,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,21.0,False,False,True
8081.0,same size as a circular object,False,73.0,22.0,1.0,6.0,15.0,0.906825520490429,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,22.0,True,True,True
8082.0,same size as a circular object,False,74.0,22.0,0.0,4.0,17.0,0.0044458899193386,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,22.0,False,False,True
8083.0,same size as a circular object,False,75.0,22.0,1.0,7.0,14.0,0.9070743392858276,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,22.0,True,True,True
8084.0,same size as a circular object,False,76.0,22.0,1.0,14.0,7.0,0.9991075157118984,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,22.0,True,True,True
8085.0,same size as a circular object,False,77.0,23.0,1.0,17.0,4.0,0.9984518630097908,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue circle,hg88,23.0,True,True,True
8086.0,same size as a circular object,False,78.0,23.0,1.0,17.0,4.0,0.9982844642152032,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,23.0,True,True,True
8087.0,same size as a circular object,False,79.0,23.0,1.0,13.0,8.0,0.9846653005354256,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,23.0,True,True,True
8088.0,same size as a circular object,False,80.0,24.0,0.0,6.0,15.0,0.002381376823223,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium green triangle,hg88,24.0,False,False,True
8089.0,same size as a circular object,False,81.0,24.0,0.0,9.0,12.0,0.003738173011925,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,24.0,False,False,True
8090.0,same size as a circular object,False,82.0,24.0,0.0,8.0,13.0,0.0043108362257271,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,24.0,False,False,True
8091.0,same size as a circular object,False,83.0,25.0,0.0,4.0,17.0,0.0024124304175074,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,25.0,False,False,True
8092.0,same size as a circular object,False,84.0,25.0,0.0,3.0,18.0,0.0021716109409908,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow rectangle,hg88,25.0,False,False,True
8093.0,same size as a circular object,False,85.0,25.0,1.0,14.0,7.0,0.9800260681581676,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,25.0,True,True,True
8094.0,same size as a circular object,False,86.0,25.0,1.0,15.0,6.0,0.9993814693391414,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,25.0,True,True,True
8095.0,same size as a circular object,False,87.0,25.0,0.0,7.0,14.0,0.0034319416064363,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,25.0,False,False,True
8396.0,blue or same shape as another object,False,0.0,1.0,1.0,11.0,11.0,0.4957054003017447,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg61,1.0,True,False,True
8397.0,blue or same shape as another object,False,1.0,1.0,0.0,10.0,12.0,0.4366356623380625,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg61,1.0,False,False,True
8398.0,blue or same shape as another object,False,2.0,1.0,1.0,12.0,10.0,0.476487868663753,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg61,1.0,True,False,True
8399.0,blue or same shape as another object,False,3.0,2.0,1.0,12.0,10.0,0.6448422570040293,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large blue circle,hg61,2.0,True,True,True
8400.0,blue or same shape as another object,False,4.0,2.0,1.0,13.0,9.0,0.6201062751605377,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg61,2.0,True,True,True
8401.0,blue or same shape as another object,False,5.0,2.0,1.0,12.0,10.0,0.4918040126187861,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg61,2.0,True,False,True
8402.0,blue or same shape as another object,False,6.0,3.0,1.0,14.0,8.0,0.6844253260936739,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue triangle,hg61,3.0,True,True,True
8403.0,blue or same shape as another object,False,7.0,3.0,1.0,15.0,7.0,0.7423540926718033,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large blue triangle,hg61,3.0,True,True,True
8404.0,blue or same shape as another object,False,8.0,3.0,1.0,15.0,7.0,0.5363742970242811,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green triangle,hg61,3.0,True,True,True
8405.0,blue or same shape as another object,False,9.0,3.0,1.0,14.0,8.0,0.488064648998602,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small green triangle,hg61,3.0,True,False,True
8406.0,blue or same shape as another object,False,10.0,4.0,1.0,15.0,7.0,0.7931601901409522,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg61,4.0,True,True,True
8407.0,blue or same shape as another object,False,11.0,5.0,0.0,13.0,9.0,0.663335999683909,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,5.0,False,True,True
8408.0,blue or same shape as another object,False,12.0,6.0,0.0,19.0,3.0,0.6019166582617572,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg61,6.0,False,True,True
8409.0,blue or same shape as another object,False,13.0,7.0,0.0,2.0,20.0,0.3352043379089764,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg61,7.0,False,False,True
8410.0,blue or same shape as another object,False,14.0,7.0,1.0,21.0,1.0,0.8217181806064673,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,7.0,True,True,True
8411.0,blue or same shape as another object,False,15.0,7.0,1.0,21.0,1.0,0.6312329137432471,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg61,7.0,True,True,True
8412.0,blue or same shape as another object,False,16.0,7.0,1.0,13.0,9.0,0.495823753930722,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg61,7.0,True,False,True
8413.0,blue or same shape as another object,False,17.0,8.0,1.0,17.0,5.0,0.7908548298739788,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green circle,hg61,8.0,True,True,True
8414.0,blue or same shape as another object,False,18.0,8.0,1.0,15.0,7.0,0.6762486913694374,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow circle,hg61,8.0,True,True,True
8415.0,blue or same shape as another object,False,19.0,8.0,0.0,4.0,18.0,0.6918669689550825,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg61,8.0,False,True,True
8416.0,blue or same shape as another object,False,20.0,9.0,0.0,6.0,16.0,0.4559818423767865,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow circle,hg61,9.0,False,False,True
8417.0,blue or same shape as another object,False,21.0,9.0,1.0,7.0,15.0,0.7884978407084873,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,9.0,True,True,True
8418.0,blue or same shape as another object,False,22.0,10.0,1.0,22.0,0.0,0.9649953062432814,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,10.0,True,True,True
8419.0,blue or same shape as another object,False,23.0,10.0,1.0,21.0,1.0,0.876823365964924,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg61,10.0,True,True,True
8420.0,blue or same shape as another object,False,24.0,11.0,1.0,18.0,4.0,0.8371643710100898,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg61,11.0,True,True,True
8421.0,blue or same shape as another object,False,25.0,11.0,1.0,19.0,3.0,0.91169010279782,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg61,11.0,True,True,True
8422.0,blue or same shape as another object,False,26.0,11.0,1.0,10.0,12.0,0.8073696852009107,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue circle,hg61,11.0,True,True,True
8423.0,blue or same shape as another object,False,27.0,12.0,1.0,18.0,4.0,0.6196190855768009,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg61,12.0,True,True,True
8424.0,blue or same shape as another object,False,28.0,12.0,1.0,13.0,9.0,0.3614223632924904,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg61,12.0,True,False,True
8425.0,blue or same shape as another object,False,29.0,12.0,1.0,16.0,6.0,0.9873741012931988,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,12.0,True,True,True
8426.0,blue or same shape as another object,False,30.0,12.0,1.0,22.0,0.0,0.8356527654606225,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg61,12.0,True,True,True
8427.0,blue or same shape as another object,False,31.0,13.0,1.0,21.0,1.0,0.8380450492412592,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg61,13.0,True,True,True
8428.0,blue or same shape as another object,False,32.0,13.0,1.0,22.0,0.0,0.9539897777353872,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg61,13.0,True,True,True
8429.0,blue or same shape as another object,False,33.0,13.0,1.0,20.0,2.0,0.826929289631039,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg61,13.0,True,True,True
8430.0,blue or same shape as another object,False,34.0,13.0,1.0,22.0,0.0,0.9247836624401772,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg61,13.0,True,True,True
8431.0,blue or same shape as another object,False,35.0,14.0,1.0,21.0,1.0,0.9659178970923676,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg61,14.0,True,True,True
8432.0,blue or same shape as another object,False,36.0,14.0,1.0,18.0,4.0,0.8891069481655904,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg61,14.0,True,True,True
8433.0,blue or same shape as another object,False,37.0,14.0,1.0,16.0,6.0,0.9537135634323022,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg61,14.0,True,True,True
8434.0,blue or same shape as another object,False,38.0,15.0,1.0,20.0,2.0,0.8068927645390431,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg61,15.0,True,True,True
8435.0,blue or same shape as another object,False,39.0,15.0,1.0,19.0,3.0,0.8137347806599564,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg61,15.0,True,True,True
8436.0,blue or same shape as another object,False,40.0,15.0,1.0,17.0,5.0,0.9670524596059522,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg61,15.0,True,True,True
8437.0,blue or same shape as another object,False,41.0,15.0,0.0,10.0,12.0,0.93261344913401,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg61,15.0,False,True,True
8438.0,blue or same shape as another object,False,42.0,16.0,1.0,18.0,4.0,0.9055853709566009,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg61,16.0,True,True,True
8439.0,blue or same shape as another object,False,43.0,16.0,1.0,19.0,3.0,0.6764665366983991,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg61,16.0,True,True,True
8440.0,blue or same shape as another object,False,44.0,17.0,1.0,20.0,2.0,0.9579181919922348,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg61,17.0,True,True,True
8441.0,blue or same shape as another object,False,45.0,18.0,1.0,21.0,1.0,0.7563861534829357,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg61,18.0,True,True,True
8442.0,blue or same shape as another object,False,46.0,18.0,1.0,22.0,0.0,0.991465224454828,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg61,18.0,True,True,True
8443.0,blue or same shape as another object,False,47.0,19.0,1.0,16.0,6.0,0.9022853839497884,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg61,19.0,True,True,True
8444.0,blue or same shape as another object,False,48.0,19.0,0.0,10.0,12.0,0.8505280805605935,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg61,19.0,False,True,True
8445.0,blue or same shape as another object,False,49.0,19.0,1.0,18.0,4.0,0.8266251022533879,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,19.0,True,True,True
8446.0,blue or same shape as another object,False,50.0,20.0,0.0,11.0,11.0,0.8708997394594462,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,20.0,False,True,True
8447.0,blue or same shape as another object,False,51.0,20.0,0.0,11.0,11.0,0.6777239395930792,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg61,20.0,False,True,True
8448.0,blue or same shape as another object,False,52.0,20.0,0.0,11.0,11.0,0.7829027245329598,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg61,20.0,False,True,True
8449.0,blue or same shape as another object,False,53.0,21.0,0.0,10.0,12.0,0.0838707435962078,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg61,21.0,False,False,True
8450.0,blue or same shape as another object,False,54.0,22.0,1.0,20.0,2.0,0.8702206005734752,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg61,22.0,True,True,True
8451.0,blue or same shape as another object,False,55.0,22.0,1.0,17.0,5.0,0.5917047393033954,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow triangle,hg61,22.0,True,True,True
8452.0,blue or same shape as another object,False,56.0,23.0,1.0,19.0,3.0,0.9518266564543864,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",medium blue rectangle,hg61,23.0,True,True,True
8453.0,blue or same shape as another object,False,57.0,23.0,1.0,20.0,2.0,0.9522139212646152,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",small green rectangle,hg61,23.0,True,True,True
8454.0,blue or same shape as another object,False,58.0,23.0,0.0,9.0,13.0,0.847321839192432,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",medium green circle,hg61,23.0,False,True,True
8455.0,blue or same shape as another object,False,59.0,24.0,0.0,10.0,12.0,0.7444195847939454,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg61,24.0,False,True,True
8456.0,blue or same shape as another object,False,60.0,24.0,0.0,9.0,13.0,0.6355342633560213,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg61,24.0,False,True,True
8457.0,blue or same shape as another object,False,61.0,24.0,0.0,6.0,16.0,0.5703518226639517,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg61,24.0,False,True,True
8458.0,blue or same shape as another object,False,62.0,25.0,1.0,17.0,5.0,0.4644404109001243,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg61,25.0,True,False,True
8459.0,blue or same shape as another object,False,63.0,25.0,1.0,18.0,4.0,0.8977066687168644,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg61,25.0,True,True,True

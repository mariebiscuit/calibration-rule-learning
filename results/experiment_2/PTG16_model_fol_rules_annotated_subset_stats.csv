,Unnamed: 0,concept,is_bool,item_num,set_num,answer,hyes,hno,p(yes),lambda_rule,rule_expression,manual_code,object,concept_num,set,data_answer,model_answer,to_annotate,code_eval,human_lq,chance,coverage_manual_code,full_coverage_manual_code,consistency
0,314.0,blue and same shape as another object,False,0.0,1.0,0.0,13.0,12.0,0.4643228591688739,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg62,1.0,False,False,True,True,0.8727272727272727,0.7340720221606647,,0.15789473684210525,False
1,315.0,blue and same shape as another object,False,1.0,2.0,0.0,11.0,13.0,0.3661835874714825,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg62,2.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
2,316.0,blue and same shape as another object,False,2.0,2.0,0.0,8.0,16.0,0.2788668457171752,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg62,2.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
3,317.0,blue and same shape as another object,False,3.0,3.0,1.0,10.0,14.0,0.2564041234860497,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,3.0,True,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
4,318.0,blue and same shape as another object,False,4.0,3.0,0.0,8.0,16.0,0.1564576059702176,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg62,3.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
5,319.0,blue and same shape as another object,False,5.0,3.0,0.0,8.0,16.0,0.163783815421425,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,3.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
6,320.0,blue and same shape as another object,False,6.0,3.0,0.0,7.0,17.0,0.2745512139332504,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,3.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
7,321.0,blue and same shape as another object,False,7.0,3.0,0.0,9.0,15.0,0.3862535080074849,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,3.0,False,False,True,False,0.8727272727272727,0.7340720221606647,1.0,0.8421052631578947,True
8,322.0,blue and same shape as another object,False,8.0,4.0,0.0,7.0,17.0,0.1808026601833035,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,4.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.875,0.8421052631578947,True
9,323.0,blue and same shape as another object,False,9.0,4.0,0.0,8.0,16.0,0.4353082508287116,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg62,4.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.875,0.8421052631578947,True
10,324.0,blue and same shape as another object,False,10.0,5.0,0.0,4.0,20.0,0.1489035624407506,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg62,5.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9,0.8421052631578947,True
11,325.0,blue and same shape as another object,False,11.0,5.0,0.0,4.0,20.0,0.2190658209166258,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg62,5.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9,0.8421052631578947,True
12,326.0,blue and same shape as another object,False,12.0,5.0,0.0,11.0,13.0,0.237070554275192,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg62,5.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9,0.8421052631578947,True
13,327.0,blue and same shape as another object,False,13.0,5.0,1.0,6.0,18.0,0.262013889188438,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,5.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.9,0.8421052631578947,True
14,328.0,blue and same shape as another object,False,14.0,6.0,0.0,4.0,19.0,0.2009453599396238,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,6.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8571428571428571,0.8421052631578947,True
15,329.0,blue and same shape as another object,False,15.0,6.0,0.0,6.0,17.0,0.2311841434423058,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,6.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8571428571428571,0.8421052631578947,True
16,330.0,blue and same shape as another object,False,16.0,6.0,1.0,20.0,3.0,0.5226673650394105,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,6.0,True,True,True,False,0.8727272727272727,0.7340720221606647,0.8571428571428571,0.8421052631578947,False
17,331.0,blue and same shape as another object,False,17.0,6.0,0.0,5.0,18.0,0.0772829839606856,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,6.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8571428571428571,0.8421052631578947,True
18,332.0,blue and same shape as another object,False,18.0,7.0,0.0,2.0,21.0,0.0239805694682218,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,7.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8333333333333334,0.8421052631578947,True
19,333.0,blue and same shape as another object,False,19.0,7.0,0.0,3.0,20.0,0.0414397210381594,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,7.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8333333333333334,0.8421052631578947,True
20,334.0,blue and same shape as another object,False,20.0,8.0,0.0,3.0,20.0,0.093227599415627,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg62,8.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.85,0.8421052631578947,True
21,335.0,blue and same shape as another object,False,21.0,8.0,0.0,4.0,19.0,0.0595837503162783,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,8.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.85,0.8421052631578947,True
22,336.0,blue and same shape as another object,False,22.0,8.0,0.0,2.0,21.0,0.0521086907154995,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,8.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.85,0.8421052631578947,True
23,337.0,blue and same shape as another object,False,23.0,9.0,0.0,0.0,23.0,0.1288751780650727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg62,9.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8695652173913043,0.8421052631578947,True
24,338.0,blue and same shape as another object,False,24.0,9.0,0.0,8.0,15.0,0.4385301453719421,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg62,9.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8695652173913043,0.8421052631578947,True
25,339.0,blue and same shape as another object,False,25.0,9.0,1.0,12.0,11.0,0.3563367093685201,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg62,9.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.8695652173913043,0.8421052631578947,True
26,340.0,blue and same shape as another object,False,26.0,9.0,0.0,0.0,23.0,0.122211583025205,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,9.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8695652173913043,0.8421052631578947,True
27,341.0,blue and same shape as another object,False,27.0,9.0,0.0,2.0,21.0,0.0137419039925816,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,9.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8695652173913043,0.8421052631578947,True
28,342.0,blue and same shape as another object,False,28.0,10.0,0.0,0.0,22.0,0.0325177336833348,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg62,10.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8571428571428571,0.8421052631578947,True
29,343.0,blue and same shape as another object,False,29.0,11.0,0.0,11.0,11.0,0.3658005283722332,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,11.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8620689655172413,0.8421052631578947,True
30,344.0,blue and same shape as another object,False,30.0,11.0,0.0,2.0,20.0,0.11217468115683,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg62,11.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8620689655172413,0.8421052631578947,True
31,345.0,blue and same shape as another object,False,31.0,11.0,0.0,16.0,6.0,0.4220435026741143,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,11.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8620689655172413,0.8421052631578947,True
32,346.0,blue and same shape as another object,False,32.0,11.0,0.0,2.0,20.0,0.0997224784574655,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg62,11.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8620689655172413,0.8421052631578947,True
33,347.0,blue and same shape as another object,False,33.0,12.0,0.0,4.0,18.0,0.0520056257580563,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,12.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8787878787878788,0.8421052631578947,True
34,348.0,blue and same shape as another object,False,34.0,12.0,1.0,15.0,7.0,0.1844449262928265,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg62,12.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.8787878787878788,0.8421052631578947,True
35,349.0,blue and same shape as another object,False,35.0,12.0,0.0,3.0,19.0,0.208347566322459,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg62,12.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8787878787878788,0.8421052631578947,True
36,350.0,blue and same shape as another object,False,36.0,12.0,0.0,1.0,21.0,0.0601166254662075,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,12.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8787878787878788,0.8421052631578947,True
37,351.0,blue and same shape as another object,False,37.0,13.0,1.0,4.0,18.0,0.3514077177649142,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg62,13.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.8648648648648649,0.8421052631578947,True
38,352.0,blue and same shape as another object,False,38.0,13.0,0.0,1.0,21.0,0.0146522383538467,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,13.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8648648648648649,0.8421052631578947,True
39,353.0,blue and same shape as another object,False,39.0,13.0,0.0,1.0,21.0,0.0227401078687989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg62,13.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8648648648648649,0.8421052631578947,True
40,354.0,blue and same shape as another object,False,40.0,13.0,0.0,0.0,22.0,0.030200073084643,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg62,13.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8648648648648649,0.8421052631578947,True
41,355.0,blue and same shape as another object,False,41.0,14.0,0.0,1.0,21.0,0.0087888338358652,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,14.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8536585365853658,0.8421052631578947,True
42,356.0,blue and same shape as another object,False,42.0,14.0,1.0,18.0,4.0,0.3944630510900424,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg62,14.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.8536585365853658,0.8421052631578947,True
43,357.0,blue and same shape as another object,False,43.0,15.0,0.0,2.0,20.0,0.0335976128824313,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,15.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8372093023255814,0.8421052631578947,True
44,358.0,blue and same shape as another object,False,44.0,15.0,1.0,17.0,5.0,0.7500312168357368,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg62,15.0,True,True,True,False,0.8727272727272727,0.7340720221606647,0.8372093023255814,0.8421052631578947,False
45,359.0,blue and same shape as another object,False,45.0,15.0,0.0,1.0,21.0,0.0346233830830442,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg62,15.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8372093023255814,0.8421052631578947,True
46,360.0,blue and same shape as another object,False,46.0,16.0,0.0,2.0,20.0,0.0140695330585458,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow triangle,hg62,16.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9130434782608695,0.881578947368421,True
47,361.0,blue and same shape as another object,False,47.0,17.0,0.0,1.0,21.0,0.0409502770626204,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg62,17.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8297872340425532,0.8421052631578947,True
48,362.0,blue and same shape as another object,False,48.0,17.0,0.0,1.0,21.0,0.0109251527360356,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg62,17.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8297872340425532,0.8421052631578947,True
49,363.0,blue and same shape as another object,False,49.0,18.0,1.0,18.0,4.0,0.5685655835250145,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,18.0,True,True,True,False,0.8727272727272727,0.7340720221606647,0.8367346938775511,0.8421052631578947,False
50,364.0,blue and same shape as another object,False,50.0,18.0,1.0,9.0,13.0,0.4168364729224549,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg62,18.0,True,False,True,False,0.8727272727272727,0.7340720221606647,0.8367346938775511,0.8421052631578947,True
51,365.0,blue and same shape as another object,False,51.0,18.0,0.0,1.0,21.0,0.0225150475093869,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg62,18.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8367346938775511,0.8421052631578947,True
52,366.0,blue and same shape as another object,False,52.0,18.0,0.0,0.0,22.0,0.0601612908773177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg62,18.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8367346938775511,0.8421052631578947,True
53,367.0,blue and same shape as another object,False,53.0,18.0,0.0,1.0,21.0,0.020365523908481,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg62,18.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8367346938775511,0.8421052631578947,True
54,368.0,blue and same shape as another object,False,54.0,19.0,1.0,18.0,4.0,0.9225306629572289,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg62,19.0,True,True,True,True,0.8727272727272727,0.7340720221606647,0.8703703703703703,0.868421052631579,True
55,369.0,blue and same shape as another object,False,55.0,19.0,0.0,0.0,22.0,0.0015125207817163,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg62,19.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8703703703703703,0.868421052631579,True
56,370.0,blue and same shape as another object,False,56.0,19.0,0.0,1.0,21.0,0.00605726574247,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg62,19.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8703703703703703,0.868421052631579,True
57,371.0,blue and same shape as another object,False,57.0,19.0,0.0,1.0,21.0,0.0166600496373803,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg62,19.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8703703703703703,0.868421052631579,True
58,372.0,blue and same shape as another object,False,58.0,20.0,0.0,1.0,21.0,0.0004698926554738,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg62,20.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8793103448275862,0.868421052631579,True
59,373.0,blue and same shape as another object,False,59.0,20.0,0.0,1.0,21.0,0.0086014000462455,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg62,20.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8793103448275862,0.868421052631579,True
60,374.0,blue and same shape as another object,False,60.0,20.0,0.0,1.0,21.0,0.0018351094204263,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg62,20.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8793103448275862,0.868421052631579,True
61,375.0,blue and same shape as another object,False,61.0,20.0,0.0,2.0,20.0,0.0021331568838149,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg62,20.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8793103448275862,0.868421052631579,True
62,376.0,blue and same shape as another object,False,62.0,21.0,0.0,0.0,22.0,0.0032544379511136,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg62,21.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8870967741935484,0.868421052631579,True
63,377.0,blue and same shape as another object,False,63.0,21.0,0.0,0.0,22.0,0.0057775820773713,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg62,21.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8870967741935484,0.868421052631579,True
64,378.0,blue and same shape as another object,False,64.0,21.0,0.0,0.0,22.0,0.001692141340186,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg62,21.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8870967741935484,0.868421052631579,True
65,379.0,blue and same shape as another object,False,65.0,22.0,0.0,8.0,14.0,0.5732880770169686,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg62,22.0,False,True,True,True,0.8727272727272727,0.7340720221606647,0.8923076923076924,0.868421052631579,True
66,380.0,blue and same shape as another object,False,66.0,23.0,0.0,11.0,11.0,0.33908085428709,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg62,23.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8333333333333334,0.8421052631578947,True
67,381.0,blue and same shape as another object,False,67.0,23.0,0.0,2.0,20.0,0.0110341019764064,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg62,23.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8333333333333334,0.8421052631578947,True
68,382.0,blue and same shape as another object,False,68.0,24.0,0.0,1.0,21.0,0.0138607064704956,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg62,24.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8382352941176471,0.8421052631578947,True
69,383.0,blue and same shape as another object,False,69.0,24.0,0.0,1.0,21.0,0.0095515705744446,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg62,24.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8382352941176471,0.8421052631578947,True
70,384.0,blue and same shape as another object,False,70.0,24.0,0.0,2.0,20.0,0.0467102516500972,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg62,24.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.8382352941176471,0.8421052631578947,True
71,385.0,blue and same shape as another object,False,71.0,24.0,1.0,19.0,3.0,0.6534449605237569,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg62,24.0,True,True,True,False,0.8727272727272727,0.7340720221606647,0.8382352941176471,0.8421052631578947,False
72,386.0,blue and same shape as another object,False,72.0,25.0,0.0,2.0,20.0,0.0056105704450146,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large green circle,hg62,25.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9027777777777778,0.8947368421052632,True
73,387.0,blue and same shape as another object,False,73.0,25.0,0.0,0.0,22.0,0.0097734078618714,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green rectangle,hg62,25.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9027777777777778,0.8947368421052632,True
74,388.0,blue and same shape as another object,False,74.0,25.0,0.0,16.0,6.0,0.8759064844567774,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large blue triangle,hg62,25.0,False,True,True,True,0.8727272727272727,0.7340720221606647,0.9027777777777778,0.8947368421052632,True
75,389.0,blue and same shape as another object,False,75.0,25.0,0.0,1.0,21.0,0.0089865216846192,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg62,25.0,False,False,True,False,0.8727272727272727,0.7340720221606647,0.9027777777777778,0.8947368421052632,True
76,1559.0,larger than all other objects,False,0.0,1.0,0.0,14.0,9.0,0.4509910277720337,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg29,1.0,False,False,True,True,0.9021739130434784,0.6591058514135437,,0.21794871794871795,False
77,1560.0,larger than all other objects,False,1.0,1.0,0.0,15.0,8.0,0.4159405455546903,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg29,1.0,False,False,True,True,0.9021739130434784,0.6591058514135437,,0.21794871794871795,False
78,1561.0,larger than all other objects,False,2.0,2.0,0.0,9.0,14.0,0.3373488191178921,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg29,2.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
79,1562.0,larger than all other objects,False,3.0,2.0,0.0,8.0,15.0,0.3582846733767155,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg29,2.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
80,1563.0,larger than all other objects,False,4.0,2.0,0.0,5.0,18.0,0.2753194225313109,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg29,2.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
81,1564.0,larger than all other objects,False,5.0,2.0,0.0,10.0,13.0,0.4753785794262057,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg29,2.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
82,1565.0,larger than all other objects,False,6.0,2.0,0.0,9.0,14.0,0.4185487144181934,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg29,2.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
83,1566.0,larger than all other objects,False,7.0,3.0,1.0,8.0,15.0,0.1280930199595786,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg29,3.0,True,False,True,False,0.9021739130434784,0.6591058514135437,1.0,0.782051282051282,True
84,1567.0,larger than all other objects,False,8.0,4.0,1.0,14.0,9.0,0.3792277315702677,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,4.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
85,1568.0,larger than all other objects,False,9.0,4.0,0.0,5.0,18.0,0.1474752925925031,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg29,4.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
86,1569.0,larger than all other objects,False,10.0,4.0,0.0,12.0,11.0,0.3698894439691003,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg29,4.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
87,1570.0,larger than all other objects,False,11.0,4.0,0.0,4.0,19.0,0.135161902222535,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg29,4.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
88,1571.0,larger than all other objects,False,12.0,4.0,0.0,4.0,19.0,0.2559184968025647,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg29,4.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
89,1572.0,larger than all other objects,False,13.0,5.0,0.0,2.0,21.0,0.0451016368127739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg29,5.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
90,1573.0,larger than all other objects,False,14.0,5.0,0.0,2.0,21.0,0.1125519878645491,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg29,5.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
91,1574.0,larger than all other objects,False,15.0,5.0,0.0,4.0,19.0,0.134041329560091,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg29,5.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
92,1575.0,larger than all other objects,False,16.0,6.0,0.0,1.0,22.0,0.0953130186757107,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg29,6.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
93,1576.0,larger than all other objects,False,17.0,6.0,1.0,4.0,19.0,0.312976387902836,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg29,6.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
94,1577.0,larger than all other objects,False,18.0,6.0,0.0,19.0,4.0,0.280014104864108,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg29,6.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.875,0.782051282051282,True
95,1578.0,larger than all other objects,False,19.0,7.0,0.0,0.0,23.0,0.0741402078763258,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg29,7.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8421052631578947,0.782051282051282,True
96,1579.0,larger than all other objects,False,20.0,7.0,0.0,1.0,22.0,0.0220898070438124,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg29,7.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8421052631578947,0.782051282051282,True
97,1580.0,larger than all other objects,False,21.0,7.0,1.0,19.0,4.0,0.1561009749924551,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,7.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.8421052631578947,0.782051282051282,True
98,1581.0,larger than all other objects,False,22.0,8.0,1.0,13.0,10.0,0.2757199660702554,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg29,8.0,True,False,True,True,0.9021739130434784,0.6591058514135437,0.8181818181818182,0.782051282051282,False
99,1582.0,larger than all other objects,False,23.0,9.0,0.0,6.0,17.0,0.1118995540127798,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue triangle,hg29,9.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8260869565217391,0.782051282051282,True
100,1583.0,larger than all other objects,False,24.0,9.0,0.0,10.0,13.0,0.2317602095043867,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,9.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8260869565217391,0.782051282051282,True
101,1584.0,larger than all other objects,False,25.0,9.0,0.0,4.0,19.0,0.0607904080939079,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small green triangle,hg29,9.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8260869565217391,0.782051282051282,True
102,1585.0,larger than all other objects,False,26.0,10.0,0.0,4.0,19.0,0.0824250394731507,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green triangle,hg29,10.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
103,1586.0,larger than all other objects,False,27.0,10.0,1.0,18.0,5.0,0.5290239694442107,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg29,10.0,True,True,True,True,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
104,1587.0,larger than all other objects,False,28.0,10.0,0.0,1.0,22.0,0.0345587976503338,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg29,10.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8461538461538461,0.782051282051282,True
105,1588.0,larger than all other objects,False,29.0,11.0,1.0,20.0,3.0,0.2224523906585318,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,11.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.8620689655172413,0.782051282051282,True
106,1589.0,larger than all other objects,False,30.0,11.0,0.0,2.0,21.0,0.0302132626518414,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue triangle,hg29,11.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8620689655172413,0.782051282051282,True
107,1590.0,larger than all other objects,False,31.0,12.0,1.0,14.0,9.0,0.2163164504870565,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow rectangle,hg29,12.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.8387096774193549,0.782051282051282,True
108,1591.0,larger than all other objects,False,32.0,13.0,0.0,1.0,22.0,0.248388906205605,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg29,13.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8125,0.782051282051282,True
109,1592.0,larger than all other objects,False,33.0,13.0,0.0,4.0,19.0,0.4505745757832073,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg29,13.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8125,0.782051282051282,False
110,1593.0,larger than all other objects,False,34.0,13.0,0.0,6.0,17.0,0.4157772464625395,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg29,13.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8125,0.782051282051282,False
111,1594.0,larger than all other objects,False,35.0,13.0,0.0,8.0,15.0,0.4862096279458683,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large yellow circle,hg29,13.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8125,0.782051282051282,False
112,1595.0,larger than all other objects,False,36.0,13.0,0.0,4.0,19.0,0.2894599210235355,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow circle,hg29,13.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8125,0.782051282051282,True
113,1596.0,larger than all other objects,False,37.0,14.0,1.0,20.0,3.0,0.3691415663390671,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,14.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.7837837837837838,0.782051282051282,True
114,1597.0,larger than all other objects,False,38.0,14.0,0.0,2.0,21.0,0.0339952204674318,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg29,14.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7837837837837838,0.782051282051282,True
115,1598.0,larger than all other objects,False,39.0,14.0,0.0,2.0,21.0,0.0590524528203104,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg29,14.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7837837837837838,0.782051282051282,True
116,1599.0,larger than all other objects,False,40.0,15.0,0.0,1.0,22.0,0.0726494833496644,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue circle,hg29,15.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
117,1600.0,larger than all other objects,False,41.0,15.0,0.0,3.0,20.0,0.0649200684441666,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green rectangle,hg29,15.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
118,1601.0,larger than all other objects,False,42.0,16.0,0.0,2.0,21.0,0.1649484296070795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg29,16.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7857142857142857,0.782051282051282,True
119,1602.0,larger than all other objects,False,43.0,16.0,0.0,4.0,19.0,0.1461690854483777,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg29,16.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7857142857142857,0.782051282051282,True
120,1603.0,larger than all other objects,False,44.0,16.0,0.0,2.0,21.0,0.1577850845684452,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg29,16.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7857142857142857,0.782051282051282,True
121,1604.0,larger than all other objects,False,45.0,16.0,0.0,5.0,18.0,0.2403519966695739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,16.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7857142857142857,0.782051282051282,True
122,1605.0,larger than all other objects,False,46.0,16.0,0.0,2.0,21.0,0.1579775200635822,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg29,16.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.7857142857142857,0.782051282051282,True
123,1606.0,larger than all other objects,False,47.0,17.0,1.0,21.0,2.0,0.3767470784815714,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg29,17.0,True,False,True,False,0.9021739130434784,0.6591058514135437,0.8085106382978723,0.782051282051282,True
124,1607.0,larger than all other objects,False,48.0,18.0,1.0,18.0,5.0,0.4809516095025401,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue circle,hg29,18.0,True,False,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,False
125,1608.0,larger than all other objects,False,49.0,18.0,0.0,2.0,21.0,0.0145626182818432,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small yellow triangle,hg29,18.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
126,1609.0,larger than all other objects,False,50.0,18.0,0.0,1.0,22.0,0.0267615334927313,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green triangle,hg29,18.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
127,1610.0,larger than all other objects,False,51.0,18.0,0.0,3.0,20.0,0.0305867628775331,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow triangle,hg29,18.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
128,1611.0,larger than all other objects,False,52.0,18.0,0.0,1.0,22.0,0.0912619248919099,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green circle,hg29,18.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
129,1612.0,larger than all other objects,False,53.0,19.0,0.0,1.0,22.0,0.0267584322315315,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small blue triangle,hg29,19.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
130,1613.0,larger than all other objects,False,54.0,19.0,1.0,20.0,3.0,0.6847566597645027,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow rectangle,hg29,19.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
131,1614.0,larger than all other objects,False,55.0,20.0,0.0,1.0,22.0,0.0690275491793954,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue triangle,hg29,20.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
132,1615.0,larger than all other objects,False,56.0,20.0,0.0,1.0,22.0,0.1108010653235851,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue rectangle,hg29,20.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
133,1616.0,larger than all other objects,False,57.0,20.0,1.0,19.0,4.0,0.7813292951711901,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue rectangle,hg29,20.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
134,1617.0,larger than all other objects,False,58.0,20.0,0.0,1.0,22.0,0.0094377564735168,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small yellow triangle,hg29,20.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
135,1618.0,larger than all other objects,False,59.0,21.0,0.0,2.0,21.0,0.0246769884073501,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue rectangle,hg29,21.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
136,1619.0,larger than all other objects,False,60.0,21.0,0.0,1.0,22.0,0.0225585906213154,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium blue circle,hg29,21.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
137,1620.0,larger than all other objects,False,61.0,21.0,0.0,1.0,22.0,0.024743365278482,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,21.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
138,1621.0,larger than all other objects,False,62.0,21.0,1.0,22.0,1.0,0.8711333035331563,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large blue rectangle,hg29,21.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
139,1622.0,larger than all other objects,False,63.0,21.0,0.0,2.0,21.0,0.0243624839263247,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow circle,hg29,21.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
140,1623.0,larger than all other objects,False,64.0,22.0,0.0,1.0,22.0,0.0142210834253546,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green triangle,hg29,22.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
141,1624.0,larger than all other objects,False,65.0,22.0,1.0,19.0,4.0,0.7696252125531373,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow triangle,hg29,22.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
142,1625.0,larger than all other objects,False,66.0,22.0,0.0,0.0,23.0,0.0053486926353798,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green triangle,hg29,22.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
143,1626.0,larger than all other objects,False,67.0,23.0,0.0,5.0,18.0,0.2963160406770839,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue triangle,hg29,23.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8059701492537313,0.782051282051282,False
144,1627.0,larger than all other objects,False,68.0,23.0,0.0,5.0,18.0,0.2760266779230278,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg29,23.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8059701492537313,0.782051282051282,False
145,1628.0,larger than all other objects,False,69.0,23.0,0.0,5.0,18.0,0.2771442206002348,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green circle,hg29,23.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8059701492537313,0.782051282051282,False
146,1629.0,larger than all other objects,False,70.0,23.0,0.0,0.0,23.0,0.0127515238179967,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium green rectangle,hg29,23.0,False,False,True,False,0.9021739130434784,0.6591058514135437,0.8059701492537313,0.782051282051282,True
147,1630.0,larger than all other objects,False,71.0,23.0,0.0,4.0,19.0,0.3003811683389585,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green rectangle,hg29,23.0,False,False,True,True,0.9021739130434784,0.6591058514135437,0.8059701492537313,0.782051282051282,False
148,1631.0,larger than all other objects,False,72.0,24.0,1.0,20.0,3.0,0.7775850641311308,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large green triangle,hg29,24.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
149,1632.0,larger than all other objects,False,73.0,24.0,0.0,3.0,20.0,0.0299312036765968,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg29,24.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
150,1633.0,larger than all other objects,False,74.0,24.0,0.0,1.0,22.0,0.0172542644099849,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,24.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
151,1634.0,larger than all other objects,False,75.0,25.0,0.0,2.0,21.0,0.0111650368776281,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",small green rectangle,hg29,25.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
152,1635.0,larger than all other objects,False,76.0,25.0,0.0,0.0,23.0,0.0084155630275972,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",medium green circle,hg29,25.0,False,False,True,False,0.9021739130434784,0.6591058514135437,1.0,1.0,True
153,1636.0,larger than all other objects,False,77.0,25.0,1.0,20.0,3.0,0.8823822223617981,"""λx.apply1(apply2(same_color,x.o),iota(filter(apply2(size-geq,x.o), x.s)))""
",strictly larger than all other objects,"def is_rule(obj):
    return np.sum([obj.size_num <= x.size_num for x in obj.current_set.objs]) == 1",large yellow triangle,hg29,25.0,True,True,True,True,0.9021739130434784,0.6591058514135437,1.0,1.0,True
154,2243.0,same shape as another object that is blue,False,0.0,1.0,0.0,17.0,9.0,0.3564421919421647,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg72,1.0,False,False,True,True,0.7782608695652175,0.6831717451523545,,0.19736842105263158,False
155,2244.0,same shape as another object that is blue,False,1.0,2.0,0.0,7.0,19.0,0.2806495441568586,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,2.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
156,2245.0,same shape as another object that is blue,False,2.0,2.0,0.0,9.0,17.0,0.4551586325155767,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg72,2.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
157,2246.0,same shape as another object that is blue,False,3.0,3.0,0.0,7.0,19.0,0.2904155191130257,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,3.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
158,2247.0,same shape as another object that is blue,False,4.0,3.0,0.0,3.0,23.0,0.1143534568436734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,3.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
159,2248.0,same shape as another object that is blue,False,5.0,4.0,1.0,11.0,15.0,0.3421018827564239,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,4.0,True,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
160,2249.0,same shape as another object that is blue,False,6.0,4.0,0.0,10.0,16.0,0.4048913430984839,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg72,4.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
161,2250.0,same shape as another object that is blue,False,7.0,4.0,0.0,5.0,21.0,0.1449675854414636,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,4.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,0.8026315789473685,True
162,2251.0,same shape as another object that is blue,False,8.0,5.0,1.0,1.0,25.0,0.0952015935777126,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,5.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.875,0.8026315789473685,True
163,2252.0,same shape as another object that is blue,False,9.0,5.0,0.0,2.0,24.0,0.1426428119874572,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg72,5.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.875,0.8026315789473685,True
164,2253.0,same shape as another object that is blue,False,10.0,5.0,0.0,3.0,23.0,0.2812785607791284,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg72,5.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.875,0.8026315789473685,True
165,2254.0,same shape as another object that is blue,False,11.0,5.0,0.0,3.0,23.0,0.208430576267915,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg72,5.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.875,0.8026315789473685,True
166,2255.0,same shape as another object that is blue,False,12.0,5.0,0.0,19.0,7.0,0.5340755119674441,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,5.0,False,True,True,False,0.7782608695652175,0.6831717451523545,0.875,0.8026315789473685,False
167,2256.0,same shape as another object that is blue,False,13.0,6.0,0.0,13.0,13.0,0.0970625371049891,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,6.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8461538461538461,0.8026315789473685,True
168,2257.0,same shape as another object that is blue,False,14.0,6.0,1.0,2.0,24.0,0.2689850865355083,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg72,6.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.8461538461538461,0.8026315789473685,True
169,2258.0,same shape as another object that is blue,False,15.0,6.0,0.0,0.0,26.0,0.1969100186904597,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg72,6.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8461538461538461,0.8026315789473685,True
170,2259.0,same shape as another object that is blue,False,16.0,6.0,1.0,13.0,13.0,0.2396094420530516,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,6.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.8461538461538461,0.8026315789473685,True
171,2260.0,same shape as another object that is blue,False,17.0,7.0,0.0,3.0,23.0,0.0956007463331616,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,7.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7647058823529411,0.8026315789473685,True
172,2261.0,same shape as another object that is blue,False,18.0,8.0,0.0,5.0,20.0,0.0992399214117085,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg72,8.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7777777777777778,0.8026315789473685,True
173,2262.0,same shape as another object that is blue,False,19.0,8.0,0.0,13.0,12.0,0.2531767107004725,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg72,8.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7777777777777778,0.8026315789473685,True
174,2263.0,same shape as another object that is blue,False,20.0,8.0,0.0,10.0,15.0,0.1427402432392455,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg72,8.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7777777777777778,0.8026315789473685,True
175,2264.0,same shape as another object that is blue,False,21.0,8.0,1.0,14.0,11.0,0.5489527145120974,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg72,8.0,True,True,True,False,0.7782608695652175,0.6831717451523545,0.7777777777777778,0.8026315789473685,False
176,2265.0,same shape as another object that is blue,False,22.0,9.0,0.0,12.0,13.0,0.020663726713451,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",small green triangle,hg72,9.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.9090909090909091,0.6447368421052632,True
177,2266.0,same shape as another object that is blue,False,23.0,9.0,0.0,2.0,23.0,0.1015896539208824,"""λx.apply1(compose11(compose8(and,compose11(compose8(or,yellow),green)),circle),x.o)""
",(yellow or green) and circle,"def is_rule(obj):
    return (obj.yellow or obj.green) and obj.circle",medium blue rectangle,hg72,9.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.9090909090909091,0.6447368421052632,True
178,2267.0,same shape as another object that is blue,False,24.0,10.0,0.0,15.0,10.0,0.6217855669020764,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg72,10.0,False,True,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,False
179,2268.0,same shape as another object that is blue,False,25.0,10.0,0.0,7.0,18.0,0.0130875894691371,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,10.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,True
180,2269.0,same shape as another object that is blue,False,26.0,11.0,0.0,12.0,11.0,0.2940210727949761,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,11.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8076923076923077,0.8026315789473685,True
181,2270.0,same shape as another object that is blue,False,27.0,11.0,0.0,4.0,19.0,0.0973382461771734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg72,11.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8076923076923077,0.8026315789473685,True
182,2271.0,same shape as another object that is blue,False,28.0,11.0,0.0,2.0,21.0,0.0607303391220739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,11.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8076923076923077,0.8026315789473685,True
183,2272.0,same shape as another object that is blue,False,29.0,12.0,0.0,1.0,22.0,0.1136849049681814,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,12.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8275862068965517,0.8026315789473685,True
184,2273.0,same shape as another object that is blue,False,30.0,12.0,0.0,2.0,21.0,0.0940136913828837,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg72,12.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8275862068965517,0.8026315789473685,True
185,2274.0,same shape as another object that is blue,False,31.0,12.0,0.0,4.0,19.0,0.1086081629641739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,12.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8275862068965517,0.8026315789473685,True
186,2275.0,same shape as another object that is blue,False,32.0,13.0,0.0,1.0,22.0,0.1245108497961382,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,13.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.84375,0.8026315789473685,True
187,2276.0,same shape as another object that is blue,False,33.0,13.0,0.0,3.0,20.0,0.0839032356383313,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg72,13.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.84375,0.8026315789473685,True
188,2277.0,same shape as another object that is blue,False,34.0,13.0,0.0,7.0,16.0,0.2384319390687324,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg72,13.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.84375,0.8026315789473685,True
189,2278.0,same shape as another object that is blue,False,35.0,13.0,0.0,13.0,10.0,0.1854394904613627,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,13.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.84375,0.8026315789473685,True
190,2279.0,same shape as another object that is blue,False,36.0,13.0,0.0,12.0,11.0,0.0947092978435648,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,13.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.84375,0.8026315789473685,True
191,2280.0,same shape as another object that is blue,False,37.0,14.0,0.0,4.0,19.0,0.0594119100675243,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg72,14.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8648648648648649,0.8026315789473685,True
192,2281.0,same shape as another object that is blue,False,38.0,14.0,1.0,1.0,22.0,0.1230592623902566,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg72,14.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.8648648648648649,0.8026315789473685,True
193,2282.0,same shape as another object that is blue,False,39.0,14.0,1.0,1.0,22.0,0.1802680767324318,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg72,14.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.8648648648648649,0.8026315789473685,True
194,2283.0,same shape as another object that is blue,False,40.0,15.0,0.0,6.0,17.0,0.0690951178773957,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,15.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.825,0.8026315789473685,True
195,2284.0,same shape as another object that is blue,False,41.0,15.0,0.0,6.0,17.0,0.073165694786212,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,15.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.825,0.8026315789473685,True
196,2285.0,same shape as another object that is blue,False,42.0,15.0,1.0,14.0,9.0,0.2108932843750608,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg72,15.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.825,0.8026315789473685,True
197,2286.0,same shape as another object that is blue,False,43.0,15.0,1.0,16.0,7.0,0.3394874487418065,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg72,15.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.825,0.8026315789473685,True
198,2287.0,same shape as another object that is blue,False,44.0,15.0,1.0,10.0,13.0,0.131577942503327,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg72,15.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.825,0.8026315789473685,True
199,2288.0,same shape as another object that is blue,False,45.0,16.0,0.0,3.0,20.0,0.0262395308068335,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium green circle,hg72,16.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8,0.8157894736842105,True
200,2289.0,same shape as another object that is blue,False,46.0,16.0,0.0,2.0,21.0,0.0177609607227395,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium yellow rectangle,hg72,16.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8,0.8157894736842105,True
201,2290.0,same shape as another object that is blue,False,47.0,16.0,1.0,14.0,9.0,0.4574862380859485,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium yellow triangle,hg72,16.0,True,False,True,False,0.7782608695652175,0.6831717451523545,0.8,0.8157894736842105,True
202,2291.0,same shape as another object that is blue,False,48.0,16.0,0.0,10.0,13.0,0.2183442927851047,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small blue triangle,hg72,16.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.8,0.8157894736842105,True
203,2292.0,same shape as another object that is blue,False,49.0,17.0,0.0,6.0,17.0,0.1135726098367513,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,17.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
204,2293.0,same shape as another object that is blue,False,50.0,17.0,1.0,14.0,9.0,0.4773895187780681,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green rectangle,hg72,17.0,True,False,True,True,0.7782608695652175,0.6831717451523545,1.0,1.0,False
205,2294.0,same shape as another object that is blue,False,51.0,17.0,0.0,3.0,20.0,0.0328592597694523,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg72,17.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
206,2295.0,same shape as another object that is blue,False,52.0,17.0,1.0,13.0,10.0,0.4782427554428068,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow rectangle,hg72,17.0,True,False,True,True,0.7782608695652175,0.6831717451523545,1.0,1.0,False
207,2296.0,same shape as another object that is blue,False,53.0,17.0,0.0,4.0,19.0,0.1047521206281771,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg72,17.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
208,2297.0,same shape as another object that is blue,False,54.0,18.0,0.0,6.0,17.0,0.0646974983748123,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,18.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
209,2298.0,same shape as another object that is blue,False,55.0,18.0,0.0,4.0,19.0,0.0232754211630208,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green circle,hg72,18.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
210,2299.0,same shape as another object that is blue,False,56.0,18.0,0.0,7.0,16.0,0.0285077954997632,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue triangle,hg72,18.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
211,2300.0,same shape as another object that is blue,False,57.0,18.0,1.0,16.0,7.0,0.7251052939095644,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow rectangle,hg72,18.0,True,True,True,True,0.7782608695652175,0.6831717451523545,1.0,1.0,True
212,2301.0,same shape as another object that is blue,False,58.0,18.0,1.0,15.0,8.0,0.7319380512043381,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green triangle,hg72,18.0,True,True,True,True,0.7782608695652175,0.6831717451523545,1.0,1.0,True
213,2302.0,same shape as another object that is blue,False,59.0,19.0,0.0,3.0,20.0,0.0071080123976798,"""λx.exists(apply3(same_shape,x.o), filter(blue, filter(compose11(compose8(compose6(or,not),apply3(same_color,x.o)),apply2(same_size,x.o)), x.s)))""
",there is a blue object that is not the same-size or not the same-color but the same shape,"def is_rule(obj):
    return np.any([x.blue and ((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg72,19.0,False,False,True,False,0.7782608695652175,0.6831717451523545,1.0,1.0,True
214,2303.0,same shape as another object that is blue,False,60.0,20.0,0.0,1.0,22.0,0.031104088200891,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small blue circle,hg72,20.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7166666666666667,0.6973684210526315,True
215,2304.0,same shape as another object that is blue,False,61.0,20.0,0.0,7.0,16.0,0.3342192873643625,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue rectangle,hg72,20.0,False,False,True,True,0.7782608695652175,0.6831717451523545,0.7166666666666667,0.6973684210526315,False
216,2305.0,same shape as another object that is blue,False,62.0,21.0,0.0,3.0,20.0,0.0174040547233289,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",medium green circle,hg72,21.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7903225806451613,0.8157894736842105,True
217,2306.0,same shape as another object that is blue,False,63.0,22.0,0.0,13.0,10.0,0.2134351157023957,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg72,22.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7619047619047619,0.8026315789473685,True
218,2307.0,same shape as another object that is blue,False,64.0,22.0,0.0,2.0,21.0,0.033770761516962,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg72,22.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7619047619047619,0.8026315789473685,True
219,2308.0,same shape as another object that is blue,False,65.0,22.0,0.0,1.0,22.0,0.0666498956909436,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg72,22.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7619047619047619,0.8026315789473685,True
220,2309.0,same shape as another object that is blue,False,66.0,22.0,0.0,7.0,16.0,0.1901326190819645,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg72,22.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7619047619047619,0.8026315789473685,True
221,2310.0,same shape as another object that is blue,False,67.0,23.0,0.0,1.0,22.0,0.0236955173095338,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg72,23.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7761194029850746,0.8026315789473685,True
222,2311.0,same shape as another object that is blue,False,68.0,23.0,0.0,12.0,11.0,0.1778960947515315,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg72,23.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7761194029850746,0.8026315789473685,True
223,2312.0,same shape as another object that is blue,False,69.0,23.0,0.0,0.0,23.0,0.0354155605364212,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg72,23.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7761194029850746,0.8026315789473685,True
224,2313.0,same shape as another object that is blue,False,70.0,23.0,0.0,5.0,18.0,0.0771495401479569,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg72,23.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7761194029850746,0.8026315789473685,True
225,2314.0,same shape as another object that is blue,False,71.0,24.0,0.0,4.0,19.0,0.0348516651749832,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg72,24.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7887323943661971,0.8026315789473685,True
226,2315.0,same shape as another object that is blue,False,72.0,25.0,0.0,12.0,11.0,0.1391259594296343,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg72,25.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,True
227,2316.0,same shape as another object that is blue,False,73.0,25.0,0.0,2.0,21.0,0.0364522229864405,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg72,25.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,True
228,2317.0,same shape as another object that is blue,False,74.0,25.0,0.0,2.0,21.0,0.0608077307160783,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg72,25.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,True
229,2318.0,same shape as another object that is blue,False,75.0,25.0,0.0,5.0,18.0,0.095553256613357,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg72,25.0,False,False,True,False,0.7782608695652175,0.6831717451523545,0.7916666666666666,0.8026315789473685,True
230,2391.0,exists another object of the same shape that is blue,False,0.0,1.0,0.0,12.0,12.0,0.4513961497743821,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg89,1.0,False,False,True,True,0.761904761904762,0.654320987654321,,0.2222222222222222,False
231,2392.0,exists another object of the same shape that is blue,False,1.0,2.0,0.0,11.0,13.0,0.4498018967907455,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,2.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,0.7777777777777778,True
232,2393.0,exists another object of the same shape that is blue,False,2.0,2.0,0.0,3.0,21.0,0.3219275156112644,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,2.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,0.7777777777777778,True
233,2394.0,exists another object of the same shape that is blue,False,3.0,2.0,1.0,11.0,13.0,0.3450832132270989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,2.0,True,False,True,False,0.761904761904762,0.654320987654321,1.0,0.7777777777777778,True
234,2395.0,exists another object of the same shape that is blue,False,4.0,2.0,1.0,12.0,12.0,0.386945847824677,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg89,2.0,True,False,True,False,0.761904761904762,0.654320987654321,1.0,0.7777777777777778,True
235,2396.0,exists another object of the same shape that is blue,False,5.0,2.0,1.0,9.0,15.0,0.3392934118243147,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg89,2.0,True,False,True,False,0.761904761904762,0.654320987654321,1.0,0.7777777777777778,True
236,2397.0,exists another object of the same shape that is blue,False,6.0,3.0,0.0,5.0,19.0,0.4039541817001009,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium blue triangle,hg89,3.0,False,False,True,True,0.761904761904762,0.654320987654321,0.8333333333333334,0.6666666666666666,False
237,2398.0,exists another object of the same shape that is blue,False,7.0,3.0,1.0,23.0,1.0,0.753339971675473,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green triangle,hg89,3.0,True,True,True,True,0.761904761904762,0.654320987654321,0.8333333333333334,0.6666666666666666,True
238,2399.0,exists another object of the same shape that is blue,False,8.0,4.0,0.0,20.0,4.0,0.6942108633588759,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",large yellow triangle,hg89,4.0,False,True,True,True,0.761904761904762,0.654320987654321,1.0,0.6419753086419753,True
239,2400.0,exists another object of the same shape that is blue,False,9.0,4.0,0.0,22.0,2.0,0.7660427516215123,"""λx.apply7(not,apply1(compose11(compose8(or,blue),circle),x.o))""
",not (blue or circle),"def is_rule(obj):
    return not (obj.blue or obj.circle)",small green triangle,hg89,4.0,False,True,True,True,0.761904761904762,0.654320987654321,1.0,0.6419753086419753,True
240,2401.0,exists another object of the same shape that is blue,False,10.0,5.0,0.0,18.0,6.0,0.2265265275331103,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg89,5.0,False,False,True,False,0.761904761904762,0.654320987654321,0.6,0.7777777777777778,True
241,2402.0,exists another object of the same shape that is blue,False,11.0,5.0,0.0,4.0,20.0,0.2804430077759434,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg89,5.0,False,False,True,False,0.761904761904762,0.654320987654321,0.6,0.7777777777777778,True
242,2403.0,exists another object of the same shape that is blue,False,12.0,6.0,0.0,2.0,21.0,0.2739156724165923,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,6.0,False,False,True,False,0.761904761904762,0.654320987654321,0.6666666666666666,0.7777777777777778,True
243,2404.0,exists another object of the same shape that is blue,False,13.0,6.0,0.0,4.0,19.0,0.1931233842759638,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,6.0,False,False,True,False,0.761904761904762,0.654320987654321,0.6666666666666666,0.7777777777777778,True
244,2405.0,exists another object of the same shape that is blue,False,14.0,7.0,0.0,4.0,19.0,0.2514847136714024,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,7.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7142857142857143,0.7777777777777778,True
245,2406.0,exists another object of the same shape that is blue,False,15.0,8.0,0.0,1.0,22.0,0.1873751222067312,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,8.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7333333333333333,0.7777777777777778,True
246,2407.0,exists another object of the same shape that is blue,False,16.0,8.0,0.0,3.0,20.0,0.3475706044835078,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,8.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7333333333333333,0.7777777777777778,True
247,2408.0,exists another object of the same shape that is blue,False,17.0,8.0,0.0,2.0,21.0,0.098290711545701,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,8.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7333333333333333,0.7777777777777778,True
248,2409.0,exists another object of the same shape that is blue,False,18.0,8.0,0.0,3.0,20.0,0.2289158755421567,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg89,8.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7333333333333333,0.7777777777777778,True
249,2410.0,exists another object of the same shape that is blue,False,19.0,8.0,0.0,2.0,21.0,0.2298017802833101,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,8.0,False,False,True,False,0.761904761904762,0.654320987654321,0.7333333333333333,0.7777777777777778,True
250,2411.0,exists another object of the same shape that is blue,False,20.0,9.0,1.0,7.0,16.0,0.1626513902439228,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,9.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8,0.7777777777777778,True
251,2412.0,exists another object of the same shape that is blue,False,21.0,9.0,0.0,0.0,23.0,0.2179079436298252,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg89,9.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8,0.7777777777777778,True
252,2413.0,exists another object of the same shape that is blue,False,22.0,9.0,0.0,1.0,22.0,0.1121768438878234,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,9.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8,0.7777777777777778,True
253,2414.0,exists another object of the same shape that is blue,False,23.0,10.0,0.0,0.0,23.0,0.0424998119246993,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,10.0,False,False,True,False,0.761904761904762,0.654320987654321,0.782608695652174,0.7777777777777778,True
254,2415.0,exists another object of the same shape that is blue,False,24.0,10.0,0.0,18.0,5.0,0.3360165359550819,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,10.0,False,False,True,False,0.761904761904762,0.654320987654321,0.782608695652174,0.7777777777777778,True
255,2416.0,exists another object of the same shape that is blue,False,25.0,10.0,0.0,1.0,22.0,0.1268084702770693,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,10.0,False,False,True,False,0.761904761904762,0.654320987654321,0.782608695652174,0.7777777777777778,True
256,2417.0,exists another object of the same shape that is blue,False,26.0,11.0,0.0,1.0,22.0,0.1451954885335453,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg89,11.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8076923076923077,0.7777777777777778,True
257,2418.0,exists another object of the same shape that is blue,False,27.0,11.0,0.0,1.0,22.0,0.1726361792626676,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,11.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8076923076923077,0.7777777777777778,True
258,2419.0,exists another object of the same shape that is blue,False,28.0,11.0,0.0,0.0,23.0,0.0746861467742974,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,11.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8076923076923077,0.7777777777777778,True
259,2420.0,exists another object of the same shape that is blue,False,29.0,11.0,0.0,0.0,23.0,0.0549036765947903,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,11.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8076923076923077,0.7777777777777778,True
260,2421.0,exists another object of the same shape that is blue,False,30.0,12.0,0.0,1.0,22.0,0.1327704892220254,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,12.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8333333333333334,0.7777777777777778,True
261,2422.0,exists another object of the same shape that is blue,False,31.0,12.0,0.0,1.0,22.0,0.050461671497942,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,12.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8333333333333334,0.7777777777777778,True
262,2423.0,exists another object of the same shape that is blue,False,32.0,12.0,0.0,1.0,22.0,0.077306193037657,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg89,12.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8333333333333334,0.7777777777777778,True
263,2424.0,exists another object of the same shape that is blue,False,33.0,13.0,0.0,1.0,22.0,0.1008514562897744,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,13.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8484848484848485,0.7777777777777778,True
264,2425.0,exists another object of the same shape that is blue,False,34.0,13.0,1.0,1.0,22.0,0.0806904511380253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,13.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8484848484848485,0.7777777777777778,True
265,2426.0,exists another object of the same shape that is blue,False,35.0,14.0,0.0,4.0,19.0,0.128112848058322,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg89,14.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8285714285714286,0.7777777777777778,True
266,2427.0,exists another object of the same shape that is blue,False,36.0,14.0,0.0,2.0,21.0,0.0532838830421269,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg89,14.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8285714285714286,0.7777777777777778,True
267,2428.0,exists another object of the same shape that is blue,False,37.0,14.0,0.0,0.0,23.0,0.0558014439168346,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg89,14.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8285714285714286,0.7777777777777778,True
268,2429.0,exists another object of the same shape that is blue,False,38.0,15.0,0.0,0.0,23.0,0.0407470607915456,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg89,15.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8421052631578947,0.7777777777777778,True
269,2430.0,exists another object of the same shape that is blue,False,39.0,15.0,0.0,1.0,22.0,0.106839931159925,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg89,15.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8421052631578947,0.7777777777777778,True
270,2431.0,exists another object of the same shape that is blue,False,40.0,15.0,0.0,12.0,11.0,0.1144057083313327,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,15.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8421052631578947,0.7777777777777778,True
271,2432.0,exists another object of the same shape that is blue,False,41.0,15.0,0.0,12.0,11.0,0.1194526511632148,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,15.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8421052631578947,0.7777777777777778,True
272,2433.0,exists another object of the same shape that is blue,False,42.0,15.0,0.0,1.0,22.0,0.0748817606901184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,15.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8421052631578947,0.7777777777777778,True
273,2434.0,exists another object of the same shape that is blue,False,43.0,16.0,0.0,2.0,21.0,0.0415687847635126,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg89,16.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8604651162790697,0.7777777777777778,True
274,2435.0,exists another object of the same shape that is blue,False,44.0,16.0,0.0,2.0,21.0,0.074533174464932,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg89,16.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8604651162790697,0.7777777777777778,True
275,2436.0,exists another object of the same shape that is blue,False,45.0,16.0,0.0,2.0,21.0,0.0410627948174351,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,16.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8604651162790697,0.7777777777777778,True
276,2437.0,exists another object of the same shape that is blue,False,46.0,16.0,1.0,10.0,13.0,0.2006202951631621,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg89,16.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8604651162790697,0.7777777777777778,True
277,2438.0,exists another object of the same shape that is blue,False,47.0,16.0,0.0,2.0,21.0,0.0510345706748012,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,16.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8604651162790697,0.7777777777777778,True
278,2439.0,exists another object of the same shape that is blue,False,48.0,17.0,1.0,4.0,19.0,0.0889003423802705,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow circle,hg89,17.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8958333333333334,0.8148148148148148,True
279,2440.0,exists another object of the same shape that is blue,False,49.0,17.0,0.0,1.0,22.0,0.0206714331267221,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue circle,hg89,17.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8958333333333334,0.8148148148148148,True
280,2441.0,exists another object of the same shape that is blue,False,50.0,17.0,1.0,2.0,21.0,0.1140773759966577,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small yellow rectangle,hg89,17.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8958333333333334,0.8148148148148148,True
281,2442.0,exists another object of the same shape that is blue,False,51.0,17.0,0.0,2.0,21.0,0.0361777617586085,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium blue rectangle,hg89,17.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8958333333333334,0.8148148148148148,True
282,2443.0,exists another object of the same shape that is blue,False,52.0,17.0,1.0,10.0,13.0,0.1217543613012139,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green circle,hg89,17.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8958333333333334,0.8148148148148148,True
283,2444.0,exists another object of the same shape that is blue,False,53.0,18.0,0.0,3.0,20.0,0.0138228100367996,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg89,18.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
284,2445.0,exists another object of the same shape that is blue,False,54.0,19.0,0.0,8.0,15.0,0.0370393916418834,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg89,19.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8148148148148148,0.7777777777777778,True
285,2446.0,exists another object of the same shape that is blue,False,55.0,19.0,1.0,17.0,6.0,0.406315448777832,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg89,19.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8148148148148148,0.7777777777777778,True
286,2447.0,exists another object of the same shape that is blue,False,56.0,19.0,0.0,0.0,23.0,0.0176473333821149,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg89,19.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8148148148148148,0.7777777777777778,True
287,2448.0,exists another object of the same shape that is blue,False,57.0,19.0,1.0,16.0,7.0,0.4191343333063742,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg89,19.0,True,False,True,False,0.761904761904762,0.654320987654321,0.8148148148148148,0.7777777777777778,True
288,2449.0,exists another object of the same shape that is blue,False,58.0,19.0,0.0,1.0,22.0,0.0136220180165764,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg89,19.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8148148148148148,0.7777777777777778,True
289,2450.0,exists another object of the same shape that is blue,False,59.0,20.0,0.0,1.0,21.0,0.0193987064253633,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg89,20.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
290,2451.0,exists another object of the same shape that is blue,False,60.0,20.0,1.0,12.0,10.0,0.7749731761989551,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green circle,hg89,20.0,True,True,True,True,0.761904761904762,0.654320987654321,1.0,1.0,True
291,2452.0,exists another object of the same shape that is blue,False,61.0,21.0,0.0,5.0,17.0,0.0608079810436947,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow circle,hg89,21.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
292,2453.0,exists another object of the same shape that is blue,False,62.0,21.0,0.0,1.0,21.0,0.0184095645117849,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg89,21.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
293,2454.0,exists another object of the same shape that is blue,False,63.0,21.0,0.0,3.0,19.0,0.0440669093324004,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green circle,hg89,21.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
294,2455.0,exists another object of the same shape that is blue,False,64.0,21.0,0.0,6.0,16.0,0.0299839869896914,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg89,21.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
295,2456.0,exists another object of the same shape that is blue,False,65.0,21.0,0.0,6.0,16.0,0.0397216487550622,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small yellow triangle,hg89,21.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
296,2457.0,exists another object of the same shape that is blue,False,66.0,22.0,0.0,7.0,15.0,0.041221275251587,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg89,22.0,False,False,True,False,0.761904761904762,0.654320987654321,0.803030303030303,0.7777777777777778,True
297,2458.0,exists another object of the same shape that is blue,False,67.0,22.0,0.0,2.0,20.0,0.060740093463778,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg89,22.0,False,False,True,False,0.761904761904762,0.654320987654321,0.803030303030303,0.7777777777777778,True
298,2459.0,exists another object of the same shape that is blue,False,68.0,22.0,0.0,2.0,20.0,0.0258176678440804,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg89,22.0,False,False,True,False,0.761904761904762,0.654320987654321,0.803030303030303,0.7777777777777778,True
299,2460.0,exists another object of the same shape that is blue,False,69.0,22.0,1.0,10.0,12.0,0.6325911178166734,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg89,22.0,True,True,True,False,0.761904761904762,0.654320987654321,0.803030303030303,0.7777777777777778,False
300,2461.0,exists another object of the same shape that is blue,False,70.0,23.0,0.0,1.0,21.0,0.00897604685656,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",small blue triangle,hg89,23.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8428571428571429,0.8148148148148148,True
301,2462.0,exists another object of the same shape that is blue,False,71.0,23.0,1.0,17.0,5.0,0.6297641755859331,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium yellow triangle,hg89,23.0,True,True,True,False,0.761904761904762,0.654320987654321,0.8428571428571429,0.8148148148148148,False
302,2463.0,exists another object of the same shape that is blue,False,72.0,23.0,0.0,0.0,22.0,0.0605765524937851,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",medium green rectangle,hg89,23.0,False,False,True,False,0.761904761904762,0.654320987654321,0.8428571428571429,0.8148148148148148,True
303,2464.0,exists another object of the same shape that is blue,False,73.0,23.0,1.0,18.0,4.0,0.8115598890423144,"""λx.apply1(compose11(compose8(and,green),triangle),x.o)""
",green and triangle,"def is_rule(obj):
    return obj.green and obj.triangle",large green triangle,hg89,23.0,True,True,True,True,0.761904761904762,0.654320987654321,0.8428571428571429,0.8148148148148148,True
304,2465.0,exists another object of the same shape that is blue,False,74.0,24.0,0.0,1.0,21.0,0.0128749946211428,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue circle,hg89,24.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
305,2466.0,exists another object of the same shape that is blue,False,75.0,24.0,1.0,8.0,14.0,0.8558715622109503,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small yellow circle,hg89,24.0,True,True,True,True,0.761904761904762,0.654320987654321,1.0,1.0,True
306,2467.0,exists another object of the same shape that is blue,False,76.0,24.0,1.0,16.0,6.0,0.7353293199736299,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green circle,hg89,24.0,True,True,True,True,0.761904761904762,0.654320987654321,1.0,1.0,True
307,2468.0,exists another object of the same shape that is blue,False,77.0,25.0,0.0,11.0,11.0,0.0078200136849773,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg89,25.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
308,2469.0,exists another object of the same shape that is blue,False,78.0,25.0,0.0,1.0,21.0,0.0045876040691155,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg89,25.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
309,2470.0,exists another object of the same shape that is blue,False,79.0,25.0,0.0,3.0,19.0,0.0042033857187107,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg89,25.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
310,2471.0,exists another object of the same shape that is blue,False,80.0,25.0,0.0,10.0,12.0,0.0154735173015296,"""λx.exists(apply2(compose3(not,same_color),x.o), filter(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s))""
",there is a blue object of the same shape that is not the same color,"def is_rule(obj):
    return np.any([x.blue and (x.color != obj.color) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg89,25.0,False,False,True,False,0.761904761904762,0.654320987654321,1.0,1.0,True
311,2698.0,no other object has the same shape,False,0.0,1.0,0.0,14.0,8.0,0.4327655660324581,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg64,1.0,False,False,True,True,0.7278911564625851,0.53360768175583,,0.37037037037037035,False
312,2699.0,no other object has the same shape,False,1.0,1.0,0.0,12.0,10.0,0.4635304118537533,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg64,1.0,False,False,True,True,0.7278911564625851,0.53360768175583,,0.37037037037037035,False
313,2700.0,no other object has the same shape,False,2.0,1.0,1.0,14.0,8.0,0.4317993963637718,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg64,1.0,True,False,True,True,0.7278911564625851,0.53360768175583,,0.37037037037037035,False
314,2701.0,no other object has the same shape,False,3.0,1.0,1.0,11.0,11.0,0.4772680499445414,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg64,1.0,True,False,True,True,0.7278911564625851,0.53360768175583,,0.37037037037037035,False
315,2702.0,no other object has the same shape,False,4.0,1.0,0.0,9.0,13.0,0.4319360647588155,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg64,1.0,False,False,True,True,0.7278911564625851,0.53360768175583,,0.37037037037037035,False
316,2703.0,no other object has the same shape,False,5.0,2.0,1.0,7.0,15.0,0.1201440032987193,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green triangle,hg64,2.0,True,False,True,False,0.7278911564625851,0.53360768175583,1.0,0.4444444444444444,True
317,2704.0,no other object has the same shape,False,6.0,2.0,0.0,17.0,5.0,0.6870085518029327,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large green circle,hg64,2.0,False,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.4444444444444444,True
318,2705.0,no other object has the same shape,False,7.0,2.0,0.0,8.0,14.0,0.6256312567018085,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue circle,hg64,2.0,False,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.4444444444444444,True
319,2706.0,no other object has the same shape,False,8.0,2.0,0.0,5.0,17.0,0.5730007119146876,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg64,2.0,False,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.4444444444444444,True
320,2707.0,no other object has the same shape,False,9.0,3.0,0.0,3.0,19.0,0.3436226547127035,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg64,3.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
321,2708.0,no other object has the same shape,False,10.0,3.0,0.0,13.0,9.0,0.4123932866950781,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg64,3.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
322,2709.0,no other object has the same shape,False,11.0,3.0,1.0,13.0,9.0,0.2837813831994253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg64,3.0,True,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
323,2710.0,no other object has the same shape,False,12.0,4.0,1.0,15.0,7.0,0.3228615392064284,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg64,4.0,True,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
324,2711.0,no other object has the same shape,False,13.0,5.0,0.0,5.0,17.0,0.2216940701000567,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",small yellow triangle,hg64,5.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6153846153846154,0.6049382716049383,True
325,2712.0,no other object has the same shape,False,14.0,5.0,0.0,3.0,19.0,0.2819301951241186,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium blue rectangle,hg64,5.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6153846153846154,0.6049382716049383,True
326,2713.0,no other object has the same shape,False,15.0,5.0,0.0,10.0,12.0,0.3120130735470638,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large green triangle,hg64,5.0,False,False,True,True,0.7278911564625851,0.53360768175583,0.6153846153846154,0.6049382716049383,False
327,2714.0,no other object has the same shape,False,16.0,5.0,1.0,20.0,2.0,0.6075122593991864,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",large blue circle,hg64,5.0,True,True,True,True,0.7278911564625851,0.53360768175583,0.6153846153846154,0.6049382716049383,True
328,2715.0,no other object has the same shape,False,17.0,5.0,0.0,5.0,17.0,0.2026187835007249,"""λx.apply1(large,x.o)""
",large,"def is_rule(obj):
    return obj.large",medium yellow rectangle,hg64,5.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6153846153846154,0.6049382716049383,True
329,2716.0,no other object has the same shape,False,18.0,6.0,0.0,7.0,15.0,0.2867523152533522,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg64,6.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
330,2717.0,no other object has the same shape,False,19.0,6.0,0.0,3.0,19.0,0.0936960899687164,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg64,6.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
331,2718.0,no other object has the same shape,False,20.0,6.0,1.0,14.0,8.0,0.2199211695221947,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg64,6.0,True,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
332,2719.0,no other object has the same shape,False,21.0,6.0,1.0,12.0,10.0,0.4503521893311699,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg64,6.0,True,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
333,2720.0,no other object has the same shape,False,22.0,6.0,0.0,3.0,19.0,0.086189661365438,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg64,6.0,False,False,True,False,0.7278911564625851,0.53360768175583,0.6666666666666666,0.6296296296296297,True
334,2721.0,no other object has the same shape,False,23.0,7.0,1.0,15.0,7.0,0.6316892528204789,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green triangle,hg64,7.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
335,2722.0,no other object has the same shape,False,24.0,7.0,0.0,4.0,18.0,0.2674546686372423,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small blue circle,hg64,7.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
336,2723.0,no other object has the same shape,False,25.0,7.0,0.0,9.0,13.0,0.3231611743572102,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green circle,hg64,7.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
337,2724.0,no other object has the same shape,False,26.0,7.0,1.0,17.0,5.0,0.5662029956113201,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",large yellow rectangle,hg64,7.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
338,2725.0,no other object has the same shape,False,27.0,7.0,0.0,14.0,8.0,0.2753745848424387,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",large blue circle,hg64,7.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
339,2726.0,no other object has the same shape,False,28.0,8.0,0.0,5.0,17.0,0.114161603577827,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small green circle,hg64,8.0,False,False,True,True,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,False
340,2727.0,no other object has the same shape,False,29.0,8.0,0.0,11.0,11.0,0.1195724549229453,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",medium green circle,hg64,8.0,False,False,True,True,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,False
341,2728.0,no other object has the same shape,False,30.0,8.0,1.0,13.0,9.0,0.9240307998798016,"""λx.apply7(not,exists(apply3(compose3(not,same_color),x.o), filter(apply2(same_shape,x.o), x.s)))""
",there does not exist an object of the same shape but not of the same color,"def is_rule(obj):
    return np.all([not ((x.shape == obj.shape) and (x.color != obj.color)) for x in obj.current_set.objs])",small green triangle,hg64,8.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,0.8765432098765432,True
342,2729.0,no other object has the same shape,False,31.0,9.0,1.0,12.0,10.0,0.8871238237691159,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,9.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
343,2730.0,no other object has the same shape,False,32.0,9.0,1.0,17.0,5.0,0.8666167753812033,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,9.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
344,2731.0,no other object has the same shape,False,33.0,10.0,0.0,9.0,12.0,0.0639231474794996,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green rectangle,hg64,10.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
345,2732.0,no other object has the same shape,False,34.0,10.0,1.0,14.0,7.0,0.8697806858913282,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,10.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
346,2733.0,no other object has the same shape,False,35.0,10.0,0.0,4.0,17.0,0.0285958037200089,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow rectangle,hg64,10.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
347,2734.0,no other object has the same shape,False,36.0,10.0,1.0,15.0,6.0,0.8947233058161146,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,10.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
348,2735.0,no other object has the same shape,False,37.0,11.0,1.0,17.0,4.0,0.9680070734784748,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,11.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
349,2736.0,no other object has the same shape,False,38.0,12.0,0.0,7.0,14.0,0.0786122415139516,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green triangle,hg64,12.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
350,2737.0,no other object has the same shape,False,39.0,12.0,0.0,2.0,19.0,0.0637279734910407,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue rectangle,hg64,12.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
351,2738.0,no other object has the same shape,False,40.0,12.0,1.0,13.0,8.0,0.9203541408137426,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green circle,hg64,12.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
352,2739.0,no other object has the same shape,False,41.0,12.0,0.0,9.0,12.0,0.0889630287924774,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue triangle,hg64,12.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
353,2740.0,no other object has the same shape,False,42.0,12.0,0.0,1.0,20.0,0.0681369806540033,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,12.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
354,2741.0,no other object has the same shape,False,43.0,13.0,1.0,18.0,3.0,0.973960008462882,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,13.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
355,2742.0,no other object has the same shape,False,44.0,14.0,0.0,3.0,18.0,0.0221823291356031,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,14.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
356,2743.0,no other object has the same shape,False,45.0,14.0,1.0,14.0,7.0,0.9508301753318164,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue circle,hg64,14.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
357,2744.0,no other object has the same shape,False,46.0,14.0,0.0,0.0,21.0,0.0169970096811766,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow rectangle,hg64,14.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
358,2745.0,no other object has the same shape,False,47.0,14.0,1.0,17.0,4.0,0.9145282550456386,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,14.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
359,2746.0,no other object has the same shape,False,48.0,15.0,0.0,4.0,17.0,0.0083028198814645,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green rectangle,hg64,15.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
360,2747.0,no other object has the same shape,False,49.0,15.0,0.0,3.0,18.0,0.003477892801925,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,15.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
361,2748.0,no other object has the same shape,False,50.0,16.0,1.0,18.0,3.0,0.9337887504243554,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,16.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
362,2749.0,no other object has the same shape,False,51.0,17.0,0.0,6.0,15.0,0.0671184096876231,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green triangle,hg64,17.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
363,2750.0,no other object has the same shape,False,52.0,17.0,0.0,5.0,16.0,0.0829673047099959,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue triangle,hg64,17.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
364,2751.0,no other object has the same shape,False,53.0,17.0,0.0,5.0,16.0,0.0679987216610698,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green triangle,hg64,17.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
365,2752.0,no other object has the same shape,False,54.0,18.0,0.0,5.0,16.0,0.0220119963006482,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,18.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
366,2753.0,no other object has the same shape,False,55.0,18.0,1.0,14.0,7.0,0.7969077174712993,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow rectangle,hg64,18.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
367,2754.0,no other object has the same shape,False,56.0,18.0,0.0,4.0,17.0,0.0939987652155878,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green circle,hg64,18.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
368,2755.0,no other object has the same shape,False,57.0,18.0,0.0,7.0,14.0,0.0970293953997725,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green circle,hg64,18.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
369,2756.0,no other object has the same shape,False,58.0,18.0,0.0,4.0,17.0,0.0121760379328179,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow triangle,hg64,18.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
370,2757.0,no other object has the same shape,False,59.0,19.0,0.0,6.0,15.0,0.0047676457876377,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green triangle,hg64,19.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
371,2758.0,no other object has the same shape,False,60.0,19.0,0.0,2.0,19.0,0.0062406070222778,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow triangle,hg64,19.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
372,2759.0,no other object has the same shape,False,61.0,19.0,1.0,15.0,6.0,0.9674339116030524,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small yellow circle,hg64,19.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
373,2760.0,no other object has the same shape,False,62.0,19.0,1.0,13.0,8.0,0.9412914174140496,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue rectangle,hg64,19.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
374,2761.0,no other object has the same shape,False,63.0,20.0,1.0,14.0,7.0,0.98163258378122,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,20.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
375,2762.0,no other object has the same shape,False,64.0,20.0,1.0,18.0,3.0,0.9937121744833348,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow circle,hg64,20.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
376,2763.0,no other object has the same shape,False,65.0,21.0,1.0,14.0,7.0,0.985521225299408,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue circle,hg64,21.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
377,2764.0,no other object has the same shape,False,66.0,21.0,0.0,9.0,12.0,0.0101528312209211,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,21.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
378,2765.0,no other object has the same shape,False,67.0,21.0,0.0,4.0,17.0,0.001924905326291,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green rectangle,hg64,21.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
379,2766.0,no other object has the same shape,False,68.0,21.0,0.0,6.0,15.0,0.0073871885977041,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium blue triangle,hg64,21.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
380,2767.0,no other object has the same shape,False,69.0,21.0,0.0,9.0,12.0,0.0058773265999434,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow rectangle,hg64,21.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
381,2768.0,no other object has the same shape,False,70.0,22.0,0.0,5.0,16.0,0.0012716868903908,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue rectangle,hg64,22.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
382,2769.0,no other object has the same shape,False,71.0,22.0,1.0,17.0,4.0,0.9954361915556548,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large yellow circle,hg64,22.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
383,2770.0,no other object has the same shape,False,72.0,22.0,0.0,4.0,17.0,0.0002268842091552,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium green rectangle,hg64,22.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
384,2771.0,no other object has the same shape,False,73.0,22.0,1.0,16.0,5.0,0.9727297965174556,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue triangle,hg64,22.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
385,2772.0,no other object has the same shape,False,74.0,23.0,1.0,19.0,2.0,0.9975589401534536,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,23.0,True,True,True,True,0.7278911564625851,0.53360768175583,1.0,1.0,True
386,2773.0,no other object has the same shape,False,75.0,24.0,0.0,8.0,13.0,0.0280665902506598,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow circle,hg64,24.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
387,2774.0,no other object has the same shape,False,76.0,24.0,0.0,9.0,12.0,0.0307006822238236,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large blue circle,hg64,24.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
388,2775.0,no other object has the same shape,False,77.0,25.0,0.0,5.0,16.0,0.0029188907112711,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",large green circle,hg64,25.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
389,2776.0,no other object has the same shape,False,78.0,25.0,0.0,3.0,18.0,0.0002630733132491,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",medium yellow rectangle,hg64,25.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
390,2777.0,no other object has the same shape,False,79.0,25.0,0.0,4.0,17.0,0.000604772898896,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small green rectangle,hg64,25.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
391,2778.0,no other object has the same shape,False,80.0,25.0,0.0,4.0,17.0,0.0043393204319954,"""λx.apply1(apply2(same_color,iota(filter(apply2(same_shape,x.o), x.s))),x.o)""
",no other object has the same shape,"def is_rule(obj):
    return np.sum([obj.shape == x.shape for x in obj.current_set.objs]) == 1",small blue circle,hg64,25.0,False,False,True,False,0.7278911564625851,0.53360768175583,1.0,1.0,True
392,3844.0,the unique element and is (blue or green),False,0.0,1.0,0.0,12.0,10.0,0.464158940698212,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg94,1.0,False,False,True,True,0.9415584415584416,0.8628257887517148,,0.07407407407407407,False
393,3845.0,the unique element and is (blue or green),False,1.0,1.0,0.0,6.0,16.0,0.4635622563455399,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green circle,hg94,1.0,False,False,True,True,0.9415584415584416,0.8628257887517148,,0.07407407407407407,False
394,3846.0,the unique element and is (blue or green),False,2.0,1.0,0.0,9.0,13.0,0.4735315146895118,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg94,1.0,False,False,True,True,0.9415584415584416,0.8628257887517148,,0.07407407407407407,False
395,3847.0,the unique element and is (blue or green),False,3.0,2.0,0.0,7.0,15.0,0.2689515992464066,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,2.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
396,3848.0,the unique element and is (blue or green),False,4.0,2.0,0.0,10.0,12.0,0.295885149982837,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg94,2.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
397,3849.0,the unique element and is (blue or green),False,5.0,3.0,0.0,4.0,18.0,0.1354677615015589,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg94,3.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
398,3850.0,the unique element and is (blue or green),False,6.0,3.0,0.0,6.0,16.0,0.1904531024410971,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,3.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
399,3851.0,the unique element and is (blue or green),False,7.0,4.0,0.0,3.0,19.0,0.1757157043401775,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,4.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
400,3852.0,the unique element and is (blue or green),False,8.0,4.0,0.0,10.0,12.0,0.2240316855355786,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,4.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
401,3853.0,the unique element and is (blue or green),False,9.0,4.0,0.0,8.0,14.0,0.2651723951577196,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,4.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
402,3854.0,the unique element and is (blue or green),False,10.0,4.0,0.0,3.0,19.0,0.1072981975362381,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,4.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
403,3855.0,the unique element and is (blue or green),False,11.0,5.0,0.0,5.0,17.0,0.1427454110605595,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg94,5.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
404,3856.0,the unique element and is (blue or green),False,12.0,6.0,0.0,4.0,18.0,0.0945149308038253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg94,6.0,False,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
405,3857.0,the unique element and is (blue or green),False,13.0,6.0,1.0,3.0,19.0,0.2779913855348468,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,6.0,True,False,True,False,0.9415584415584416,0.8628257887517148,1.0,0.9259259259259259,True
406,3858.0,the unique element and is (blue or green),False,14.0,7.0,0.0,10.0,12.0,0.2577196518744813,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg94,7.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9285714285714286,0.9259259259259259,True
407,3859.0,the unique element and is (blue or green),False,15.0,7.0,0.0,4.0,18.0,0.0996736513117184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,7.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9285714285714286,0.9259259259259259,True
408,3860.0,the unique element and is (blue or green),False,16.0,7.0,0.0,4.0,18.0,0.3785544455129184,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,7.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9285714285714286,0.9259259259259259,True
409,3861.0,the unique element and is (blue or green),False,17.0,7.0,0.0,3.0,19.0,0.2604980887718966,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,7.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9285714285714286,0.9259259259259259,True
410,3862.0,the unique element and is (blue or green),False,18.0,8.0,0.0,14.0,8.0,0.3649636444951056,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,8.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9444444444444444,0.9259259259259259,True
411,3863.0,the unique element and is (blue or green),False,19.0,8.0,0.0,0.0,22.0,0.053883691310375,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,8.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9444444444444444,0.9259259259259259,True
412,3864.0,the unique element and is (blue or green),False,20.0,8.0,0.0,1.0,21.0,0.0761710438224554,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,8.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9444444444444444,0.9259259259259259,True
413,3865.0,the unique element and is (blue or green),False,21.0,8.0,0.0,1.0,21.0,0.1177660485710703,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,8.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9444444444444444,0.9259259259259259,True
414,3866.0,the unique element and is (blue or green),False,22.0,8.0,0.0,10.0,12.0,0.3839173337197508,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg94,8.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9444444444444444,0.9259259259259259,True
415,3867.0,the unique element and is (blue or green),False,23.0,9.0,1.0,3.0,19.0,0.1575655960231188,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,9.0,True,False,True,False,0.9415584415584416,0.8628257887517148,0.9565217391304348,0.9259259259259259,True
416,3868.0,the unique element and is (blue or green),False,24.0,9.0,0.0,3.0,19.0,0.0941102320772415,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,9.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9565217391304348,0.9259259259259259,True
417,3869.0,the unique element and is (blue or green),False,25.0,10.0,0.0,3.0,19.0,0.060555625218285,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg94,10.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.92,0.9259259259259259,True
418,3870.0,the unique element and is (blue or green),False,26.0,10.0,0.0,1.0,21.0,0.0902022110540201,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,10.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.92,0.9259259259259259,True
419,3871.0,the unique element and is (blue or green),False,27.0,10.0,0.0,3.0,19.0,0.0842101630582874,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg94,10.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.92,0.9259259259259259,True
420,3872.0,the unique element and is (blue or green),False,28.0,10.0,0.0,16.0,6.0,0.3836894602850407,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,10.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.92,0.9259259259259259,True
421,3873.0,the unique element and is (blue or green),False,29.0,11.0,0.0,2.0,20.0,0.0810514263408777,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,11.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9310344827586207,0.9259259259259259,True
422,3874.0,the unique element and is (blue or green),False,30.0,11.0,0.0,2.0,20.0,0.0719307610600026,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,11.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9310344827586207,0.9259259259259259,True
423,3875.0,the unique element and is (blue or green),False,31.0,11.0,0.0,2.0,20.0,0.1668850882451806,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,11.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9310344827586207,0.9259259259259259,True
424,3876.0,the unique element and is (blue or green),False,32.0,12.0,0.0,0.0,22.0,0.0972080966297426,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,12.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9375,0.9259259259259259,True
425,3877.0,the unique element and is (blue or green),False,33.0,12.0,0.0,4.0,18.0,0.0793298676610447,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,12.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9375,0.9259259259259259,True
426,3878.0,the unique element and is (blue or green),False,34.0,12.0,1.0,1.0,21.0,0.0833070691767261,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg94,12.0,True,False,True,False,0.9415584415584416,0.8628257887517148,0.9375,0.9259259259259259,True
427,3879.0,the unique element and is (blue or green),False,35.0,13.0,0.0,3.0,19.0,0.160762878929404,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,13.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9142857142857143,0.9259259259259259,True
428,3880.0,the unique element and is (blue or green),False,36.0,13.0,0.0,4.0,18.0,0.1104666420056901,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,13.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9142857142857143,0.9259259259259259,True
429,3881.0,the unique element and is (blue or green),False,37.0,13.0,0.0,2.0,20.0,0.1234646272588406,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,13.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9142857142857143,0.9259259259259259,True
430,3882.0,the unique element and is (blue or green),False,38.0,14.0,1.0,11.0,11.0,0.1599241830182336,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,14.0,True,False,True,False,0.9415584415584416,0.8628257887517148,0.9210526315789473,0.9259259259259259,True
431,3883.0,the unique element and is (blue or green),False,39.0,14.0,0.0,1.0,21.0,0.0781103745823657,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg94,14.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9210526315789473,0.9259259259259259,True
432,3884.0,the unique element and is (blue or green),False,40.0,14.0,0.0,0.0,22.0,0.0450355131467858,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg94,14.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9210526315789473,0.9259259259259259,True
433,3885.0,the unique element and is (blue or green),False,41.0,15.0,0.0,2.0,20.0,0.0576520644420952,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg94,15.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9024390243902439,0.9259259259259259,True
434,3886.0,the unique element and is (blue or green),False,42.0,15.0,1.0,9.0,13.0,0.2547705413915082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,15.0,True,False,True,False,0.9415584415584416,0.8628257887517148,0.9024390243902439,0.9259259259259259,True
435,3887.0,the unique element and is (blue or green),False,43.0,16.0,0.0,2.0,20.0,0.1104517131445845,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,16.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8837209302325582,0.9259259259259259,True
436,3888.0,the unique element and is (blue or green),False,44.0,16.0,0.0,1.0,21.0,0.0593724880120589,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,16.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8837209302325582,0.9259259259259259,True
437,3889.0,the unique element and is (blue or green),False,45.0,16.0,0.0,5.0,17.0,0.1379968250238334,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg94,16.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8837209302325582,0.9259259259259259,True
438,3890.0,the unique element and is (blue or green),False,46.0,16.0,0.0,3.0,19.0,0.0332145116699393,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg94,16.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8837209302325582,0.9259259259259259,True
439,3891.0,the unique element and is (blue or green),False,47.0,17.0,0.0,4.0,18.0,0.0298462038674642,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,17.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8936170212765957,0.9259259259259259,True
440,3892.0,the unique element and is (blue or green),False,48.0,17.0,0.0,6.0,16.0,0.0865894738408314,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,17.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8936170212765957,0.9259259259259259,True
441,3893.0,the unique element and is (blue or green),False,49.0,17.0,0.0,0.0,22.0,0.0255710908202217,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,17.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8936170212765957,0.9259259259259259,True
442,3894.0,the unique element and is (blue or green),False,50.0,17.0,0.0,4.0,18.0,0.0483622390809159,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,17.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8936170212765957,0.9259259259259259,True
443,3895.0,the unique element and is (blue or green),False,51.0,17.0,0.0,5.0,17.0,0.0486446355208727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg94,17.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.8936170212765957,0.9259259259259259,True
444,3896.0,the unique element and is (blue or green),False,52.0,18.0,0.0,5.0,17.0,0.1798341170015192,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,18.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9038461538461539,0.9259259259259259,True
445,3897.0,the unique element and is (blue or green),False,53.0,18.0,0.0,1.0,21.0,0.066831039121439,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,18.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9038461538461539,0.9259259259259259,True
446,3898.0,the unique element and is (blue or green),False,54.0,19.0,0.0,3.0,19.0,0.0462630786371391,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,19.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9074074074074074,0.9259259259259259,True
447,3899.0,the unique element and is (blue or green),False,55.0,19.0,0.0,4.0,18.0,0.0366388995270199,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,19.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9074074074074074,0.9259259259259259,True
448,3900.0,the unique element and is (blue or green),False,56.0,20.0,0.0,1.0,21.0,0.0622710383074718,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,20.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9107142857142857,0.9259259259259259,True
449,3901.0,the unique element and is (blue or green),False,57.0,20.0,0.0,6.0,16.0,0.0484825423671964,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg94,20.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9107142857142857,0.9259259259259259,True
450,3902.0,the unique element and is (blue or green),False,58.0,20.0,0.0,0.0,22.0,0.0362908747971459,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg94,20.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9107142857142857,0.9259259259259259,True
451,3903.0,the unique element and is (blue or green),False,59.0,20.0,0.0,1.0,21.0,0.076447285345921,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg94,20.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9107142857142857,0.9259259259259259,True
452,3904.0,the unique element and is (blue or green),False,60.0,20.0,0.0,2.0,20.0,0.1982749741404177,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,20.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9107142857142857,0.9259259259259259,True
453,3905.0,the unique element and is (blue or green),False,61.0,21.0,0.0,2.0,20.0,0.0477757894225305,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg94,21.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9180327868852459,0.9259259259259259,True
454,3906.0,the unique element and is (blue or green),False,62.0,21.0,0.0,4.0,18.0,0.0407119097238819,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,21.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9180327868852459,0.9259259259259259,True
455,3907.0,the unique element and is (blue or green),False,63.0,21.0,0.0,1.0,21.0,0.0528711213145243,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg94,21.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9180327868852459,0.9259259259259259,True
456,3908.0,the unique element and is (blue or green),False,64.0,21.0,0.0,1.0,21.0,0.0342739285187008,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg94,21.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9180327868852459,0.9259259259259259,True
457,3909.0,the unique element and is (blue or green),False,65.0,21.0,0.0,2.0,20.0,0.0430879291519659,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,21.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9180327868852459,0.9259259259259259,True
458,3910.0,the unique element and is (blue or green),False,66.0,22.0,0.0,2.0,20.0,0.0706344030290893,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,22.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9242424242424242,0.9259259259259259,True
459,3911.0,the unique element and is (blue or green),False,67.0,22.0,0.0,2.0,20.0,0.065507183593354,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,22.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9242424242424242,0.9259259259259259,True
460,3912.0,the unique element and is (blue or green),False,68.0,22.0,0.0,0.0,22.0,0.0241213698283218,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg94,22.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9242424242424242,0.9259259259259259,True
461,3913.0,the unique element and is (blue or green),False,69.0,22.0,0.0,3.0,19.0,0.0290925200512219,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,22.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9242424242424242,0.9259259259259259,True
462,3914.0,the unique element and is (blue or green),False,70.0,22.0,0.0,0.0,22.0,0.0359609370768794,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg94,22.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9242424242424242,0.9259259259259259,True
463,3915.0,the unique element and is (blue or green),False,71.0,23.0,0.0,0.0,22.0,0.029174794944879,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue rectangle,hg94,23.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9295774647887324,0.9259259259259259,True
464,3916.0,the unique element and is (blue or green),False,72.0,23.0,0.0,0.0,22.0,0.0322287962193286,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg94,23.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9295774647887324,0.9259259259259259,True
465,3917.0,the unique element and is (blue or green),False,73.0,23.0,0.0,4.0,18.0,0.054172930320874,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg94,23.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9295774647887324,0.9259259259259259,True
466,3918.0,the unique element and is (blue or green),False,74.0,23.0,0.0,1.0,21.0,0.0238915606061027,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg94,23.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9295774647887324,0.9259259259259259,True
467,3919.0,the unique element and is (blue or green),False,75.0,24.0,0.0,2.0,20.0,0.0232594469622426,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg94,24.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9333333333333333,0.9259259259259259,True
468,3920.0,the unique element and is (blue or green),False,76.0,24.0,0.0,0.0,22.0,0.0110782681997534,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green circle,hg94,24.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9333333333333333,0.9259259259259259,True
469,3921.0,the unique element and is (blue or green),False,77.0,24.0,0.0,0.0,22.0,0.0536036166381563,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg94,24.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9333333333333333,0.9259259259259259,True
470,3922.0,the unique element and is (blue or green),False,78.0,24.0,0.0,0.0,22.0,0.0211463031747598,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg94,24.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9333333333333333,0.9259259259259259,True
471,3923.0,the unique element and is (blue or green),False,79.0,25.0,1.0,21.0,1.0,0.1563272650653289,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg94,25.0,True,False,True,False,0.9415584415584416,0.8628257887517148,0.9367088607594937,0.9259259259259259,True
472,3924.0,the unique element and is (blue or green),False,80.0,25.0,0.0,0.0,22.0,0.0404803801558273,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg94,25.0,False,False,True,False,0.9415584415584416,0.8628257887517148,0.9367088607594937,0.9259259259259259,True
473,4082.0,there is another object of the same shape<br>that is the same color as another different object,False,0.0,1.0,0.0,15.0,11.0,0.4608983285449994,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg75,1.0,False,False,True,True,0.6484210526315789,0.5061728395061729,,0.4444444444444444,False
474,4083.0,there is another object of the same shape<br>that is the same color as another different object,False,1.0,1.0,0.0,2.0,24.0,0.4158480799879953,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg75,1.0,False,False,True,True,0.6484210526315789,0.5061728395061729,,0.4444444444444444,False
475,4084.0,there is another object of the same shape<br>that is the same color as another different object,False,2.0,2.0,0.0,10.0,16.0,0.1838326600368418,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,2.0,False,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
476,4085.0,there is another object of the same shape<br>that is the same color as another different object,False,3.0,2.0,0.0,7.0,19.0,0.1995994161011367,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg75,2.0,False,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
477,4086.0,there is another object of the same shape<br>that is the same color as another different object,False,4.0,3.0,1.0,17.0,9.0,0.3628990094338178,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg75,3.0,True,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
478,4087.0,there is another object of the same shape<br>that is the same color as another different object,False,5.0,3.0,0.0,11.0,15.0,0.2382054806846554,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg75,3.0,False,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
479,4088.0,there is another object of the same shape<br>that is the same color as another different object,False,6.0,3.0,0.0,4.0,22.0,0.2392092697293719,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg75,3.0,False,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
480,4089.0,there is another object of the same shape<br>that is the same color as another different object,False,7.0,3.0,0.0,4.0,22.0,0.1601781922456666,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,3.0,False,False,True,False,0.6484210526315789,0.5061728395061729,1.0,0.5555555555555556,True
481,4090.0,there is another object of the same shape<br>that is the same color as another different object,False,8.0,4.0,1.0,2.0,24.0,0.1186718153329593,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg75,4.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.5555555555555556,True
482,4091.0,there is another object of the same shape<br>that is the same color as another different object,False,9.0,4.0,1.0,15.0,11.0,0.5399192871535661,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg75,4.0,True,True,True,False,0.6484210526315789,0.5061728395061729,0.875,0.5555555555555556,False
483,4092.0,there is another object of the same shape<br>that is the same color as another different object,False,10.0,4.0,1.0,2.0,24.0,0.0609905078824795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,4.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.5555555555555556,True
484,4093.0,there is another object of the same shape<br>that is the same color as another different object,False,11.0,4.0,0.0,15.0,11.0,0.4289456692553131,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg75,4.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.5555555555555556,True
485,4094.0,there is another object of the same shape<br>that is the same color as another different object,False,12.0,4.0,1.0,5.0,21.0,0.1254659834667109,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow circle,hg75,4.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.5555555555555556,True
486,4095.0,there is another object of the same shape<br>that is the same color as another different object,False,13.0,5.0,1.0,15.0,11.0,0.5680119640263683,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",large blue circle,hg75,5.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.6923076923076923,0.4861111111111111,True
487,4096.0,there is another object of the same shape<br>that is the same color as another different object,False,14.0,5.0,1.0,17.0,9.0,0.7997946938966152,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",small blue circle,hg75,5.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.6923076923076923,0.4861111111111111,True
488,4097.0,there is another object of the same shape<br>that is the same color as another different object,False,15.0,5.0,0.0,18.0,8.0,0.6190030251873395,"""λx.apply7(not,apply1(rectangle,x.o))""
",not rectangle,"def is_rule(obj):
    return not obj.rectangle",medium blue triangle,hg75,5.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.6923076923076923,0.4861111111111111,True
489,4098.0,there is another object of the same shape<br>that is the same color as another different object,False,16.0,6.0,0.0,3.0,23.0,0.1844565028993656,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium yellow rectangle,hg75,6.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.6875,0.4722222222222222,True
490,4099.0,there is another object of the same shape<br>that is the same color as another different object,False,17.0,6.0,0.0,6.0,20.0,0.5311298138793745,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",small green circle,hg75,6.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.6875,0.4722222222222222,True
491,4100.0,there is another object of the same shape<br>that is the same color as another different object,False,18.0,6.0,0.0,8.0,18.0,0.2995552204672549,"""λx.apply1(circle,x.o)""
",circle,"def is_rule(obj):
    return obj.circle",medium blue triangle,hg75,6.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.6875,0.4722222222222222,True
492,4101.0,there is another object of the same shape<br>that is the same color as another different object,False,19.0,7.0,1.0,8.0,18.0,0.1083493444207306,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium green rectangle,hg75,7.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7894736842105263,0.5972222222222222,True
493,4102.0,there is another object of the same shape<br>that is the same color as another different object,False,20.0,7.0,1.0,10.0,16.0,0.0996931216805023,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium yellow rectangle,hg75,7.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7894736842105263,0.5972222222222222,True
494,4103.0,there is another object of the same shape<br>that is the same color as another different object,False,21.0,7.0,1.0,11.0,15.0,0.2872260060673852,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",large yellow triangle,hg75,7.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7894736842105263,0.5972222222222222,True
495,4104.0,there is another object of the same shape<br>that is the same color as another different object,False,22.0,7.0,1.0,9.0,17.0,0.2832550454140801,"""λx.apply1(compose11(compose8(and,compose2(not,green)),small),x.o)""
",(not green) and small,"def is_rule(obj):
    return (not obj.green) and obj.small",medium green triangle,hg75,7.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7894736842105263,0.5972222222222222,True
496,4105.0,there is another object of the same shape<br>that is the same color as another different object,False,23.0,8.0,0.0,19.0,7.0,0.4235038289704107,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green circle,hg75,8.0,False,False,True,True,0.6484210526315789,0.5061728395061729,0.9565217391304348,0.8888888888888888,False
497,4106.0,there is another object of the same shape<br>that is the same color as another different object,False,24.0,8.0,0.0,19.0,7.0,0.4635917675180963,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue circle,hg75,8.0,False,False,True,True,0.6484210526315789,0.5061728395061729,0.9565217391304348,0.8888888888888888,False
498,4107.0,there is another object of the same shape<br>that is the same color as another different object,False,25.0,9.0,0.0,7.0,19.0,0.3327957556418823,"""λx.exists(apply2(same_color,x.o), filter(triangle, x.s))""
",same color as a triangle,"def is_rule(obj):
    return np.any([x.triangle and x.color == obj.color for x in obj.current_set.objs])",large green rectangle,hg75,9.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.76,0.6805555555555556,True
499,4108.0,there is another object of the same shape<br>that is the same color as another different object,False,26.0,9.0,0.0,10.0,16.0,0.2554177655674721,"""λx.exists(apply2(same_color,x.o), filter(triangle, x.s))""
",same color as a triangle,"def is_rule(obj):
    return np.any([x.triangle and x.color == obj.color for x in obj.current_set.objs])",medium green circle,hg75,9.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.76,0.6805555555555556,True
500,4109.0,there is another object of the same shape<br>that is the same color as another different object,False,27.0,10.0,0.0,6.0,19.0,0.2443501794264193,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow rectangle,hg75,10.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.6296296296296297,0.5694444444444444,True
501,4110.0,there is another object of the same shape<br>that is the same color as another different object,False,28.0,11.0,0.0,4.0,21.0,0.3155829965287466,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg75,11.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.6071428571428571,0.5555555555555556,True
502,4111.0,there is another object of the same shape<br>that is the same color as another different object,False,29.0,11.0,0.0,6.0,19.0,0.2907887439683918,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg75,11.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.6071428571428571,0.5555555555555556,True
503,4112.0,there is another object of the same shape<br>that is the same color as another different object,False,30.0,12.0,1.0,12.0,13.0,0.4467008866157584,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg75,12.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.6333333333333333,0.5555555555555556,True
504,4113.0,there is another object of the same shape<br>that is the same color as another different object,False,31.0,12.0,1.0,18.0,7.0,0.5545565981100253,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg75,12.0,True,True,True,False,0.6484210526315789,0.5061728395061729,0.6333333333333333,0.5555555555555556,False
505,4114.0,there is another object of the same shape<br>that is the same color as another different object,False,32.0,12.0,1.0,9.0,16.0,0.2737643167455417,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg75,12.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.6333333333333333,0.5555555555555556,True
506,4115.0,there is another object of the same shape<br>that is the same color as another different object,False,33.0,12.0,1.0,13.0,12.0,0.3235112062001235,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg75,12.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.6333333333333333,0.5555555555555556,True
507,4116.0,there is another object of the same shape<br>that is the same color as another different object,False,34.0,12.0,1.0,13.0,12.0,0.3409505525806935,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg75,12.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.6333333333333333,0.5555555555555556,True
508,4117.0,there is another object of the same shape<br>that is the same color as another different object,False,35.0,13.0,0.0,3.0,22.0,0.2363333117222055,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large green triangle,hg75,13.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8,0.7361111111111112,True
509,4118.0,there is another object of the same shape<br>that is the same color as another different object,False,36.0,14.0,0.0,4.0,21.0,0.3739346483193912,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small green rectangle,hg75,14.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8055555555555556,0.7361111111111112,True
510,4119.0,there is another object of the same shape<br>that is the same color as another different object,False,37.0,14.0,0.0,9.0,16.0,0.4502023772953407,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small yellow triangle,hg75,14.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8055555555555556,0.7361111111111112,True
511,4120.0,there is another object of the same shape<br>that is the same color as another different object,False,38.0,15.0,1.0,16.0,9.0,0.6431217818280857,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small yellow rectangle,hg75,15.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8157894736842105,0.7361111111111112,True
512,4121.0,there is another object of the same shape<br>that is the same color as another different object,False,39.0,15.0,0.0,10.0,15.0,0.5393794846543187,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium yellow circle,hg75,15.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.8157894736842105,0.7361111111111112,True
513,4122.0,there is another object of the same shape<br>that is the same color as another different object,False,40.0,15.0,1.0,16.0,9.0,0.6596068917629054,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium green triangle,hg75,15.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8157894736842105,0.7361111111111112,True
514,4123.0,there is another object of the same shape<br>that is the same color as another different object,False,41.0,15.0,1.0,18.0,7.0,0.593117049809166,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large yellow triangle,hg75,15.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8157894736842105,0.7361111111111112,True
515,4124.0,there is another object of the same shape<br>that is the same color as another different object,False,42.0,15.0,1.0,17.0,8.0,0.5580549309227081,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large green rectangle,hg75,15.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8157894736842105,0.7361111111111112,True
516,4125.0,there is another object of the same shape<br>that is the same color as another different object,False,43.0,16.0,0.0,10.0,15.0,0.2356421622575908,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg75,16.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.9302325581395349,0.8888888888888888,True
517,4126.0,there is another object of the same shape<br>that is the same color as another different object,False,44.0,17.0,0.0,16.0,9.0,0.6523590841505893,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg75,17.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.9318181818181818,0.8888888888888888,True
518,4127.0,there is another object of the same shape<br>that is the same color as another different object,False,45.0,17.0,0.0,18.0,7.0,0.6786420626983727,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,17.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.9318181818181818,0.8888888888888888,True
519,4128.0,there is another object of the same shape<br>that is the same color as another different object,False,46.0,18.0,0.0,4.0,21.0,0.2805681766093357,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small green triangle,hg75,18.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8043478260869565,0.7361111111111112,True
520,4129.0,there is another object of the same shape<br>that is the same color as another different object,False,47.0,18.0,0.0,4.0,21.0,0.2511903570481308,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium yellow circle,hg75,18.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8043478260869565,0.7361111111111112,True
521,4130.0,there is another object of the same shape<br>that is the same color as another different object,False,48.0,18.0,0.0,5.0,20.0,0.2206282156796533,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium blue rectangle,hg75,18.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8043478260869565,0.7361111111111112,True
522,4131.0,there is another object of the same shape<br>that is the same color as another different object,False,49.0,19.0,1.0,18.0,7.0,0.4399466890361054,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium blue rectangle,hg75,19.0,True,False,True,True,0.6484210526315789,0.5061728395061729,0.8163265306122449,0.7361111111111112,False
523,4132.0,there is another object of the same shape<br>that is the same color as another different object,False,50.0,19.0,0.0,11.0,14.0,0.4750687145134407,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large blue circle,hg75,19.0,False,False,True,True,0.6484210526315789,0.5061728395061729,0.8163265306122449,0.7361111111111112,False
524,4133.0,there is another object of the same shape<br>that is the same color as another different object,False,51.0,19.0,1.0,15.0,10.0,0.3419619306191634,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",medium green triangle,hg75,19.0,True,False,True,True,0.6484210526315789,0.5061728395061729,0.8163265306122449,0.7361111111111112,False
525,4134.0,there is another object of the same shape<br>that is the same color as another different object,False,52.0,19.0,1.0,15.0,10.0,0.4711309889028143,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",small blue rectangle,hg75,19.0,True,False,True,True,0.6484210526315789,0.5061728395061729,0.8163265306122449,0.7361111111111112,False
526,4135.0,there is another object of the same shape<br>that is the same color as another different object,False,53.0,19.0,0.0,21.0,4.0,0.5711709339998379,"""λx.exists(large, filter(compose2(not,green), x.s))""
",there is a large object that is not green in the set,"def is_rule(obj):
    return np.any([x.large and not x.green for x in obj.current_set.objs])",large blue triangle,hg75,19.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.8163265306122449,0.7361111111111112,True
527,4136.0,there is another object of the same shape<br>that is the same color as another different object,False,54.0,20.0,1.0,18.0,7.0,0.7496023020662506,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",medium green rectangle,hg75,20.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.7592592592592593,0.6944444444444444,True
528,4137.0,there is another object of the same shape<br>that is the same color as another different object,False,55.0,20.0,0.0,17.0,8.0,0.7394258016396407,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",small green circle,hg75,20.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.7592592592592593,0.6944444444444444,True
529,4138.0,there is another object of the same shape<br>that is the same color as another different object,False,56.0,20.0,1.0,13.0,12.0,0.4146632729268731,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",large yellow circle,hg75,20.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7592592592592593,0.6944444444444444,True
530,4139.0,there is another object of the same shape<br>that is the same color as another different object,False,57.0,20.0,1.0,18.0,7.0,0.7233065406650212,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",small green rectangle,hg75,20.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.7592592592592593,0.6944444444444444,True
531,4140.0,there is another object of the same shape<br>that is the same color as another different object,False,58.0,20.0,1.0,17.0,8.0,0.4767659919618836,"""λx.exists(apply3(size-lt,x.o), filter(large, x.s))""
",there exists a large object that this object is smaller than,"def is_rule(obj):
    return np.any([x.large and (obj.size_num < x.size_num) for x in obj.current_set.objs])",large green rectangle,hg75,20.0,True,False,True,False,0.6484210526315789,0.5061728395061729,0.7592592592592593,0.6944444444444444,True
532,4141.0,there is another object of the same shape<br>that is the same color as another different object,False,59.0,21.0,0.0,16.0,9.0,0.7219683785649522,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg75,21.0,False,True,True,True,0.6484210526315789,0.5061728395061729,0.8813559322033898,0.8888888888888888,True
533,4142.0,there is another object of the same shape<br>that is the same color as another different object,False,60.0,21.0,0.0,8.0,17.0,0.1441924548079214,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg75,21.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8813559322033898,0.8888888888888888,True
534,4143.0,there is another object of the same shape<br>that is the same color as another different object,False,61.0,21.0,1.0,20.0,5.0,0.7165816802315703,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg75,21.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8813559322033898,0.8888888888888888,True
535,4144.0,there is another object of the same shape<br>that is the same color as another different object,False,62.0,21.0,1.0,16.0,9.0,0.6320224903178087,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg75,21.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8813559322033898,0.8888888888888888,True
536,4145.0,there is another object of the same shape<br>that is the same color as another different object,False,63.0,21.0,1.0,16.0,9.0,0.7007510897693692,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large green triangle,hg75,21.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8813559322033898,0.8888888888888888,True
537,4146.0,there is another object of the same shape<br>that is the same color as another different object,False,64.0,22.0,0.0,3.0,22.0,0.0664854320320955,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg75,22.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.8888888888888888,True
538,4147.0,there is another object of the same shape<br>that is the same color as another different object,False,65.0,22.0,0.0,6.0,19.0,0.1236901796816027,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow triangle,hg75,22.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.875,0.8888888888888888,True
539,4148.0,there is another object of the same shape<br>that is the same color as another different object,False,66.0,23.0,1.0,20.0,5.0,0.7297524369752182,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg75,23.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8787878787878788,0.8888888888888888,True
540,4149.0,there is another object of the same shape<br>that is the same color as another different object,False,67.0,23.0,0.0,4.0,21.0,0.0931999768446303,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue triangle,hg75,23.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8787878787878788,0.8888888888888888,True
541,4150.0,there is another object of the same shape<br>that is the same color as another different object,False,68.0,23.0,1.0,16.0,9.0,0.7157028478615075,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,23.0,True,True,True,True,0.6484210526315789,0.5061728395061729,0.8787878787878788,0.8888888888888888,True
542,4151.0,there is another object of the same shape<br>that is the same color as another different object,False,69.0,24.0,0.0,7.0,18.0,0.0756628445353726,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg75,24.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8840579710144928,0.8888888888888888,True
543,4152.0,there is another object of the same shape<br>that is the same color as another different object,False,70.0,25.0,0.0,7.0,18.0,0.1148602450147109,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow circle,hg75,25.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8857142857142857,0.8888888888888888,True
544,4153.0,there is another object of the same shape<br>that is the same color as another different object,False,71.0,25.0,0.0,7.0,18.0,0.1148731875949806,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg75,25.0,False,False,True,False,0.6484210526315789,0.5061728395061729,0.8857142857142857,0.8888888888888888,True
545,5153.0,same shape as the unique largest,False,0.0,1.0,1.0,15.0,11.0,0.4955165499829945,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg44,1.0,True,False,True,True,0.6619999999999999,0.6449704142011834,,0.23076923076923078,False
546,5154.0,same shape as the unique largest,False,1.0,1.0,0.0,6.0,20.0,0.4684074021306514,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg44,1.0,False,False,True,True,0.6619999999999999,0.6449704142011834,,0.23076923076923078,False
547,5155.0,same shape as the unique largest,False,2.0,1.0,1.0,20.0,6.0,0.5037854732393043,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg44,1.0,True,True,True,True,0.6619999999999999,0.6449704142011834,,0.23076923076923078,True
548,5156.0,same shape as the unique largest,False,3.0,1.0,0.0,12.0,14.0,0.4794263572961199,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg44,1.0,False,False,True,True,0.6619999999999999,0.6449704142011834,,0.23076923076923078,False
549,5157.0,same shape as the unique largest,False,4.0,1.0,1.0,7.0,19.0,0.4100751721916822,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg44,1.0,True,False,True,True,0.6619999999999999,0.6449704142011834,,0.23076923076923078,False
550,5158.0,same shape as the unique largest,False,5.0,2.0,0.0,2.0,24.0,0.4804986054058417,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green circle,hg44,2.0,False,False,True,False,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
551,5159.0,same shape as the unique largest,False,6.0,2.0,0.0,1.0,25.0,0.2853589706446655,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green rectangle,hg44,2.0,False,False,True,False,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
552,5160.0,same shape as the unique largest,False,7.0,2.0,0.0,3.0,23.0,0.4571945573870835,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small blue rectangle,hg44,2.0,False,False,True,False,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
553,5161.0,same shape as the unique largest,False,8.0,2.0,1.0,23.0,3.0,0.8491198831029578,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue triangle,hg44,2.0,True,True,True,True,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
554,5162.0,same shape as the unique largest,False,9.0,3.0,0.0,4.0,22.0,0.371210280964533,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large green circle,hg44,3.0,False,False,True,False,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
555,5163.0,same shape as the unique largest,False,10.0,3.0,0.0,23.0,3.0,0.6109858132485897,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large green triangle,hg44,3.0,False,True,True,True,0.6619999999999999,0.6449704142011834,1.0,0.717948717948718,True
556,5164.0,same shape as the unique largest,False,11.0,4.0,1.0,24.0,2.0,0.428763434669122,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium blue triangle,hg44,4.0,True,False,True,True,0.6619999999999999,0.6449704142011834,0.8181818181818182,0.48717948717948717,False
557,5165.0,same shape as the unique largest,False,12.0,5.0,0.0,25.0,1.0,0.4005648538783362,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,5.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.9166666666666666,0.717948717948718,False
558,5166.0,same shape as the unique largest,False,13.0,5.0,1.0,0.0,26.0,0.2546809867699267,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green rectangle,hg44,5.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.9166666666666666,0.717948717948718,True
559,5167.0,same shape as the unique largest,False,14.0,5.0,0.0,0.0,26.0,0.1733691390038529,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green circle,hg44,5.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.9166666666666666,0.717948717948718,True
560,5168.0,same shape as the unique largest,False,15.0,6.0,1.0,8.0,18.0,0.1755994997093921,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small yellow rectangle,hg44,6.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.6666666666666666,0.6282051282051282,True
561,5169.0,same shape as the unique largest,False,16.0,7.0,0.0,8.0,18.0,0.187244886606436,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green circle,hg44,7.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.75,0.48717948717948717,True
562,5170.0,same shape as the unique largest,False,17.0,7.0,0.0,9.0,17.0,0.5350633084776746,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large blue rectangle,hg44,7.0,False,True,True,True,0.6619999999999999,0.6449704142011834,0.75,0.48717948717948717,True
563,5171.0,same shape as the unique largest,False,18.0,8.0,0.0,25.0,1.0,0.4088767789733083,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue triangle,hg44,8.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.7777777777777778,0.717948717948718,False
564,5172.0,same shape as the unique largest,False,19.0,8.0,0.0,15.0,11.0,0.3052344479538078,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,8.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.7777777777777778,0.717948717948718,False
565,5173.0,same shape as the unique largest,False,20.0,8.0,0.0,4.0,22.0,0.2896175223537511,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small blue circle,hg44,8.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7777777777777778,0.717948717948718,True
566,5174.0,same shape as the unique largest,False,21.0,8.0,0.0,5.0,21.0,0.2554989171931083,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue rectangle,hg44,8.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7777777777777778,0.717948717948718,True
567,5175.0,same shape as the unique largest,False,22.0,9.0,1.0,14.0,12.0,0.0859516644995892,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,9.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.6818181818181818,0.7692307692307693,True
568,5176.0,same shape as the unique largest,False,23.0,9.0,1.0,20.0,6.0,0.3449419524762334,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,9.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.6818181818181818,0.7692307692307693,True
569,5177.0,same shape as the unique largest,False,24.0,9.0,1.0,19.0,7.0,0.1012126468440328,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg44,9.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.6818181818181818,0.7692307692307693,True
570,5178.0,same shape as the unique largest,False,25.0,9.0,0.0,4.0,22.0,0.0747238913257888,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg44,9.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.6818181818181818,0.7692307692307693,True
571,5179.0,same shape as the unique largest,False,26.0,10.0,0.0,10.0,16.0,0.1283034237814035,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large yellow rectangle,hg44,10.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7692307692307693,0.717948717948718,True
572,5180.0,same shape as the unique largest,False,27.0,10.0,0.0,3.0,23.0,0.1241959922060687,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue circle,hg44,10.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7692307692307693,0.717948717948718,True
573,5181.0,same shape as the unique largest,False,28.0,10.0,0.0,7.0,19.0,0.4024125008982082,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green triangle,hg44,10.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.7692307692307693,0.717948717948718,False
574,5182.0,same shape as the unique largest,False,29.0,10.0,0.0,8.0,18.0,0.1591378709920263,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow rectangle,hg44,10.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7692307692307693,0.717948717948718,True
575,5183.0,same shape as the unique largest,False,30.0,11.0,0.0,4.0,21.0,0.0205458330863166,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow rectangle,hg44,11.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7333333333333333,0.6282051282051282,True
576,5184.0,same shape as the unique largest,False,31.0,11.0,0.0,3.0,22.0,0.0594715010101936,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large blue circle,hg44,11.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7333333333333333,0.6282051282051282,True
577,5185.0,same shape as the unique largest,False,32.0,11.0,0.0,4.0,21.0,0.1045648183542198,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small green triangle,hg44,11.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7333333333333333,0.6282051282051282,True
578,5186.0,same shape as the unique largest,False,33.0,11.0,0.0,5.0,20.0,0.0634412552998355,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",large yellow circle,hg44,11.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7333333333333333,0.6282051282051282,True
579,5187.0,same shape as the unique largest,False,34.0,12.0,1.0,23.0,2.0,0.325154254721383,"""λx.apply1(medium,x.o)""
",medium,"def is_rule(obj):
    return obj.medium",small blue triangle,hg44,12.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.7647058823529411,0.6282051282051282,True
580,5188.0,same shape as the unique largest,False,35.0,13.0,0.0,2.0,23.0,0.0345911030170782,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large yellow circle,hg44,13.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8571428571428571,0.8333333333333334,True
581,5189.0,same shape as the unique largest,False,36.0,13.0,0.0,2.0,23.0,0.0662401934314402,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large green circle,hg44,13.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8571428571428571,0.8333333333333334,True
582,5190.0,same shape as the unique largest,False,37.0,13.0,0.0,13.0,12.0,0.1364724350966071,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",large yellow triangle,hg44,13.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8571428571428571,0.8333333333333334,True
583,5191.0,same shape as the unique largest,False,38.0,14.0,0.0,7.0,18.0,0.1316703598469075,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",small yellow rectangle,hg44,14.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.868421052631579,0.8333333333333334,True
584,5192.0,same shape as the unique largest,False,39.0,14.0,1.0,23.0,2.0,0.5967285381999545,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium blue triangle,hg44,14.0,True,True,True,True,0.6619999999999999,0.6449704142011834,0.868421052631579,0.8333333333333334,True
585,5193.0,same shape as the unique largest,False,40.0,15.0,0.0,8.0,17.0,0.2502919751087802,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow rectangle,hg44,15.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.875,0.8333333333333334,True
586,5194.0,same shape as the unique largest,False,41.0,15.0,0.0,13.0,12.0,0.2835052150114734,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium green rectangle,hg44,15.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.875,0.8333333333333334,True
587,5195.0,same shape as the unique largest,False,42.0,15.0,0.0,2.0,23.0,0.3912901530445651,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium blue circle,hg44,15.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.875,0.8333333333333334,True
588,5196.0,same shape as the unique largest,False,43.0,15.0,0.0,1.0,24.0,0.0683944053095046,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",small green circle,hg44,15.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.875,0.8333333333333334,True
589,5197.0,same shape as the unique largest,False,44.0,16.0,0.0,1.0,24.0,0.0373987913308155,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium green circle,hg44,16.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8863636363636364,0.8333333333333334,True
590,5198.0,same shape as the unique largest,False,45.0,16.0,0.0,5.0,20.0,0.0122023324207702,"""λx.apply1(compose11(compose8(and,blue),triangle),x.o)""
",blue and triangle,"def is_rule(obj):
    return obj.blue and obj.triangle",medium yellow rectangle,hg44,16.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8863636363636364,0.8333333333333334,True
591,5199.0,same shape as the unique largest,False,46.0,17.0,1.0,3.0,22.0,0.2199626249564517,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",large blue circle,hg44,17.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.8043478260869565,0.717948717948718,True
592,5200.0,same shape as the unique largest,False,47.0,17.0,0.0,14.0,11.0,0.1189938110860566,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small yellow triangle,hg44,17.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.8043478260869565,0.717948717948718,False
593,5201.0,same shape as the unique largest,False,48.0,17.0,0.0,5.0,20.0,0.058592054913106,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium green rectangle,hg44,17.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8043478260869565,0.717948717948718,True
594,5202.0,same shape as the unique largest,False,49.0,17.0,0.0,14.0,11.0,0.1774440414021683,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",medium yellow triangle,hg44,17.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.8043478260869565,0.717948717948718,False
595,5203.0,same shape as the unique largest,False,50.0,17.0,0.0,2.0,23.0,0.0444499675232918,"""λx.apply1(triangle,x.o)""
",triangle,"def is_rule(obj):
    return obj.triangle",small green rectangle,hg44,17.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.8043478260869565,0.717948717948718,True
596,5204.0,same shape as the unique largest,False,51.0,18.0,0.0,5.0,20.0,0.2323786508904959,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue rectangle,hg44,18.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7450980392156863,0.7692307692307693,True
597,5205.0,same shape as the unique largest,False,52.0,18.0,1.0,2.0,23.0,0.0433424345389994,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg44,18.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.7450980392156863,0.7692307692307693,True
598,5206.0,same shape as the unique largest,False,53.0,18.0,0.0,1.0,24.0,0.0146206293735531,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,18.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7450980392156863,0.7692307692307693,True
599,5207.0,same shape as the unique largest,False,54.0,18.0,1.0,21.0,4.0,0.5972670812039951,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg44,18.0,True,True,True,False,0.6619999999999999,0.6449704142011834,0.7450980392156863,0.7692307692307693,False
600,5208.0,same shape as the unique largest,False,55.0,19.0,0.0,12.0,13.0,0.3146290435943228,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",medium blue circle,hg44,19.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.4909090909090909,0.5769230769230769,True
601,5209.0,same shape as the unique largest,False,56.0,19.0,0.0,13.0,12.0,0.1486787431535958,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",large yellow circle,hg44,19.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.4909090909090909,0.5769230769230769,True
602,5210.0,same shape as the unique largest,False,57.0,19.0,0.0,4.0,21.0,0.0789143009828876,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",small blue rectangle,hg44,19.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.4909090909090909,0.5769230769230769,False
603,5211.0,same shape as the unique largest,False,58.0,19.0,0.0,4.0,21.0,0.0461558528812702,"""λx.apply7(not,apply1(yellow,iota(filter(compose2(not,apply3(size-gt,x.o)), x.s))))""
","only one element in the set is smaller or equal in size to this object, and is not yellow","def is_rule(obj):
    return np.sum([(not x.yellow) and (x.size_num <= obj.size_num) for x in obj.current_set.objs]) == 1",large green rectangle,hg44,19.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.4909090909090909,0.5769230769230769,True
604,5212.0,same shape as the unique largest,False,59.0,20.0,0.0,12.0,12.0,0.030960871742991,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg44,20.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7457627118644068,0.7692307692307693,True
605,5213.0,same shape as the unique largest,False,60.0,20.0,0.0,1.0,23.0,0.0117814240784355,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg44,20.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7457627118644068,0.7692307692307693,True
606,5214.0,same shape as the unique largest,False,61.0,20.0,0.0,15.0,9.0,0.3172812787709063,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg44,20.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7457627118644068,0.7692307692307693,True
607,5215.0,same shape as the unique largest,False,62.0,21.0,0.0,15.0,9.0,0.0271240338787492,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,21.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7580645161290323,0.7692307692307693,True
608,5216.0,same shape as the unique largest,False,63.0,21.0,0.0,4.0,20.0,0.0274998424596333,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,21.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7580645161290323,0.7692307692307693,True
609,5217.0,same shape as the unique largest,False,64.0,21.0,0.0,14.0,10.0,0.1286968240627857,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,21.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7580645161290323,0.7692307692307693,True
610,5218.0,same shape as the unique largest,False,65.0,21.0,0.0,3.0,21.0,0.0864298639532989,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg44,21.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7580645161290323,0.7692307692307693,True
611,5219.0,same shape as the unique largest,False,66.0,22.0,0.0,5.0,19.0,0.0376735324159653,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg44,22.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7727272727272727,0.7692307692307693,True
612,5220.0,same shape as the unique largest,False,67.0,22.0,0.0,8.0,16.0,0.0399921212649587,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg44,22.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7727272727272727,0.7692307692307693,True
613,5221.0,same shape as the unique largest,False,68.0,22.0,0.0,3.0,21.0,0.0429313901328214,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg44,22.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7727272727272727,0.7692307692307693,True
614,5222.0,same shape as the unique largest,False,69.0,22.0,0.0,4.0,20.0,0.0352607681768404,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg44,22.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7727272727272727,0.7692307692307693,True
615,5223.0,same shape as the unique largest,False,70.0,22.0,0.0,11.0,13.0,0.019725410117303,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg44,22.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7727272727272727,0.7692307692307693,True
616,5224.0,same shape as the unique largest,False,71.0,23.0,1.0,9.0,15.0,0.0482262314419585,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg44,23.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.7887323943661971,0.7692307692307693,True
617,5225.0,same shape as the unique largest,False,72.0,23.0,1.0,8.0,16.0,0.3796318320946739,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg44,23.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.7887323943661971,0.7692307692307693,True
618,5226.0,same shape as the unique largest,False,73.0,24.0,0.0,15.0,9.0,0.3201015265763089,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",medium blue triangle,hg44,24.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.8767123287671232,0.8333333333333334,False
619,5227.0,same shape as the unique largest,False,74.0,24.0,0.0,2.0,22.0,0.094112478741863,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",large yellow rectangle,hg44,24.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.8767123287671232,0.8333333333333334,False
620,5228.0,same shape as the unique largest,False,75.0,24.0,0.0,1.0,23.0,0.1010275803303102,"""λx.apply7(not,exists(circle, x.s))""
",no circle in the set,"def is_rule(obj):
    return np.all([not x.circle for x in obj.current_set.objs])",large green rectangle,hg44,24.0,False,False,True,True,0.6619999999999999,0.6449704142011834,0.8767123287671232,0.8333333333333334,False
621,5229.0,same shape as the unique largest,False,76.0,25.0,0.0,1.0,23.0,0.0262169798542117,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg44,25.0,False,False,True,False,0.6619999999999999,0.6449704142011834,0.7763157894736842,0.7692307692307693,True
622,5230.0,same shape as the unique largest,False,77.0,25.0,1.0,6.0,18.0,0.2609695695315395,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg44,25.0,True,False,True,False,0.6619999999999999,0.6449704142011834,0.7763157894736842,0.7692307692307693,True
623,5599.0,unique largest blue object,False,0.0,1.0,0.0,8.0,17.0,0.4806882153621927,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg55,1.0,False,False,True,True,0.8706018518518519,0.6893491124260356,,0.19230769230769232,False
624,5600.0,unique largest blue object,False,1.0,1.0,0.0,14.0,11.0,0.4856571167659922,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg55,1.0,False,False,True,True,0.8706018518518519,0.6893491124260356,,0.19230769230769232,False
625,5601.0,unique largest blue object,False,2.0,1.0,0.0,8.0,17.0,0.4491950327561653,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg55,1.0,False,False,True,True,0.8706018518518519,0.6893491124260356,,0.19230769230769232,False
626,5602.0,unique largest blue object,False,3.0,1.0,1.0,15.0,10.0,0.5090230274942087,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg55,1.0,True,True,True,True,0.8706018518518519,0.6893491124260356,,0.19230769230769232,True
627,5603.0,unique largest blue object,False,4.0,1.0,0.0,11.0,14.0,0.4397586186662465,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg55,1.0,False,False,True,True,0.8706018518518519,0.6893491124260356,,0.19230769230769232,False
628,5604.0,unique largest blue object,False,5.0,2.0,1.0,11.0,14.0,0.3686078591628074,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",large blue rectangle,hg55,2.0,True,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.782051282051282,True
629,5605.0,unique largest blue object,False,6.0,2.0,0.0,16.0,9.0,0.3497490781614942,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small blue triangle,hg55,2.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.782051282051282,True
630,5606.0,unique largest blue object,False,7.0,2.0,0.0,5.0,20.0,0.1590176013024802,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",small green rectangle,hg55,2.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.782051282051282,True
631,5607.0,unique largest blue object,False,8.0,2.0,0.0,5.0,20.0,0.127366441451727,"""λx.apply1(compose11(compose7(and,large),triangle),x.o)""
",triangle and large,"def is_rule(obj):
    return obj.triangle and obj.large",large green circle,hg55,2.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.782051282051282,True
632,5608.0,unique largest blue object,False,9.0,3.0,0.0,6.0,19.0,0.0587691916952053,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green triangle,hg55,3.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.8974358974358975,True
633,5609.0,unique largest blue object,False,10.0,3.0,0.0,3.0,22.0,0.1310692763215684,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium yellow triangle,hg55,3.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.8974358974358975,True
634,5610.0,unique largest blue object,False,11.0,3.0,1.0,7.0,18.0,0.2468827725838309,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue circle,hg55,3.0,True,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.8974358974358975,True
635,5611.0,unique largest blue object,False,12.0,3.0,0.0,4.0,21.0,0.1111132661202418,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium yellow rectangle,hg55,3.0,False,False,True,False,0.8706018518518519,0.6893491124260356,1.0,0.8974358974358975,True
636,5612.0,unique largest blue object,False,13.0,4.0,0.0,3.0,22.0,0.2653199954112324,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,4.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.7692307692307693,0.8076923076923077,True
637,5613.0,unique largest blue object,False,14.0,5.0,0.0,2.0,23.0,0.088751610534814,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg55,5.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.7857142857142857,0.8076923076923077,True
638,5614.0,unique largest blue object,False,15.0,5.0,0.0,1.0,24.0,0.0605750096556221,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg55,5.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.7857142857142857,0.8076923076923077,True
639,5615.0,unique largest blue object,False,16.0,6.0,1.0,20.0,5.0,0.4865992711864919,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg55,6.0,True,False,True,False,0.8706018518518519,0.6893491124260356,0.8125,0.8076923076923077,True
640,5616.0,unique largest blue object,False,17.0,6.0,0.0,0.0,25.0,0.166730719256634,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg55,6.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8125,0.8076923076923077,True
641,5617.0,unique largest blue object,False,18.0,6.0,0.0,3.0,22.0,0.1550436689279877,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,6.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8125,0.8076923076923077,True
642,5618.0,unique largest blue object,False,19.0,6.0,0.0,1.0,24.0,0.0819973265940916,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg55,6.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8125,0.8076923076923077,True
643,5619.0,unique largest blue object,False,20.0,7.0,0.0,0.0,25.0,0.046589563618113,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg55,7.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9,0.8974358974358975,True
644,5620.0,unique largest blue object,False,21.0,7.0,0.0,1.0,24.0,0.0551701167329383,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg55,7.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9,0.8974358974358975,True
645,5621.0,unique largest blue object,False,22.0,7.0,0.0,8.0,17.0,0.4771529798558731,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,7.0,False,False,True,True,0.8706018518518519,0.6893491124260356,0.9,0.8974358974358975,False
646,5622.0,unique largest blue object,False,23.0,7.0,1.0,24.0,1.0,0.5781560040530849,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg55,7.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.9,0.8974358974358975,True
647,5623.0,unique largest blue object,False,24.0,7.0,0.0,0.0,25.0,0.0218144178971897,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg55,7.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9,0.8974358974358975,True
648,5624.0,unique largest blue object,False,25.0,8.0,1.0,23.0,2.0,0.7273411248637558,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large blue triangle,hg55,8.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.92,0.8974358974358975,True
649,5625.0,unique largest blue object,False,26.0,8.0,0.0,0.0,25.0,0.0400885735651854,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large green circle,hg55,8.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.92,0.8974358974358975,True
650,5626.0,unique largest blue object,False,27.0,8.0,0.0,2.0,23.0,0.0304275463283829,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green circle,hg55,8.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.92,0.8974358974358975,True
651,5627.0,unique largest blue object,False,28.0,9.0,0.0,2.0,23.0,0.016621467357254,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg55,9.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8928571428571429,0.8974358974358975,True
652,5628.0,unique largest blue object,False,29.0,9.0,1.0,18.0,7.0,0.4649772672455583,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,9.0,True,False,True,True,0.8706018518518519,0.6893491124260356,0.8928571428571429,0.8974358974358975,False
653,5629.0,unique largest blue object,False,30.0,9.0,0.0,1.0,24.0,0.0197870622863547,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg55,9.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8928571428571429,0.8974358974358975,True
654,5630.0,unique largest blue object,False,31.0,9.0,0.0,1.0,24.0,0.0119189480820978,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg55,9.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8928571428571429,0.8974358974358975,True
655,5631.0,unique largest blue object,False,32.0,10.0,0.0,1.0,24.0,0.0038461941617242,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg55,10.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.90625,0.8974358974358975,True
656,5632.0,unique largest blue object,False,33.0,10.0,0.0,1.0,24.0,0.0151294964582575,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg55,10.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.90625,0.8974358974358975,True
657,5633.0,unique largest blue object,False,34.0,11.0,0.0,11.0,14.0,0.5972807059123397,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg55,11.0,False,True,True,True,0.8706018518518519,0.6893491124260356,0.9117647058823529,0.8974358974358975,True
658,5634.0,unique largest blue object,False,35.0,11.0,0.0,8.0,17.0,0.5448798171789804,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,11.0,False,True,True,True,0.8706018518518519,0.6893491124260356,0.9117647058823529,0.8974358974358975,True
659,5635.0,unique largest blue object,False,36.0,11.0,1.0,23.0,2.0,0.7855500075488635,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg55,11.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.9117647058823529,0.8974358974358975,True
660,5636.0,unique largest blue object,False,37.0,12.0,1.0,18.0,7.0,0.3059827729229027,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium blue rectangle,hg55,12.0,True,False,True,False,0.8706018518518519,0.6893491124260356,0.918918918918919,0.8974358974358975,True
661,5637.0,unique largest blue object,False,38.0,13.0,0.0,0.0,24.0,0.0315622033917861,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg55,13.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.868421052631579,0.8974358974358975,True
662,5638.0,unique largest blue object,False,39.0,13.0,0.0,0.0,24.0,0.0183539695798344,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg55,13.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.868421052631579,0.8974358974358975,True
663,5639.0,unique largest blue object,False,40.0,13.0,0.0,1.0,23.0,0.0426744266759442,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg55,13.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.868421052631579,0.8974358974358975,True
664,5640.0,unique largest blue object,False,41.0,14.0,0.0,0.0,24.0,0.0229223630724391,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg55,14.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8780487804878049,0.8974358974358975,True
665,5641.0,unique largest blue object,False,42.0,14.0,0.0,0.0,24.0,0.0087907352085494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg55,14.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8780487804878049,0.8974358974358975,True
666,5642.0,unique largest blue object,False,43.0,14.0,0.0,0.0,24.0,0.0334383537166331,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg55,14.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8780487804878049,0.8974358974358975,True
667,5643.0,unique largest blue object,False,44.0,14.0,0.0,0.0,24.0,0.0232602265922423,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,14.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8780487804878049,0.8974358974358975,True
668,5644.0,unique largest blue object,False,45.0,15.0,0.0,0.0,24.0,0.0049269339579041,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,15.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8888888888888888,0.8974358974358975,True
669,5645.0,unique largest blue object,False,46.0,15.0,0.0,0.0,24.0,0.0052684184377085,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg55,15.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8888888888888888,0.8974358974358975,True
670,5646.0,unique largest blue object,False,47.0,16.0,0.0,0.0,24.0,0.0175733568562463,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg55,16.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8085106382978723,0.8076923076923077,True
671,5647.0,unique largest blue object,False,48.0,16.0,0.0,0.0,24.0,0.0353498096696967,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow circle,hg55,16.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8085106382978723,0.8076923076923077,True
672,5648.0,unique largest blue object,False,49.0,16.0,0.0,0.0,24.0,0.0141106065983649,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow circle,hg55,16.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8085106382978723,0.8076923076923077,True
673,5649.0,unique largest blue object,False,50.0,16.0,0.0,0.0,24.0,0.052588749294955,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg55,16.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8085106382978723,0.8076923076923077,True
674,5650.0,unique largest blue object,False,51.0,16.0,0.0,0.0,24.0,0.0177533976492441,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg55,16.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8085106382978723,0.8076923076923077,True
675,5651.0,unique largest blue object,False,52.0,17.0,0.0,1.0,23.0,0.026784583249082,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green rectangle,hg55,17.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8269230769230769,0.8076923076923077,True
676,5652.0,unique largest blue object,False,53.0,17.0,0.0,1.0,23.0,0.0114980066865655,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg55,17.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8269230769230769,0.8076923076923077,True
677,5653.0,unique largest blue object,False,54.0,17.0,0.0,17.0,7.0,0.4302607583008466,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg55,17.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8269230769230769,0.8076923076923077,True
678,5654.0,unique largest blue object,False,55.0,17.0,0.0,16.0,8.0,0.3882314340332868,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg55,17.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8269230769230769,0.8076923076923077,True
679,5655.0,unique largest blue object,False,56.0,17.0,0.0,1.0,23.0,0.0080342452840795,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg55,17.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8269230769230769,0.8076923076923077,True
680,5656.0,unique largest blue object,False,57.0,18.0,0.0,0.0,24.0,0.0539044762977027,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green circle,hg55,18.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8421052631578947,0.8076923076923077,True
681,5657.0,unique largest blue object,False,58.0,19.0,0.0,0.0,24.0,0.0206561319447473,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green rectangle,hg55,19.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8448275862068966,0.8076923076923077,True
682,5658.0,unique largest blue object,False,59.0,19.0,1.0,17.0,7.0,0.3669394334899607,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg55,19.0,True,False,True,False,0.8706018518518519,0.6893491124260356,0.8448275862068966,0.8076923076923077,True
683,5659.0,unique largest blue object,False,60.0,20.0,1.0,17.0,7.0,0.6268894858386602,"""λx.apply1(compose11(compose8(and,blue),compose2(not,small)),x.o)""
",blue and (not small),"def is_rule(obj):
    return obj.blue and (not obj.small)",medium blue triangle,hg55,20.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.9333333333333333,0.9230769230769231,True
684,5660.0,unique largest blue object,False,61.0,21.0,0.0,2.0,22.0,0.0255595317366896,"""λx.apply1(compose11(compose8(and,blue),compose2(not,small)),x.o)""
",blue and (not small),"def is_rule(obj):
    return obj.blue and (not obj.small)",large green rectangle,hg55,21.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9344262295081968,0.9230769230769231,True
685,5661.0,unique largest blue object,False,62.0,22.0,0.0,0.0,24.0,0.010288282059264,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg55,22.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8870967741935484,0.8974358974358975,True
686,5662.0,unique largest blue object,False,63.0,22.0,0.0,0.0,24.0,0.0222761899168517,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg55,22.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8870967741935484,0.8974358974358975,True
687,5663.0,unique largest blue object,False,64.0,22.0,0.0,0.0,24.0,0.0104068235467593,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg55,22.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8870967741935484,0.8974358974358975,True
688,5664.0,unique largest blue object,False,65.0,22.0,0.0,1.0,23.0,0.0208329409716725,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg55,22.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8870967741935484,0.8974358974358975,True
689,5665.0,unique largest blue object,False,66.0,22.0,1.0,21.0,3.0,0.7621070248527531,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg55,22.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.8870967741935484,0.8974358974358975,True
690,5666.0,unique largest blue object,False,67.0,23.0,0.0,11.0,12.0,0.5424222410858874,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg55,23.0,False,True,True,True,0.8706018518518519,0.6893491124260356,0.8955223880597015,0.8974358974358975,True
691,5667.0,unique largest blue object,False,68.0,23.0,0.0,0.0,23.0,0.0010644123678957,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg55,23.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8955223880597015,0.8974358974358975,True
692,5668.0,unique largest blue object,False,69.0,23.0,0.0,0.0,23.0,0.0015179083164866,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg55,23.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8955223880597015,0.8974358974358975,True
693,5669.0,unique largest blue object,False,70.0,23.0,0.0,2.0,21.0,0.0035529867426475,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg55,23.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8955223880597015,0.8974358974358975,True
694,5670.0,unique largest blue object,False,71.0,23.0,1.0,21.0,2.0,0.8188677216381848,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg55,23.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.8955223880597015,0.8974358974358975,True
695,5671.0,unique largest blue object,False,72.0,24.0,0.0,0.0,23.0,0.0031659124186944,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small yellow triangle,hg55,24.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9166666666666666,0.8974358974358975,True
696,5672.0,unique largest blue object,False,73.0,24.0,0.0,0.0,23.0,0.0035324947357366,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg55,24.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.9166666666666666,0.8974358974358975,True
697,5673.0,unique largest blue object,False,74.0,24.0,1.0,21.0,2.0,0.5489769480668656,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",medium blue triangle,hg55,24.0,True,True,True,False,0.8706018518518519,0.6893491124260356,0.9166666666666666,0.8974358974358975,False
698,5674.0,unique largest blue object,False,75.0,25.0,0.0,1.0,22.0,0.010324265050599,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg55,25.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8933333333333333,0.8974358974358975,True
699,5675.0,unique largest blue object,False,76.0,25.0,1.0,19.0,4.0,0.6992352242858715,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg55,25.0,True,True,True,True,0.8706018518518519,0.6893491124260356,0.8933333333333333,0.8974358974358975,True
700,5676.0,unique largest blue object,False,77.0,25.0,0.0,0.0,23.0,0.0036280533912531,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg55,25.0,False,False,True,False,0.8706018518518519,0.6893491124260356,0.8933333333333333,0.8974358974358975,True
701,6049.0,(same shape as one of the largest) and blue,False,0.0,1.0,0.0,10.0,16.0,0.3564421919421647,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg46,1.0,False,False,True,True,0.8444055944055944,0.5976203353163871,,0.27906976744186046,False
702,6050.0,(same shape as one of the largest) and blue,False,1.0,2.0,1.0,10.0,16.0,0.5334409821338113,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue circle,hg46,2.0,True,True,True,False,0.8444055944055944,0.5976203353163871,1.0,0.7209302325581395,False
703,6051.0,(same shape as one of the largest) and blue,False,2.0,2.0,1.0,7.0,19.0,0.36109737056222,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg46,2.0,True,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.7209302325581395,True
704,6052.0,(same shape as one of the largest) and blue,False,3.0,2.0,0.0,6.0,20.0,0.3178205664835332,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg46,2.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.7209302325581395,True
705,6053.0,(same shape as one of the largest) and blue,False,4.0,2.0,0.0,7.0,19.0,0.3968540863824046,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green rectangle,hg46,2.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.7209302325581395,True
706,6054.0,(same shape as one of the largest) and blue,False,5.0,2.0,0.0,6.0,20.0,0.3585787681397505,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg46,2.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.7209302325581395,True
707,6055.0,(same shape as one of the largest) and blue,False,6.0,3.0,0.0,2.0,24.0,0.0762562251042027,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg46,3.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
708,6056.0,(same shape as one of the largest) and blue,False,7.0,3.0,0.0,6.0,20.0,0.0601568562390184,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg46,3.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
709,6057.0,(same shape as one of the largest) and blue,False,8.0,3.0,0.0,5.0,21.0,0.1099216210603799,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg46,3.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
710,6058.0,(same shape as one of the largest) and blue,False,9.0,4.0,0.0,2.0,24.0,0.1031439499787438,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg46,4.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
711,6059.0,(same shape as one of the largest) and blue,False,10.0,4.0,1.0,21.0,5.0,0.5539606381435078,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg46,4.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
712,6060.0,(same shape as one of the largest) and blue,False,11.0,5.0,0.0,7.0,19.0,0.1688322829077151,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,5.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
713,6061.0,(same shape as one of the largest) and blue,False,12.0,5.0,0.0,4.0,22.0,0.321651551777677,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg46,5.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
714,6062.0,(same shape as one of the largest) and blue,False,13.0,6.0,0.0,3.0,23.0,0.209870571187821,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,6.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
715,6063.0,(same shape as one of the largest) and blue,False,14.0,6.0,0.0,4.0,22.0,0.0594127348548454,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,6.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
716,6064.0,(same shape as one of the largest) and blue,False,15.0,6.0,1.0,22.0,4.0,0.6509973990991966,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,6.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
717,6065.0,(same shape as one of the largest) and blue,False,16.0,6.0,0.0,6.0,20.0,0.1673435498981916,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,6.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
718,6066.0,(same shape as one of the largest) and blue,False,17.0,6.0,0.0,5.0,21.0,0.165329744228643,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,6.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
719,6067.0,(same shape as one of the largest) and blue,False,18.0,7.0,0.0,4.0,22.0,0.019786494233017,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,7.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
720,6068.0,(same shape as one of the largest) and blue,False,19.0,7.0,0.0,1.0,25.0,0.0176105319872021,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg46,7.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
721,6069.0,(same shape as one of the largest) and blue,False,20.0,7.0,0.0,3.0,23.0,0.0322962956051924,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg46,7.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
722,6070.0,(same shape as one of the largest) and blue,False,21.0,7.0,0.0,3.0,23.0,0.0316824244257532,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,7.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
723,6071.0,(same shape as one of the largest) and blue,False,22.0,7.0,0.0,2.0,24.0,0.0364806139751863,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg46,7.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
724,6072.0,(same shape as one of the largest) and blue,False,23.0,8.0,1.0,21.0,5.0,0.7224375652446042,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,8.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
725,6073.0,(same shape as one of the largest) and blue,False,24.0,8.0,0.0,2.0,24.0,0.0332295597423808,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,8.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
726,6074.0,(same shape as one of the largest) and blue,False,25.0,8.0,0.0,1.0,25.0,0.0385553813443948,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg46,8.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
727,6075.0,(same shape as one of the largest) and blue,False,26.0,8.0,1.0,18.0,8.0,0.5723156445392306,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg46,8.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
728,6076.0,(same shape as one of the largest) and blue,False,27.0,8.0,0.0,2.0,24.0,0.0342574857905901,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,8.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
729,6077.0,(same shape as one of the largest) and blue,False,28.0,9.0,1.0,26.0,0.0,0.9149355940304532,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,9.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
730,6078.0,(same shape as one of the largest) and blue,False,29.0,9.0,0.0,22.0,4.0,0.8721156178130514,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg46,9.0,False,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
731,6079.0,(same shape as one of the largest) and blue,False,30.0,9.0,0.0,0.0,26.0,0.0070089281692844,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,9.0,False,False,True,False,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
732,6080.0,(same shape as one of the largest) and blue,False,31.0,9.0,1.0,22.0,4.0,0.9118660575475132,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg46,9.0,True,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
733,6081.0,(same shape as one of the largest) and blue,False,32.0,9.0,0.0,24.0,2.0,0.8767735167158435,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg46,9.0,False,True,True,True,0.8444055944055944,0.5976203353163871,1.0,0.9186046511627907,True
734,6082.0,(same shape as one of the largest) and blue,False,33.0,10.0,0.0,3.0,23.0,0.0089695499311801,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg46,10.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9393939393939394,0.9186046511627907,True
735,6083.0,(same shape as one of the largest) and blue,False,34.0,10.0,0.0,2.0,24.0,0.0124185269569352,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg46,10.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9393939393939394,0.9186046511627907,True
736,6084.0,(same shape as one of the largest) and blue,False,35.0,10.0,1.0,21.0,5.0,0.4665759534427707,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,10.0,True,False,True,True,0.8444055944055944,0.5976203353163871,0.9393939393939394,0.9186046511627907,False
737,6085.0,(same shape as one of the largest) and blue,False,36.0,11.0,0.0,1.0,25.0,0.0267484085812839,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,11.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9444444444444444,0.9186046511627907,True
738,6086.0,(same shape as one of the largest) and blue,False,37.0,11.0,0.0,0.0,26.0,0.0049831428648303,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,11.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9444444444444444,0.9186046511627907,True
739,6087.0,(same shape as one of the largest) and blue,False,38.0,12.0,1.0,26.0,0.0,0.7963457986754747,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,12.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9473684210526315,0.9186046511627907,True
740,6088.0,(same shape as one of the largest) and blue,False,39.0,12.0,0.0,2.0,24.0,0.0149265145981871,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,12.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9473684210526315,0.9186046511627907,True
741,6089.0,(same shape as one of the largest) and blue,False,40.0,13.0,1.0,22.0,4.0,0.8900398685204891,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,13.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.95,0.9186046511627907,True
742,6090.0,(same shape as one of the largest) and blue,False,41.0,13.0,0.0,0.0,26.0,0.0205770110729872,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,13.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.95,0.9186046511627907,True
743,6091.0,(same shape as one of the largest) and blue,False,42.0,13.0,1.0,22.0,4.0,0.8685520565056777,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg46,13.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.95,0.9186046511627907,True
744,6092.0,(same shape as one of the largest) and blue,False,43.0,13.0,0.0,0.0,26.0,0.0127573600182131,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg46,13.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.95,0.9186046511627907,True
745,6093.0,(same shape as one of the largest) and blue,False,44.0,13.0,0.0,1.0,25.0,0.0138213431437179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg46,13.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.95,0.9186046511627907,True
746,6094.0,(same shape as one of the largest) and blue,False,45.0,14.0,0.0,1.0,25.0,0.012874694828497,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,14.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9555555555555556,0.9186046511627907,True
747,6095.0,(same shape as one of the largest) and blue,False,46.0,14.0,0.0,0.0,26.0,0.0015196783792816,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg46,14.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9555555555555556,0.9186046511627907,True
748,6096.0,(same shape as one of the largest) and blue,False,47.0,15.0,1.0,26.0,0.0,0.8165217364168029,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg46,15.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9574468085106383,0.9186046511627907,True
749,6097.0,(same shape as one of the largest) and blue,False,48.0,15.0,0.0,1.0,25.0,0.0065909807268553,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,15.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9574468085106383,0.9186046511627907,True
750,6098.0,(same shape as one of the largest) and blue,False,49.0,15.0,0.0,0.0,26.0,0.0042195873537593,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg46,15.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9574468085106383,0.9186046511627907,True
751,6099.0,(same shape as one of the largest) and blue,False,50.0,15.0,0.0,1.0,25.0,0.0034583505577074,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,15.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9574468085106383,0.9186046511627907,True
752,6100.0,(same shape as one of the largest) and blue,False,51.0,16.0,1.0,23.0,3.0,0.90989482471241,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,16.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9607843137254902,0.9186046511627907,True
753,6101.0,(same shape as one of the largest) and blue,False,52.0,16.0,0.0,0.0,26.0,0.0111231463349668,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg46,16.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9607843137254902,0.9186046511627907,True
754,6102.0,(same shape as one of the largest) and blue,False,53.0,16.0,0.0,0.0,26.0,0.0021883273601588,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,16.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9607843137254902,0.9186046511627907,True
755,6103.0,(same shape as one of the largest) and blue,False,54.0,16.0,1.0,26.0,0.0,0.917219263525908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,16.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9607843137254902,0.9186046511627907,True
756,6104.0,(same shape as one of the largest) and blue,False,55.0,17.0,1.0,25.0,1.0,0.9630498812051655,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,17.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9636363636363636,0.9186046511627907,True
757,6105.0,(same shape as one of the largest) and blue,False,56.0,18.0,1.0,26.0,0.0,0.9693713718945672,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,18.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9642857142857143,0.9186046511627907,True
758,6106.0,(same shape as one of the largest) and blue,False,57.0,18.0,1.0,26.0,0.0,0.9851925637863131,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,18.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9642857142857143,0.9186046511627907,True
759,6107.0,(same shape as one of the largest) and blue,False,58.0,19.0,0.0,0.0,26.0,0.0037694381385335,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,19.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9655172413793104,0.9186046511627907,True
760,6108.0,(same shape as one of the largest) and blue,False,59.0,19.0,0.0,2.0,24.0,0.0040003407532367,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,19.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9655172413793104,0.9186046511627907,True
761,6109.0,(same shape as one of the largest) and blue,False,60.0,19.0,0.0,1.0,25.0,0.0077893532383086,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg46,19.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9655172413793104,0.9186046511627907,True
762,6110.0,(same shape as one of the largest) and blue,False,61.0,19.0,0.0,1.0,25.0,0.017894400479804,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg46,19.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9655172413793104,0.9186046511627907,True
763,6111.0,(same shape as one of the largest) and blue,False,62.0,20.0,0.0,0.0,26.0,0.0058773517290546,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg46,20.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.967741935483871,0.9186046511627907,True
764,6112.0,(same shape as one of the largest) and blue,False,63.0,20.0,1.0,26.0,0.0,0.9861774887585852,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,20.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.967741935483871,0.9186046511627907,True
765,6113.0,(same shape as one of the largest) and blue,False,64.0,20.0,1.0,22.0,4.0,0.9743822995887969,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg46,20.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.967741935483871,0.9186046511627907,True
766,6114.0,(same shape as one of the largest) and blue,False,65.0,20.0,1.0,25.0,1.0,0.982231969612826,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg46,20.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.967741935483871,0.9186046511627907,True
767,6115.0,(same shape as one of the largest) and blue,False,66.0,21.0,0.0,0.0,26.0,0.0008874585355442,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,21.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9696969696969697,0.9186046511627907,True
768,6116.0,(same shape as one of the largest) and blue,False,67.0,22.0,0.0,0.0,26.0,0.0153728699649491,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,22.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9701492537313433,0.9186046511627907,True
769,6117.0,(same shape as one of the largest) and blue,False,68.0,22.0,0.0,0.0,26.0,0.0056571653517494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg46,22.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9701492537313433,0.9186046511627907,True
770,6118.0,(same shape as one of the largest) and blue,False,69.0,22.0,0.0,0.0,26.0,0.0048273854939679,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg46,22.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9701492537313433,0.9186046511627907,True
771,6119.0,(same shape as one of the largest) and blue,False,70.0,22.0,0.0,0.0,26.0,0.0077855216960642,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg46,22.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9701492537313433,0.9186046511627907,True
772,6120.0,(same shape as one of the largest) and blue,False,71.0,22.0,1.0,25.0,1.0,0.995212625838576,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,22.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9701492537313433,0.9186046511627907,True
773,6121.0,(same shape as one of the largest) and blue,False,72.0,23.0,0.0,0.0,26.0,0.0049829255739268,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg46,23.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9722222222222222,0.9186046511627907,True
774,6122.0,(same shape as one of the largest) and blue,False,73.0,23.0,0.0,0.0,26.0,0.0002177642701326,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg46,23.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9722222222222222,0.9186046511627907,True
775,6123.0,(same shape as one of the largest) and blue,False,74.0,23.0,0.0,0.0,26.0,0.000429630221447,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg46,23.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.9722222222222222,0.9186046511627907,True
776,6124.0,(same shape as one of the largest) and blue,False,75.0,23.0,1.0,26.0,0.0,0.997503409935348,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,23.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.9722222222222222,0.9186046511627907,True
777,6125.0,(same shape as one of the largest) and blue,False,76.0,23.0,0.0,26.0,0.0,0.9700415205053332,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,23.0,False,True,True,True,0.8444055944055944,0.5976203353163871,0.9722222222222222,0.9186046511627907,True
778,6126.0,(same shape as one of the largest) and blue,False,77.0,24.0,0.0,15.0,11.0,0.85035803423375,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg46,24.0,False,True,True,True,0.8444055944055944,0.5976203353163871,0.961038961038961,0.9186046511627907,True
779,6127.0,(same shape as one of the largest) and blue,False,78.0,24.0,0.0,16.0,10.0,0.7835075901965638,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg46,24.0,False,True,True,True,0.8444055944055944,0.5976203353163871,0.961038961038961,0.9186046511627907,True
780,6128.0,(same shape as one of the largest) and blue,False,79.0,24.0,1.0,26.0,0.0,0.9969478597292892,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg46,24.0,True,True,True,True,0.8444055944055944,0.5976203353163871,0.961038961038961,0.9186046511627907,True
781,6129.0,(same shape as one of the largest) and blue,False,80.0,24.0,0.0,0.0,26.0,0.0021768819806311,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg46,24.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.961038961038961,0.9186046511627907,True
782,6130.0,(same shape as one of the largest) and blue,False,81.0,25.0,0.0,1.0,25.0,0.0019442374336904,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",large yellow rectangle,hg46,25.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.8765432098765432,0.8837209302325582,True
783,6131.0,(same shape as one of the largest) and blue,False,82.0,25.0,0.0,11.0,15.0,0.2722192116915494,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue circle,hg46,25.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.8765432098765432,0.8837209302325582,True
784,6132.0,(same shape as one of the largest) and blue,False,83.0,25.0,0.0,1.0,25.0,0.0009976533807503,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small green triangle,hg46,25.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.8765432098765432,0.8837209302325582,True
785,6133.0,(same shape as one of the largest) and blue,False,84.0,25.0,0.0,10.0,16.0,0.269158454830972,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small blue triangle,hg46,25.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.8765432098765432,0.8837209302325582,True
786,6134.0,(same shape as one of the largest) and blue,False,85.0,25.0,0.0,1.0,25.0,0.0012110208870126,"""λx.apply1(compose11(compose8(and,large),blue),x.o)""
",large and blue,"def is_rule(obj):
    return obj.large and obj.blue",small yellow rectangle,hg46,25.0,False,False,True,False,0.8444055944055944,0.5976203353163871,0.8765432098765432,0.8837209302325582,True
787,6290.0,there is another object of the same shape and another object of the same color,False,0.0,1.0,0.0,4.0,17.0,0.4796923432645599,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg73,1.0,False,False,True,True,0.681704260651629,0.5385802469135802,,0.3611111111111111,False
788,6291.0,there is another object of the same shape and another object of the same color,False,1.0,1.0,0.0,5.0,16.0,0.4584272152180801,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg73,1.0,False,False,True,True,0.681704260651629,0.5385802469135802,,0.3611111111111111,False
789,6292.0,there is another object of the same shape and another object of the same color,False,2.0,1.0,1.0,15.0,6.0,0.4431425766891834,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow rectangle,hg73,1.0,True,False,True,True,0.681704260651629,0.5385802469135802,,0.3611111111111111,False
790,6293.0,there is another object of the same shape and another object of the same color,False,3.0,1.0,0.0,6.0,15.0,0.4183692236009619,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg73,1.0,False,False,True,True,0.681704260651629,0.5385802469135802,,0.3611111111111111,False
791,6294.0,there is another object of the same shape and another object of the same color,False,4.0,1.0,0.0,11.0,10.0,0.4798510823923152,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg73,1.0,False,False,True,True,0.681704260651629,0.5385802469135802,,0.3611111111111111,False
792,6295.0,there is another object of the same shape and another object of the same color,False,5.0,2.0,0.0,11.0,10.0,0.2543072843345726,"""λx.apply1(compose11(compose7(and,yellow),large),x.o)""
",yellow and large,"def is_rule(obj):
    return obj.yellow and obj.large",large green rectangle,hg73,2.0,False,False,True,False,0.681704260651629,0.5385802469135802,1.0,0.6388888888888888,True
793,6296.0,there is another object of the same shape and another object of the same color,False,6.0,2.0,0.0,1.0,20.0,0.2862232903614767,"""λx.apply1(compose11(compose7(and,yellow),large),x.o)""
",yellow and large,"def is_rule(obj):
    return obj.yellow and obj.large",small blue circle,hg73,2.0,False,False,True,False,0.681704260651629,0.5385802469135802,1.0,0.6388888888888888,True
794,6297.0,there is another object of the same shape and another object of the same color,False,7.0,3.0,0.0,6.0,15.0,0.1698722959924907,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue circle,hg73,3.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.6388888888888888,True
795,6298.0,there is another object of the same shape and another object of the same color,False,8.0,3.0,0.0,3.0,18.0,0.2053238839243931,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg73,3.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.6388888888888888,True
796,6299.0,there is another object of the same shape and another object of the same color,False,9.0,3.0,1.0,1.0,20.0,0.2064752914981227,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium blue triangle,hg73,3.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.6388888888888888,True
797,6300.0,there is another object of the same shape and another object of the same color,False,10.0,3.0,0.0,6.0,15.0,0.2254916806609799,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg73,3.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.6388888888888888,True
798,6301.0,there is another object of the same shape and another object of the same color,False,11.0,3.0,1.0,3.0,18.0,0.214425662783583,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg73,3.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.6388888888888888,True
799,6302.0,there is another object of the same shape and another object of the same color,False,12.0,4.0,0.0,8.0,13.0,0.1562569349723617,"""λx.apply1(compose11(compose8(and,triangle),medium),x.o)""
",triangle and medium,"def is_rule(obj):
    return obj.triangle and obj.medium",medium yellow circle,hg73,4.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.9166666666666666,0.625,True
800,6303.0,there is another object of the same shape and another object of the same color,False,13.0,4.0,0.0,7.0,14.0,0.1504707636257762,"""λx.apply1(compose11(compose8(and,triangle),medium),x.o)""
",triangle and medium,"def is_rule(obj):
    return obj.triangle and obj.medium",large blue rectangle,hg73,4.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.9166666666666666,0.625,True
801,6304.0,there is another object of the same shape and another object of the same color,False,14.0,5.0,0.0,9.0,12.0,0.1066601817095715,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow rectangle,hg73,5.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7857142857142857,0.6388888888888888,True
802,6305.0,there is another object of the same shape and another object of the same color,False,15.0,6.0,0.0,1.0,20.0,0.1862669409805448,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green triangle,hg73,6.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8,0.6388888888888888,True
803,6306.0,there is another object of the same shape and another object of the same color,False,16.0,7.0,1.0,6.0,15.0,0.1881276236508711,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue rectangle,hg73,7.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.8125,0.6388888888888888,True
804,6307.0,there is another object of the same shape and another object of the same color,False,17.0,7.0,0.0,3.0,18.0,0.1456616260027203,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg73,7.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8125,0.6388888888888888,True
805,6308.0,there is another object of the same shape and another object of the same color,False,18.0,7.0,0.0,1.0,20.0,0.2039774382575387,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue circle,hg73,7.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8125,0.6388888888888888,True
806,6309.0,there is another object of the same shape and another object of the same color,False,19.0,7.0,1.0,18.0,3.0,0.1546950973795446,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg73,7.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.8125,0.6388888888888888,True
807,6310.0,there is another object of the same shape and another object of the same color,False,20.0,8.0,0.0,8.0,13.0,0.4534278620122904,"""λx.exists(apply3(size-gt,x.o), filter(apply2(same_color,x.o), x.s))""
",larger than an object of the same color,"def is_rule(obj):
    return np.any([(x.color == obj.color) and (obj.size_num > x.size_num) for x in obj.current_set.objs])",large blue circle,hg73,8.0,False,False,True,True,0.681704260651629,0.5385802469135802,0.9,0.6944444444444444,False
808,6311.0,there is another object of the same shape and another object of the same color,False,21.0,8.0,0.0,6.0,15.0,0.1484879785068642,"""λx.exists(apply3(size-gt,x.o), filter(apply2(same_color,x.o), x.s))""
",larger than an object of the same color,"def is_rule(obj):
    return np.any([(x.color == obj.color) and (obj.size_num > x.size_num) for x in obj.current_set.objs])",medium blue triangle,hg73,8.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.9,0.6944444444444444,True
809,6312.0,there is another object of the same shape and another object of the same color,False,22.0,9.0,1.0,7.0,14.0,0.1604145192437727,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow triangle,hg73,9.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7727272727272727,0.6388888888888888,True
810,6313.0,there is another object of the same shape and another object of the same color,False,23.0,9.0,0.0,4.0,17.0,0.1745195660060972,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg73,9.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7727272727272727,0.6388888888888888,True
811,6314.0,there is another object of the same shape and another object of the same color,False,24.0,9.0,1.0,13.0,8.0,0.353869844313067,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow rectangle,hg73,9.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7727272727272727,0.6388888888888888,True
812,6315.0,there is another object of the same shape and another object of the same color,False,25.0,9.0,1.0,5.0,16.0,0.2114000774556643,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small yellow rectangle,hg73,9.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7727272727272727,0.6388888888888888,True
813,6316.0,there is another object of the same shape and another object of the same color,False,26.0,10.0,0.0,3.0,18.0,0.1644809318040643,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large green circle,hg73,10.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6923076923076923,0.5416666666666666,True
814,6317.0,there is another object of the same shape and another object of the same color,False,27.0,10.0,1.0,13.0,8.0,0.2186197413782338,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium yellow circle,hg73,10.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.6923076923076923,0.5416666666666666,False
815,6318.0,there is another object of the same shape and another object of the same color,False,28.0,10.0,0.0,16.0,5.0,0.537040785003569,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large yellow triangle,hg73,10.0,False,True,True,True,0.681704260651629,0.5385802469135802,0.6923076923076923,0.5416666666666666,True
816,6319.0,there is another object of the same shape and another object of the same color,False,29.0,11.0,1.0,14.0,7.0,0.4172956147054947,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large blue rectangle,hg73,11.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.6896551724137931,0.5416666666666666,True
817,6320.0,there is another object of the same shape and another object of the same color,False,30.0,11.0,0.0,5.0,16.0,0.1030862824405858,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",large green triangle,hg73,11.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6896551724137931,0.5416666666666666,True
818,6321.0,there is another object of the same shape and another object of the same color,False,31.0,11.0,1.0,8.0,13.0,0.4479499542794656,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",small blue rectangle,hg73,11.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.6896551724137931,0.5416666666666666,True
819,6322.0,there is another object of the same shape and another object of the same color,False,32.0,11.0,0.0,12.0,9.0,0.5045478098451213,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium yellow rectangle,hg73,11.0,False,True,True,True,0.681704260651629,0.5385802469135802,0.6896551724137931,0.5416666666666666,True
820,6323.0,there is another object of the same shape and another object of the same color,False,33.0,11.0,0.0,3.0,18.0,0.2441347650187708,"""λx.apply1(yellow,x.o)""
",yellow,"def is_rule(obj):
    return obj.yellow",medium green circle,hg73,11.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6896551724137931,0.5416666666666666,True
821,6324.0,there is another object of the same shape and another object of the same color,False,34.0,12.0,0.0,8.0,13.0,0.1246337801319441,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow triangle,hg73,12.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7647058823529411,0.7083333333333334,True
822,6325.0,there is another object of the same shape and another object of the same color,False,35.0,12.0,0.0,9.0,12.0,0.14758224935224,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow rectangle,hg73,12.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7647058823529411,0.7083333333333334,True
823,6326.0,there is another object of the same shape and another object of the same color,False,36.0,13.0,0.0,7.0,14.0,0.2354576542459199,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,13.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
824,6327.0,there is another object of the same shape and another object of the same color,False,37.0,13.0,1.0,14.0,7.0,0.1342338906399618,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow circle,hg73,13.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
825,6328.0,there is another object of the same shape and another object of the same color,False,38.0,13.0,0.0,7.0,14.0,0.041578290500297,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow rectangle,hg73,13.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
826,6329.0,there is another object of the same shape and another object of the same color,False,39.0,14.0,0.0,7.0,14.0,0.1786901796618849,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,14.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7692307692307693,0.7083333333333334,True
827,6330.0,there is another object of the same shape and another object of the same color,False,40.0,14.0,1.0,7.0,14.0,0.3613955892448075,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",small green rectangle,hg73,14.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.7692307692307693,0.7083333333333334,False
828,6331.0,there is another object of the same shape and another object of the same color,False,41.0,14.0,1.0,10.0,11.0,0.3418933722981592,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large green rectangle,hg73,14.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.7692307692307693,0.7083333333333334,False
829,6332.0,there is another object of the same shape and another object of the same color,False,42.0,14.0,1.0,12.0,9.0,0.4883984567547941,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",small blue rectangle,hg73,14.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.7692307692307693,0.7083333333333334,False
830,6333.0,there is another object of the same shape and another object of the same color,False,43.0,15.0,0.0,12.0,9.0,0.0665102603430796,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow circle,hg73,15.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7906976744186046,0.7083333333333334,True
831,6334.0,there is another object of the same shape and another object of the same color,False,44.0,15.0,0.0,9.0,12.0,0.4832657209113904,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large yellow rectangle,hg73,15.0,False,False,True,True,0.681704260651629,0.5385802469135802,0.7906976744186046,0.7083333333333334,False
832,6335.0,there is another object of the same shape and another object of the same color,False,45.0,16.0,0.0,3.0,18.0,0.0632530643730433,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow triangle,hg73,16.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
833,6336.0,there is another object of the same shape and another object of the same color,False,46.0,16.0,0.0,6.0,15.0,0.1042468502589599,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium blue rectangle,hg73,16.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
834,6337.0,there is another object of the same shape and another object of the same color,False,47.0,16.0,1.0,12.0,9.0,0.3403347481223591,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",medium yellow circle,hg73,16.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
835,6338.0,there is another object of the same shape and another object of the same color,False,48.0,16.0,1.0,14.0,7.0,0.2599974090809382,"""λx.apply1(compose11(compose8(and,rectangle),compose2(not,medium)),x.o)""
",(not medium) and rectangle,"def is_rule(obj):
    return (not obj.medium) and obj.rectangle",large blue circle,hg73,16.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.7777777777777778,0.7083333333333334,True
836,6339.0,there is another object of the same shape and another object of the same color,False,49.0,17.0,0.0,5.0,16.0,0.1187930192168096,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green rectangle,hg73,17.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.8472222222222222,True
837,6340.0,there is another object of the same shape and another object of the same color,False,50.0,17.0,0.0,3.0,18.0,0.0424815457752174,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue triangle,hg73,17.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8571428571428571,0.8472222222222222,True
838,6341.0,there is another object of the same shape and another object of the same color,False,51.0,18.0,0.0,2.0,19.0,0.0383319233496877,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg73,18.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8627450980392157,0.8472222222222222,True
839,6342.0,there is another object of the same shape and another object of the same color,False,52.0,19.0,1.0,16.0,5.0,0.4700172955599555,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium yellow triangle,hg73,19.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.6730769230769231,0.6388888888888888,True
840,6343.0,there is another object of the same shape and another object of the same color,False,53.0,19.0,1.0,14.0,7.0,0.5000228152589443,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",medium green triangle,hg73,19.0,True,True,True,False,0.681704260651629,0.5385802469135802,0.6730769230769231,0.6388888888888888,False
841,6344.0,there is another object of the same shape and another object of the same color,False,54.0,19.0,1.0,13.0,8.0,0.456943802081696,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small green triangle,hg73,19.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.6730769230769231,0.6388888888888888,True
842,6345.0,there is another object of the same shape and another object of the same color,False,55.0,19.0,1.0,19.0,2.0,0.4567605409969246,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large yellow triangle,hg73,19.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.6730769230769231,0.6388888888888888,True
843,6346.0,there is another object of the same shape and another object of the same color,False,56.0,19.0,0.0,14.0,7.0,0.465217499654841,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg73,19.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6730769230769231,0.6388888888888888,True
844,6347.0,there is another object of the same shape and another object of the same color,False,57.0,20.0,0.0,4.0,17.0,0.0316041576817269,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue circle,hg73,20.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8596491228070176,0.8611111111111112,True
845,6348.0,there is another object of the same shape and another object of the same color,False,58.0,20.0,1.0,17.0,4.0,0.6465536556642064,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large blue rectangle,hg73,20.0,True,True,True,False,0.681704260651629,0.5385802469135802,0.8596491228070176,0.8611111111111112,False
846,6349.0,there is another object of the same shape and another object of the same color,False,59.0,20.0,0.0,5.0,16.0,0.0453264817438139,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green triangle,hg73,20.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8596491228070176,0.8611111111111112,True
847,6350.0,there is another object of the same shape and another object of the same color,False,60.0,20.0,1.0,16.0,5.0,0.8441809785783789,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium green rectangle,hg73,20.0,True,True,True,True,0.681704260651629,0.5385802469135802,0.8596491228070176,0.8611111111111112,True
848,6351.0,there is another object of the same shape and another object of the same color,False,61.0,21.0,1.0,15.0,6.0,0.4603785944990477,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg73,21.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.8688524590163934,0.8472222222222222,False
849,6352.0,there is another object of the same shape and another object of the same color,False,62.0,21.0,1.0,16.0,5.0,0.4433364220808471,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium blue rectangle,hg73,21.0,True,False,True,True,0.681704260651629,0.5385802469135802,0.8688524590163934,0.8472222222222222,False
850,6353.0,there is another object of the same shape and another object of the same color,False,63.0,22.0,0.0,14.0,7.0,0.8420188263503405,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow triangle,hg73,22.0,False,True,True,True,0.681704260651629,0.5385802469135802,0.873015873015873,0.8472222222222222,True
851,6354.0,there is another object of the same shape and another object of the same color,False,64.0,22.0,0.0,11.0,10.0,0.8497213590840147,"""λx.exists(compose11(compose8(compose6(or,not),apply2(same_color,x.o)),apply2(same_size,x.o)), filter(apply2(same_shape,x.o), x.s))""
",there is an object of the same shape that is not the same size or not the same color,"def is_rule(obj):
    return np.any([((x.color != obj.color) or (x.size != obj.size)) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small green triangle,hg73,22.0,False,True,True,True,0.681704260651629,0.5385802469135802,0.873015873015873,0.8472222222222222,True
852,6355.0,there is another object of the same shape and another object of the same color,False,65.0,23.0,0.0,5.0,16.0,0.1141215947553746,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",large yellow triangle,hg73,23.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8615384615384616,0.8611111111111112,True
853,6356.0,there is another object of the same shape and another object of the same color,False,66.0,23.0,1.0,14.0,7.0,0.4102100145036047,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow rectangle,hg73,23.0,True,False,True,False,0.681704260651629,0.5385802469135802,0.8615384615384616,0.8611111111111112,True
854,6357.0,there is another object of the same shape and another object of the same color,False,67.0,23.0,0.0,7.0,14.0,0.5729039657925341,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",small blue rectangle,hg73,23.0,False,True,True,False,0.681704260651629,0.5385802469135802,0.8615384615384616,0.8611111111111112,False
855,6358.0,there is another object of the same shape and another object of the same color,False,68.0,23.0,0.0,6.0,15.0,0.1274984570975448,"""λx.exists(apply2(compose3(not,same_size),x.o), filter(apply2(same_shape,x.o), filter(compose11(compose8(or,apply3(same_color,x.o)),large), x.s)))""
",there is a (large or same-color) object that is the same shape but not the same size,"def is_rule(obj):
    return np.any([(x.large or (x.color == obj.color)) and (x.size != obj.size) and (x.shape == obj.shape)  for x in obj.current_set.objs])",medium yellow circle,hg73,23.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.8615384615384616,0.8611111111111112,True
856,6359.0,there is another object of the same shape and another object of the same color,False,69.0,24.0,0.0,4.0,17.0,0.068888926930299,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large blue circle,hg73,24.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6521739130434783,0.6666666666666666,True
857,6360.0,there is another object of the same shape and another object of the same color,False,70.0,25.0,0.0,6.0,15.0,0.0761447472077634,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow circle,hg73,25.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6571428571428571,0.6666666666666666,True
858,6361.0,there is another object of the same shape and another object of the same color,False,71.0,25.0,0.0,3.0,18.0,0.0608304069386349,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small yellow triangle,hg73,25.0,False,False,True,False,0.681704260651629,0.5385802469135802,0.6571428571428571,0.6666666666666666,True
859,6362.0,same shape as a blue object,False,0.0,1.0,0.0,11.0,9.0,0.4876674154086231,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg87,1.0,False,False,True,True,0.9,0.5280470914127424,,0.3815789473684211,False
860,6363.0,same shape as a blue object,False,1.0,1.0,0.0,8.0,12.0,0.3911391170893239,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg87,1.0,False,False,True,True,0.9,0.5280470914127424,,0.3815789473684211,False
861,6364.0,same shape as a blue object,False,2.0,1.0,0.0,10.0,10.0,0.4638930062770896,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg87,1.0,False,False,True,True,0.9,0.5280470914127424,,0.3815789473684211,False
862,6365.0,same shape as a blue object,False,3.0,1.0,1.0,7.0,13.0,0.4907401597936314,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg87,1.0,True,False,True,True,0.9,0.5280470914127424,,0.3815789473684211,False
863,6366.0,same shape as a blue object,False,4.0,1.0,0.0,10.0,10.0,0.4784632751084245,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg87,1.0,False,False,True,True,0.9,0.5280470914127424,,0.3815789473684211,False
864,6367.0,same shape as a blue object,False,5.0,2.0,1.0,17.0,3.0,0.6129783209612469,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",small blue rectangle,hg87,2.0,True,True,True,True,0.9,0.5280470914127424,1.0,0.5657894736842105,True
865,6368.0,same shape as a blue object,False,6.0,2.0,1.0,10.0,10.0,0.2796922508752004,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green rectangle,hg87,2.0,True,False,True,True,0.9,0.5280470914127424,1.0,0.5657894736842105,False
866,6369.0,same shape as a blue object,False,7.0,2.0,0.0,0.0,20.0,0.0701743356220276,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow triangle,hg87,2.0,False,False,True,False,0.9,0.5280470914127424,1.0,0.5657894736842105,True
867,6370.0,same shape as a blue object,False,8.0,2.0,0.0,0.0,20.0,0.0894444842764414,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green triangle,hg87,2.0,False,False,True,False,0.9,0.5280470914127424,1.0,0.5657894736842105,True
868,6371.0,same shape as a blue object,False,9.0,3.0,0.0,19.0,1.0,0.6066102525281849,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",large green rectangle,hg87,3.0,False,True,True,True,0.9,0.5280470914127424,1.0,0.5657894736842105,True
869,6372.0,same shape as a blue object,False,10.0,3.0,1.0,2.0,18.0,0.4628592070016566,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium blue circle,hg87,3.0,True,False,True,False,0.9,0.5280470914127424,1.0,0.5657894736842105,True
870,6373.0,same shape as a blue object,False,11.0,4.0,0.0,3.0,17.0,0.201459317544618,"""λx.apply1(compose11(compose8(compose6(and,not),green),triangle),x.o)""
",not green and not triangle,"def is_rule(obj):
    return (not obj.green) and (not obj.triangle)",medium yellow rectangle,hg87,4.0,False,False,True,True,0.9,0.5280470914127424,0.9090909090909091,0.7236842105263158,False
871,6374.0,same shape as a blue object,False,12.0,4.0,1.0,16.0,4.0,0.771809431228462,"""λx.apply1(compose11(compose8(compose6(and,not),green),triangle),x.o)""
",not green and not triangle,"def is_rule(obj):
    return (not obj.green) and (not obj.triangle)",large blue circle,hg87,4.0,True,True,True,True,0.9,0.5280470914127424,0.9090909090909091,0.7236842105263158,True
872,6375.0,same shape as a blue object,False,13.0,5.0,0.0,5.0,15.0,0.23148372102753,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,5.0,False,False,True,False,0.9,0.5280470914127424,0.9230769230769231,0.881578947368421,True
873,6376.0,same shape as a blue object,False,14.0,5.0,0.0,3.0,17.0,0.1748474795374477,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,5.0,False,False,True,False,0.9,0.5280470914127424,0.9230769230769231,0.881578947368421,True
874,6377.0,same shape as a blue object,False,15.0,5.0,1.0,13.0,7.0,0.7215380511100875,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,5.0,True,True,True,True,0.9,0.5280470914127424,0.9230769230769231,0.881578947368421,True
875,6378.0,same shape as a blue object,False,16.0,6.0,1.0,19.0,1.0,0.8533745005879609,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg87,6.0,True,True,True,True,0.9,0.5280470914127424,0.9375,0.881578947368421,True
876,6379.0,same shape as a blue object,False,17.0,6.0,1.0,4.0,16.0,0.0796788067068519,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,6.0,True,False,True,False,0.9,0.5280470914127424,0.9375,0.881578947368421,True
877,6380.0,same shape as a blue object,False,18.0,6.0,0.0,3.0,17.0,0.094161042696669,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg87,6.0,False,False,True,False,0.9,0.5280470914127424,0.9375,0.881578947368421,True
878,6381.0,same shape as a blue object,False,19.0,7.0,0.0,0.0,20.0,0.0539879765809701,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium green circle,hg87,7.0,False,False,True,False,0.9,0.5280470914127424,0.7894736842105263,0.6973684210526315,True
879,6382.0,same shape as a blue object,False,20.0,7.0,0.0,5.0,15.0,0.1720434489579929,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green rectangle,hg87,7.0,False,False,True,False,0.9,0.5280470914127424,0.7894736842105263,0.6973684210526315,True
880,6383.0,same shape as a blue object,False,21.0,7.0,0.0,1.0,19.0,0.1869212905210133,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",medium yellow circle,hg87,7.0,False,False,True,True,0.9,0.5280470914127424,0.7894736842105263,0.6973684210526315,False
881,6384.0,same shape as a blue object,False,22.0,7.0,0.0,1.0,19.0,0.1281718381167138,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",small green triangle,hg87,7.0,False,False,True,False,0.9,0.5280470914127424,0.7894736842105263,0.6973684210526315,True
882,6385.0,same shape as a blue object,False,23.0,7.0,0.0,4.0,16.0,0.333037475555443,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large yellow rectangle,hg87,7.0,False,False,True,True,0.9,0.5280470914127424,0.7894736842105263,0.6973684210526315,False
883,6386.0,same shape as a blue object,False,24.0,8.0,1.0,20.0,0.0,0.7306287965390084,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,8.0,True,True,True,True,0.9,0.5280470914127424,0.9166666666666666,0.881578947368421,True
884,6387.0,same shape as a blue object,False,25.0,8.0,1.0,13.0,7.0,0.0734204593537697,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,8.0,True,False,True,False,0.9,0.5280470914127424,0.9166666666666666,0.881578947368421,True
885,6388.0,same shape as a blue object,False,26.0,8.0,1.0,18.0,2.0,0.705636222234375,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,8.0,True,True,True,True,0.9,0.5280470914127424,0.9166666666666666,0.881578947368421,True
886,6389.0,same shape as a blue object,False,27.0,8.0,1.0,15.0,5.0,0.7844656201924636,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg87,8.0,True,True,True,True,0.9,0.5280470914127424,0.9166666666666666,0.881578947368421,True
887,6390.0,same shape as a blue object,False,28.0,9.0,0.0,4.0,16.0,0.1185474472829355,"""λx.apply7(not,apply1(green,x.o))""
",not green,"def is_rule(obj):
    return not obj.green",large green rectangle,hg87,9.0,False,False,True,False,0.9,0.5280470914127424,0.7857142857142857,0.6973684210526315,True
888,6391.0,same shape as a blue object,False,29.0,10.0,0.0,1.0,19.0,0.0772937466634857,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,10.0,False,False,True,False,0.9,0.5280470914127424,0.896551724137931,0.881578947368421,True
889,6392.0,same shape as a blue object,False,30.0,11.0,0.0,1.0,18.0,0.056360435352758,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,11.0,False,False,True,False,0.9,0.5280470914127424,0.9,0.881578947368421,True
890,6393.0,same shape as a blue object,False,31.0,11.0,0.0,1.0,18.0,0.1513909034206335,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg87,11.0,False,False,True,False,0.9,0.5280470914127424,0.9,0.881578947368421,True
891,6394.0,same shape as a blue object,False,32.0,12.0,0.0,4.0,15.0,0.1000117052302584,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,12.0,False,False,True,False,0.9,0.5280470914127424,0.90625,0.881578947368421,True
892,6395.0,same shape as a blue object,False,33.0,12.0,0.0,0.0,19.0,0.0233346967677334,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,12.0,False,False,True,False,0.9,0.5280470914127424,0.90625,0.881578947368421,True
893,6396.0,same shape as a blue object,False,34.0,13.0,0.0,3.0,16.0,0.0416752995085971,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg87,13.0,False,False,True,False,0.9,0.5280470914127424,0.9117647058823529,0.881578947368421,True
894,6397.0,same shape as a blue object,False,35.0,13.0,1.0,8.0,11.0,0.0660942719705417,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,13.0,True,False,True,False,0.9,0.5280470914127424,0.9117647058823529,0.881578947368421,True
895,6398.0,same shape as a blue object,False,36.0,13.0,0.0,1.0,18.0,0.085188709183285,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,13.0,False,False,True,False,0.9,0.5280470914127424,0.9117647058823529,0.881578947368421,True
896,6399.0,same shape as a blue object,False,37.0,13.0,0.0,0.0,19.0,0.0624290382817207,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,13.0,False,False,True,False,0.9,0.5280470914127424,0.9117647058823529,0.881578947368421,True
897,6400.0,same shape as a blue object,False,38.0,13.0,1.0,18.0,1.0,0.7957433192297003,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg87,13.0,True,True,True,True,0.9,0.5280470914127424,0.9117647058823529,0.881578947368421,True
898,6401.0,same shape as a blue object,False,39.0,14.0,0.0,1.0,18.0,0.0059482409134261,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,14.0,False,False,True,False,0.9,0.5280470914127424,0.8974358974358975,0.881578947368421,True
899,6402.0,same shape as a blue object,False,40.0,14.0,0.0,3.0,16.0,0.0881531131560677,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,14.0,False,False,True,False,0.9,0.5280470914127424,0.8974358974358975,0.881578947368421,True
900,6403.0,same shape as a blue object,False,41.0,14.0,0.0,1.0,18.0,0.008696455165932,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,14.0,False,False,True,False,0.9,0.5280470914127424,0.8974358974358975,0.881578947368421,True
901,6404.0,same shape as a blue object,False,42.0,15.0,0.0,0.0,19.0,0.0493745353327312,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg87,15.0,False,False,True,False,0.9,0.5280470914127424,0.9047619047619048,0.881578947368421,True
902,6405.0,same shape as a blue object,False,43.0,15.0,0.0,0.0,19.0,0.0338827857423211,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,15.0,False,False,True,False,0.9,0.5280470914127424,0.9047619047619048,0.881578947368421,True
903,6406.0,same shape as a blue object,False,44.0,15.0,0.0,1.0,18.0,0.0481117474522534,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,15.0,False,False,True,False,0.9,0.5280470914127424,0.9047619047619048,0.881578947368421,True
904,6407.0,same shape as a blue object,False,45.0,15.0,1.0,15.0,4.0,0.8682605879630501,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg87,15.0,True,True,True,True,0.9,0.5280470914127424,0.9047619047619048,0.881578947368421,True
905,6408.0,same shape as a blue object,False,46.0,15.0,0.0,0.0,19.0,0.0664779953152674,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg87,15.0,False,False,True,False,0.9,0.5280470914127424,0.9047619047619048,0.881578947368421,True
906,6409.0,same shape as a blue object,False,47.0,16.0,0.0,0.0,19.0,0.004955965196018,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,16.0,False,False,True,False,0.9,0.5280470914127424,0.9148936170212766,0.881578947368421,True
907,6410.0,same shape as a blue object,False,48.0,16.0,1.0,13.0,6.0,0.0696550901468526,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,16.0,True,False,True,False,0.9,0.5280470914127424,0.9148936170212766,0.881578947368421,True
908,6411.0,same shape as a blue object,False,49.0,16.0,1.0,17.0,2.0,0.8719181690598816,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,16.0,True,True,True,True,0.9,0.5280470914127424,0.9148936170212766,0.881578947368421,True
909,6412.0,same shape as a blue object,False,50.0,16.0,1.0,18.0,1.0,0.8992672705832092,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg87,16.0,True,True,True,True,0.9,0.5280470914127424,0.9148936170212766,0.881578947368421,True
910,6413.0,same shape as a blue object,False,51.0,17.0,0.0,1.0,18.0,0.0366271897472643,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg87,17.0,False,False,True,False,0.9,0.5280470914127424,0.9019607843137255,0.881578947368421,True
911,6414.0,same shape as a blue object,False,52.0,17.0,0.0,0.0,19.0,0.0060542484060306,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg87,17.0,False,False,True,False,0.9,0.5280470914127424,0.9019607843137255,0.881578947368421,True
912,6415.0,same shape as a blue object,False,53.0,18.0,0.0,2.0,17.0,0.002085258647412,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg87,18.0,False,False,True,False,0.9,0.5280470914127424,0.9056603773584906,0.881578947368421,True
913,6416.0,same shape as a blue object,False,54.0,18.0,0.0,1.0,18.0,0.0274354869743547,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,18.0,False,False,True,False,0.9,0.5280470914127424,0.9056603773584906,0.881578947368421,True
914,6417.0,same shape as a blue object,False,55.0,19.0,1.0,12.0,7.0,0.0912687848780251,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg87,19.0,True,False,True,False,0.9,0.5280470914127424,0.9090909090909091,0.881578947368421,True
915,6418.0,same shape as a blue object,False,56.0,19.0,1.0,18.0,1.0,0.8743966700603778,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,19.0,True,True,True,True,0.9,0.5280470914127424,0.9090909090909091,0.881578947368421,True
916,6419.0,same shape as a blue object,False,57.0,19.0,1.0,14.0,5.0,0.099353865846183,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,19.0,True,False,True,False,0.9,0.5280470914127424,0.9090909090909091,0.881578947368421,True
917,6420.0,same shape as a blue object,False,58.0,19.0,1.0,19.0,0.0,0.8832550572579976,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,19.0,True,True,True,True,0.9,0.5280470914127424,0.9090909090909091,0.881578947368421,True
918,6421.0,same shape as a blue object,False,59.0,20.0,0.0,0.0,19.0,0.0301625147834556,"""λx.exists(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s)""
",same shape as a blue object,"def is_rule(obj):
    return np.any([x.blue and (obj.shape == x.shape) for x in obj.current_set.objs])",large green rectangle,hg87,20.0,False,False,True,False,0.9,0.5280470914127424,1.0,1.0,True
919,6422.0,same shape as a blue object,False,60.0,21.0,1.0,14.0,5.0,0.3422516475967541,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,21.0,True,False,True,False,0.9,0.5280470914127424,0.8833333333333333,0.881578947368421,True
920,6423.0,same shape as a blue object,False,61.0,21.0,0.0,1.0,18.0,0.035444756089987,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg87,21.0,False,False,True,False,0.9,0.5280470914127424,0.8833333333333333,0.881578947368421,True
921,6424.0,same shape as a blue object,False,62.0,21.0,1.0,15.0,4.0,0.3170573350349741,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg87,21.0,True,False,True,False,0.9,0.5280470914127424,0.8833333333333333,0.881578947368421,True
922,6425.0,same shape as a blue object,False,63.0,21.0,1.0,16.0,3.0,0.945693056305572,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg87,21.0,True,True,True,True,0.9,0.5280470914127424,0.8833333333333333,0.881578947368421,True
923,6426.0,same shape as a blue object,False,64.0,21.0,1.0,17.0,2.0,0.9421823167675712,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg87,21.0,True,True,True,True,0.9,0.5280470914127424,0.8833333333333333,0.881578947368421,True
924,6427.0,same shape as a blue object,False,65.0,22.0,0.0,1.0,18.0,0.0170436253857815,"""λx.exists(compose11(compose8(and,blue),apply2(same_shape,x.o)), x.s)""
",same shape as a blue object,"def is_rule(obj):
    return np.any([x.blue and (obj.shape == x.shape) for x in obj.current_set.objs])",large yellow rectangle,hg87,22.0,False,False,True,False,0.9,0.5280470914127424,1.0,1.0,True
925,6428.0,same shape as a blue object,False,66.0,23.0,1.0,17.0,2.0,0.9604410354777428,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg87,23.0,True,True,True,True,0.9,0.5280470914127424,0.8636363636363636,0.881578947368421,True
926,6429.0,same shape as a blue object,False,67.0,24.0,0.0,1.0,18.0,0.0792544052811763,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg87,24.0,False,False,True,False,0.9,0.5280470914127424,0.8656716417910447,0.881578947368421,True
927,6430.0,same shape as a blue object,False,68.0,24.0,0.0,1.0,18.0,0.0313253098170207,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,24.0,False,False,True,False,0.9,0.5280470914127424,0.8656716417910447,0.881578947368421,True
928,6431.0,same shape as a blue object,False,69.0,24.0,1.0,18.0,1.0,0.9431310299307823,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg87,24.0,True,True,True,True,0.9,0.5280470914127424,0.8656716417910447,0.881578947368421,True
929,6432.0,same shape as a blue object,False,70.0,24.0,1.0,18.0,1.0,0.9503944313332796,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg87,24.0,True,True,True,True,0.9,0.5280470914127424,0.8656716417910447,0.881578947368421,True
930,6433.0,same shape as a blue object,False,71.0,24.0,0.0,2.0,17.0,0.1031935084142787,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg87,24.0,False,False,True,False,0.9,0.5280470914127424,0.8656716417910447,0.881578947368421,True
931,6434.0,same shape as a blue object,False,72.0,25.0,0.0,1.0,18.0,0.0022064149967491,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg87,25.0,False,False,True,False,0.9,0.5280470914127424,0.875,0.881578947368421,True
932,6435.0,same shape as a blue object,False,73.0,25.0,0.0,2.0,17.0,0.0080233240386178,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg87,25.0,False,False,True,False,0.9,0.5280470914127424,0.875,0.881578947368421,True
933,6436.0,same shape as a blue object,False,74.0,25.0,0.0,3.0,16.0,0.0082241898983284,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg87,25.0,False,False,True,False,0.9,0.5280470914127424,0.875,0.881578947368421,True
934,6437.0,same shape as a blue object,False,75.0,25.0,0.0,2.0,17.0,0.0151953304552989,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg87,25.0,False,False,True,False,0.9,0.5280470914127424,0.875,0.881578947368421,True
935,7532.0,blue or larger than all other objects,False,0.0,1.0,0.0,12.0,14.0,0.4254627170529375,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg31,1.0,False,False,True,True,0.9085714285714286,0.5190362879238548,,0.4024390243902439,False
936,7533.0,blue or larger than all other objects,False,1.0,1.0,1.0,14.0,12.0,0.485010594522123,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg31,1.0,True,False,True,True,0.9085714285714286,0.5190362879238548,,0.4024390243902439,False
937,7534.0,blue or larger than all other objects,False,2.0,1.0,0.0,7.0,19.0,0.4752908851672828,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green circle,hg31,1.0,False,False,True,True,0.9085714285714286,0.5190362879238548,,0.4024390243902439,False
938,7535.0,blue or larger than all other objects,False,3.0,1.0,1.0,8.0,18.0,0.4552429588410405,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg31,1.0,True,False,True,True,0.9085714285714286,0.5190362879238548,,0.4024390243902439,False
939,7536.0,blue or larger than all other objects,False,4.0,2.0,0.0,1.0,25.0,0.1719929659200261,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow circle,hg31,2.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.5,True
940,7537.0,blue or larger than all other objects,False,5.0,2.0,0.0,16.0,10.0,0.4496405782803094,"""λx.apply1(rectangle,x.o)""
",rectangle,"def is_rule(obj):
    return obj.rectangle",medium yellow rectangle,hg31,2.0,False,False,True,True,0.9085714285714286,0.5190362879238548,1.0,0.5,False
941,7538.0,blue or larger than all other objects,False,6.0,3.0,0.0,5.0,21.0,0.2381931823869081,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,3.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
942,7539.0,blue or larger than all other objects,False,7.0,3.0,0.0,2.0,24.0,0.2351029824618535,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg31,3.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
943,7540.0,blue or larger than all other objects,False,8.0,3.0,0.0,1.0,25.0,0.0547705079077331,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,3.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
944,7541.0,blue or larger than all other objects,False,9.0,4.0,0.0,3.0,23.0,0.2133576901545666,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large green circle,hg31,4.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.7777777777777778,0.5975609756097561,True
945,7542.0,blue or larger than all other objects,False,10.0,4.0,1.0,10.0,16.0,0.5341997339072577,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",small blue triangle,hg31,4.0,True,True,True,False,0.9085714285714286,0.5190362879238548,0.7777777777777778,0.5975609756097561,False
946,7543.0,blue or larger than all other objects,False,11.0,4.0,1.0,12.0,14.0,0.6196446456985996,"""λx.apply1(apply2(size-gt,x.o),x.o)""
",larger than itself,"def is_rule(obj):
    return obj.size_num > obj.size_num",large blue triangle,hg31,4.0,True,True,True,False,0.9085714285714286,0.5190362879238548,0.7777777777777778,0.5975609756097561,False
947,7544.0,blue or larger than all other objects,False,12.0,5.0,0.0,5.0,21.0,0.1174996869923461,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green triangle,hg31,5.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
948,7545.0,blue or larger than all other objects,False,13.0,5.0,0.0,6.0,20.0,0.1758774083443768,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg31,5.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
949,7546.0,blue or larger than all other objects,False,14.0,5.0,0.0,1.0,25.0,0.1697332127777144,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,5.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
950,7547.0,blue or larger than all other objects,False,15.0,5.0,0.0,1.0,25.0,0.1017136801707465,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,5.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
951,7548.0,blue or larger than all other objects,False,16.0,6.0,1.0,19.0,7.0,0.736342749459368,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg31,6.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
952,7549.0,blue or larger than all other objects,False,17.0,6.0,1.0,16.0,10.0,0.674246207078113,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,6.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
953,7550.0,blue or larger than all other objects,False,18.0,7.0,1.0,21.0,4.0,0.8799025751320642,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg31,7.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
954,7551.0,blue or larger than all other objects,False,19.0,7.0,0.0,3.0,22.0,0.0528730643079597,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,7.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
955,7552.0,blue or larger than all other objects,False,20.0,7.0,0.0,1.0,24.0,0.0544020951984975,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,7.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
956,7553.0,blue or larger than all other objects,False,21.0,8.0,0.0,0.0,25.0,0.027368230424372,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow rectangle,hg31,8.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
957,7554.0,blue or larger than all other objects,False,22.0,8.0,1.0,23.0,2.0,0.9112929192177716,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg31,8.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
958,7555.0,blue or larger than all other objects,False,23.0,8.0,0.0,2.0,23.0,0.0137764982225689,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,8.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
959,7556.0,blue or larger than all other objects,False,24.0,8.0,0.0,0.0,25.0,0.025590945094791,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,8.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
960,7557.0,blue or larger than all other objects,False,25.0,8.0,1.0,23.0,2.0,0.9113654472173494,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,8.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
961,7558.0,blue or larger than all other objects,False,26.0,9.0,0.0,2.0,23.0,0.0096643977447001,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,9.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
962,7559.0,blue or larger than all other objects,False,27.0,9.0,0.0,2.0,23.0,0.0152893429403775,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,9.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
963,7560.0,blue or larger than all other objects,False,28.0,9.0,0.0,0.0,25.0,0.2138221765951584,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,9.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
964,7561.0,blue or larger than all other objects,False,29.0,9.0,1.0,21.0,4.0,0.9292429529449464,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg31,9.0,True,True,True,True,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
965,7562.0,blue or larger than all other objects,False,30.0,10.0,0.0,1.0,24.0,0.0031961541086502,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow rectangle,hg31,10.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
966,7563.0,blue or larger than all other objects,False,31.0,10.0,0.0,1.0,24.0,0.0618489630504655,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,10.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
967,7564.0,blue or larger than all other objects,False,32.0,10.0,0.0,1.0,24.0,0.005682627590545,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,10.0,False,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
968,7565.0,blue or larger than all other objects,False,33.0,10.0,1.0,0.0,25.0,0.032900453952493,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,10.0,True,False,True,False,0.9085714285714286,0.5190362879238548,1.0,0.926829268292683,True
969,7566.0,blue or larger than all other objects,False,34.0,11.0,1.0,24.0,1.0,0.9164644045757768,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue circle,hg31,11.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9705882352941176,0.926829268292683,True
970,7567.0,blue or larger than all other objects,False,35.0,11.0,1.0,22.0,3.0,0.8733286591302658,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue rectangle,hg31,11.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9705882352941176,0.926829268292683,True
971,7568.0,blue or larger than all other objects,False,36.0,11.0,1.0,15.0,10.0,0.1930429014627179,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,11.0,True,False,True,False,0.9085714285714286,0.5190362879238548,0.9705882352941176,0.926829268292683,True
972,7569.0,blue or larger than all other objects,False,37.0,11.0,0.0,7.0,18.0,0.1200391111740373,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg31,11.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9705882352941176,0.926829268292683,True
973,7570.0,blue or larger than all other objects,False,38.0,11.0,0.0,6.0,19.0,0.0834353757180679,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,11.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9705882352941176,0.926829268292683,True
974,7571.0,blue or larger than all other objects,False,39.0,12.0,1.0,22.0,3.0,0.2783737971039954,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,12.0,True,False,True,False,0.9085714285714286,0.5190362879238548,0.9487179487179487,0.926829268292683,True
975,7572.0,blue or larger than all other objects,False,40.0,12.0,0.0,1.0,24.0,0.0042274711016716,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green rectangle,hg31,12.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9487179487179487,0.926829268292683,True
976,7573.0,blue or larger than all other objects,False,41.0,12.0,1.0,23.0,2.0,0.97458117741769,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,12.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9487179487179487,0.926829268292683,True
977,7574.0,blue or larger than all other objects,False,42.0,13.0,1.0,3.0,22.0,0.0373935593147507,"""λx.apply1(compose11(compose8(or,blue),compose11(compose8(and,large),circle)),x.o)""
",blue or (circle and large),"def is_rule(obj):
    return obj.blue or (obj.circle and obj.large)",small green triangle,hg31,13.0,True,False,True,False,0.9085714285714286,0.5190362879238548,0.9523809523809523,0.9390243902439024,True
978,7575.0,blue or larger than all other objects,False,43.0,14.0,1.0,24.0,1.0,0.956523131689778,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue circle,hg31,14.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9069767441860465,0.926829268292683,True
979,7576.0,blue or larger than all other objects,False,44.0,14.0,1.0,23.0,2.0,0.9515905965156436,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue rectangle,hg31,14.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9069767441860465,0.926829268292683,True
980,7577.0,blue or larger than all other objects,False,45.0,14.0,0.0,4.0,21.0,0.2380564578510302,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg31,14.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9069767441860465,0.926829268292683,True
981,7578.0,blue or larger than all other objects,False,46.0,15.0,0.0,2.0,23.0,0.0280342688774908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,15.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9130434782608695,0.926829268292683,True
982,7579.0,blue or larger than all other objects,False,47.0,15.0,0.0,2.0,23.0,0.071690143143769,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow rectangle,hg31,15.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9130434782608695,0.926829268292683,True
983,7580.0,blue or larger than all other objects,False,48.0,15.0,0.0,14.0,11.0,0.0592333959456254,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,15.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9130434782608695,0.926829268292683,True
984,7581.0,blue or larger than all other objects,False,49.0,15.0,1.0,23.0,2.0,0.9373415545539956,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,15.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9130434782608695,0.926829268292683,True
985,7582.0,blue or larger than all other objects,False,50.0,16.0,0.0,3.0,22.0,0.0078343292952922,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg31,16.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.92,0.926829268292683,True
986,7583.0,blue or larger than all other objects,False,51.0,16.0,1.0,3.0,22.0,0.1728310157531041,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow triangle,hg31,16.0,True,False,True,False,0.9085714285714286,0.5190362879238548,0.92,0.926829268292683,True
987,7584.0,blue or larger than all other objects,False,52.0,16.0,0.0,6.0,19.0,0.0060862980852789,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,16.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.92,0.926829268292683,True
988,7585.0,blue or larger than all other objects,False,53.0,17.0,0.0,3.0,22.0,0.0041324333971033,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium yellow triangle,hg31,17.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.8679245283018868,0.8780487804878049,True
989,7586.0,blue or larger than all other objects,False,54.0,17.0,1.0,24.0,1.0,0.9810840604120584,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",large blue circle,hg31,17.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.8679245283018868,0.8780487804878049,True
990,7587.0,blue or larger than all other objects,False,55.0,17.0,1.0,23.0,2.0,0.9580002999059616,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium blue triangle,hg31,17.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.8679245283018868,0.8780487804878049,True
991,7588.0,blue or larger than all other objects,False,56.0,17.0,0.0,2.0,23.0,0.0307480052968003,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium yellow circle,hg31,17.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.8679245283018868,0.8780487804878049,True
992,7589.0,blue or larger than all other objects,False,57.0,17.0,0.0,3.0,22.0,0.0023287942901788,"""λx.apply1(compose11(compose8(or,blue),large),x.o)""
",blue or large,"def is_rule(obj):
    return obj.large or obj.blue",medium green rectangle,hg31,17.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.8679245283018868,0.8780487804878049,True
993,7590.0,blue or larger than all other objects,False,58.0,18.0,0.0,3.0,22.0,0.006912282417943,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,18.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9137931034482759,0.926829268292683,True
994,7591.0,blue or larger than all other objects,False,59.0,18.0,0.0,1.0,24.0,0.0136563136951508,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow circle,hg31,18.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9137931034482759,0.926829268292683,True
995,7592.0,blue or larger than all other objects,False,60.0,18.0,1.0,21.0,4.0,0.9834847231632012,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,18.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9137931034482759,0.926829268292683,True
996,7593.0,blue or larger than all other objects,False,61.0,19.0,0.0,3.0,22.0,0.0020646692320269,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,19.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9180327868852459,0.926829268292683,True
997,7594.0,blue or larger than all other objects,False,62.0,19.0,0.0,3.0,22.0,0.0086196037449326,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,19.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9180327868852459,0.926829268292683,True
998,7595.0,blue or larger than all other objects,False,63.0,19.0,0.0,1.0,24.0,0.0014855036364451,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small yellow triangle,hg31,19.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9180327868852459,0.926829268292683,True
999,7596.0,blue or larger than all other objects,False,64.0,19.0,0.0,1.0,24.0,0.0111720388459843,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium green circle,hg31,19.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9180327868852459,0.926829268292683,True
1000,7597.0,blue or larger than all other objects,False,65.0,19.0,1.0,22.0,3.0,0.9780333502088752,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,19.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9180327868852459,0.926829268292683,True
1001,7598.0,blue or larger than all other objects,False,66.0,20.0,0.0,1.0,24.0,0.2525719005084283,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green rectangle,hg31,20.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9242424242424242,0.926829268292683,True
1002,7599.0,blue or larger than all other objects,False,67.0,20.0,0.0,2.0,23.0,0.2473438111846917,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green triangle,hg31,20.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9242424242424242,0.926829268292683,True
1003,7600.0,blue or larger than all other objects,False,68.0,20.0,0.0,1.0,24.0,0.2769515411391694,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large green circle,hg31,20.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9242424242424242,0.926829268292683,True
1004,7601.0,blue or larger than all other objects,False,69.0,20.0,1.0,24.0,1.0,0.9838002647019266,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue rectangle,hg31,20.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9242424242424242,0.926829268292683,True
1005,7602.0,blue or larger than all other objects,False,70.0,20.0,0.0,1.0,24.0,0.0005755414575787,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow circle,hg31,20.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9242424242424242,0.926829268292683,True
1006,7603.0,blue or larger than all other objects,False,71.0,21.0,1.0,21.0,4.0,0.9815684036598212,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue circle,hg31,21.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9295774647887324,0.926829268292683,True
1007,7604.0,blue or larger than all other objects,False,72.0,21.0,0.0,1.0,24.0,0.0005366964990116,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium yellow triangle,hg31,21.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9295774647887324,0.926829268292683,True
1008,7605.0,blue or larger than all other objects,False,73.0,22.0,1.0,23.0,2.0,0.9792638364854156,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,22.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9315068493150684,0.926829268292683,True
1009,7606.0,blue or larger than all other objects,False,74.0,22.0,1.0,24.0,1.0,0.9713392693327024,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small blue triangle,hg31,22.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9315068493150684,0.926829268292683,True
1010,7607.0,blue or larger than all other objects,False,75.0,23.0,1.0,17.0,8.0,0.0521695639060908,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large yellow circle,hg31,23.0,True,False,True,False,0.9085714285714286,0.5190362879238548,0.9333333333333333,0.926829268292683,True
1011,7608.0,blue or larger than all other objects,False,76.0,23.0,1.0,25.0,0.0,0.9959105507525692,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,23.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9333333333333333,0.926829268292683,True
1012,7609.0,blue or larger than all other objects,False,77.0,24.0,1.0,23.0,2.0,0.9942244321584894,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",medium blue triangle,hg31,24.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.922077922077922,0.926829268292683,True
1013,7610.0,blue or larger than all other objects,False,78.0,25.0,0.0,2.0,23.0,0.0233012663609315,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green circle,hg31,25.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9230769230769231,0.926829268292683,True
1014,7611.0,blue or larger than all other objects,False,79.0,25.0,1.0,23.0,2.0,0.993742715379426,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",large blue triangle,hg31,25.0,True,True,True,True,0.9085714285714286,0.5190362879238548,0.9230769230769231,0.926829268292683,True
1015,7612.0,blue or larger than all other objects,False,80.0,25.0,0.0,1.0,24.0,0.0145824337948852,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green rectangle,hg31,25.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9230769230769231,0.926829268292683,True
1016,7613.0,blue or larger than all other objects,False,81.0,25.0,0.0,4.0,21.0,0.0093197857451059,"""λx.apply1(compose11(compose7(compose6(and,not),green),yellow),x.o)""
",(not green) and (not yellow),"def is_rule(obj):
    return (not obj.green) and (not obj.yellow)",small green triangle,hg31,25.0,False,False,True,False,0.9085714285714286,0.5190362879238548,0.9230769230769231,0.926829268292683,True
1017,8008.0,same size as a circular object,False,0.0,1.0,1.0,10.0,14.0,0.4630532420618465,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg88,1.0,True,False,True,True,0.6708074534161491,0.512654958677686,,0.5795454545454546,False
1018,8009.0,same size as a circular object,False,1.0,1.0,1.0,8.0,16.0,0.4881590794785779,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg88,1.0,True,False,True,True,0.6708074534161491,0.512654958677686,,0.5795454545454546,False
1019,8010.0,same size as a circular object,False,2.0,1.0,1.0,11.0,13.0,0.5126572996757659,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg88,1.0,True,True,True,True,0.6708074534161491,0.512654958677686,,0.5795454545454546,True
1020,8011.0,same size as a circular object,False,3.0,1.0,1.0,12.0,12.0,0.4257402797596796,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg88,1.0,True,False,True,True,0.6708074534161491,0.512654958677686,,0.5795454545454546,False
1021,8012.0,same size as a circular object,False,4.0,1.0,1.0,8.0,16.0,0.4310227053450717,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg88,1.0,True,False,True,True,0.6708074534161491,0.512654958677686,,0.5795454545454546,False
1022,8013.0,same size as a circular object,False,5.0,2.0,0.0,8.0,16.0,0.6658960945650279,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg88,2.0,False,True,True,True,0.6708074534161491,0.512654958677686,1.0,0.5795454545454546,True
1023,8014.0,same size as a circular object,False,6.0,3.0,1.0,16.0,7.0,0.6312829580342623,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green rectangle,hg88,3.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,0.6704545454545454,True
1024,8015.0,same size as a circular object,False,7.0,3.0,1.0,16.0,7.0,0.7213615304174255,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg88,3.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,0.6704545454545454,True
1025,8016.0,same size as a circular object,False,8.0,3.0,1.0,22.0,1.0,0.7956755918648923,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg88,3.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,0.6704545454545454,True
1026,8017.0,same size as a circular object,False,9.0,3.0,1.0,4.0,19.0,0.5286186639681318,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow triangle,hg88,3.0,True,True,True,False,0.6708074534161491,0.512654958677686,1.0,0.6704545454545454,False
1027,8018.0,same size as a circular object,False,10.0,4.0,0.0,13.0,10.0,0.8143431393075389,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg88,4.0,False,True,True,True,0.6708074534161491,0.512654958677686,0.9,0.5795454545454546,True
1028,8019.0,same size as a circular object,False,11.0,4.0,1.0,19.0,4.0,0.7125587442646975,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow circle,hg88,4.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.9,0.5795454545454546,True
1029,8020.0,same size as a circular object,False,12.0,4.0,1.0,19.0,4.0,0.903532255064988,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg88,4.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.9,0.5795454545454546,True
1030,8021.0,same size as a circular object,False,13.0,5.0,0.0,20.0,3.0,0.6804452737929978,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium yellow rectangle,hg88,5.0,False,True,True,True,0.6708074534161491,0.512654958677686,0.9230769230769231,0.6704545454545454,True
1031,8022.0,same size as a circular object,False,14.0,5.0,1.0,19.0,4.0,0.755207699531411,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow rectangle,hg88,5.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.9230769230769231,0.6704545454545454,True
1032,8023.0,same size as a circular object,False,15.0,5.0,1.0,21.0,2.0,0.8539346810065354,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small yellow circle,hg88,5.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.9230769230769231,0.6704545454545454,True
1033,8024.0,same size as a circular object,False,16.0,6.0,1.0,20.0,3.0,0.8480694766358283,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg88,6.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.8125,0.5795454545454546,True
1034,8025.0,same size as a circular object,False,17.0,6.0,1.0,12.0,11.0,0.6462395853091039,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg88,6.0,True,True,True,True,0.6708074534161491,0.512654958677686,0.8125,0.5795454545454546,True
1035,8026.0,same size as a circular object,False,18.0,6.0,0.0,10.0,13.0,0.5023598452202123,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg88,6.0,False,True,True,True,0.6708074534161491,0.512654958677686,0.8125,0.5795454545454546,True
1036,8027.0,same size as a circular object,False,19.0,6.0,0.0,20.0,3.0,0.3978373905951002,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg88,6.0,False,False,True,True,0.6708074534161491,0.512654958677686,0.8125,0.5795454545454546,False
1037,8028.0,same size as a circular object,False,20.0,6.0,0.0,21.0,2.0,0.5524929672617418,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg88,6.0,False,True,True,True,0.6708074534161491,0.512654958677686,0.8125,0.5795454545454546,True
1038,8029.0,same size as a circular object,False,21.0,7.0,0.0,16.0,7.0,0.186707977497349,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,7.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1039,8030.0,same size as a circular object,False,22.0,7.0,1.0,16.0,7.0,0.8961192561255302,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,7.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1040,8031.0,same size as a circular object,False,23.0,7.0,1.0,19.0,4.0,0.90502435262556,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,7.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1041,8032.0,same size as a circular object,False,24.0,7.0,1.0,18.0,5.0,0.9752876547233882,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,7.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1042,8033.0,same size as a circular object,False,25.0,7.0,1.0,16.0,7.0,0.725915298515929,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,7.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1043,8034.0,same size as a circular object,False,26.0,8.0,1.0,16.0,7.0,0.9864059769786307,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,8.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1044,8035.0,same size as a circular object,False,27.0,8.0,1.0,22.0,1.0,0.8326944227605964,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,8.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1045,8036.0,same size as a circular object,False,28.0,8.0,1.0,18.0,5.0,0.9081541036674708,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,8.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1046,8037.0,same size as a circular object,False,29.0,8.0,0.0,7.0,16.0,0.080893138273268,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow rectangle,hg88,8.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1047,8038.0,same size as a circular object,False,30.0,8.0,1.0,22.0,1.0,0.9926341543607576,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,8.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1048,8039.0,same size as a circular object,False,31.0,9.0,0.0,5.0,18.0,0.0501813906422512,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,9.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1049,8040.0,same size as a circular object,False,32.0,9.0,1.0,20.0,3.0,0.9948073033787068,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,9.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1050,8041.0,same size as a circular object,False,33.0,9.0,1.0,17.0,6.0,0.9688032482350764,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue rectangle,hg88,9.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1051,8042.0,same size as a circular object,False,34.0,10.0,0.0,16.0,7.0,0.4676904251184623,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,10.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1052,8043.0,same size as a circular object,False,35.0,10.0,0.0,8.0,15.0,0.0290791422178244,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,10.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1053,8044.0,same size as a circular object,False,36.0,11.0,0.0,14.0,9.0,0.3036174041205868,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,11.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1054,8045.0,same size as a circular object,False,37.0,11.0,1.0,13.0,10.0,0.9114631914613938,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,11.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1055,8046.0,same size as a circular object,False,38.0,11.0,0.0,14.0,9.0,0.2407854067621428,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,11.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1056,8047.0,same size as a circular object,False,39.0,11.0,0.0,15.0,8.0,0.2550919727300424,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue rectangle,hg88,11.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1057,8048.0,same size as a circular object,False,40.0,11.0,0.0,14.0,9.0,0.1587773400241303,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow rectangle,hg88,11.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1058,8049.0,same size as a circular object,False,41.0,12.0,0.0,11.0,12.0,0.0560684930201205,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,12.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1059,8050.0,same size as a circular object,False,42.0,12.0,0.0,15.0,8.0,0.0682906506849576,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,12.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1060,8051.0,same size as a circular object,False,43.0,13.0,1.0,7.0,15.0,0.8405927970305811,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,13.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1061,8052.0,same size as a circular object,False,44.0,13.0,1.0,18.0,4.0,0.979749220641338,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,13.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1062,8053.0,same size as a circular object,False,45.0,13.0,1.0,18.0,4.0,0.9807757728061688,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,13.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1063,8054.0,same size as a circular object,False,46.0,13.0,1.0,16.0,6.0,0.8408527234507801,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,13.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1064,8055.0,same size as a circular object,False,47.0,13.0,1.0,16.0,6.0,0.8430577147324811,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green triangle,hg88,13.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1065,8056.0,same size as a circular object,False,48.0,14.0,0.0,17.0,5.0,0.0479201702836462,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green rectangle,hg88,14.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1066,8057.0,same size as a circular object,False,49.0,14.0,1.0,15.0,7.0,0.9840959312252836,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green triangle,hg88,14.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1067,8058.0,same size as a circular object,False,50.0,14.0,1.0,15.0,7.0,0.996698209253168,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,14.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1068,8059.0,same size as a circular object,False,51.0,14.0,0.0,10.0,12.0,0.0283678164144021,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue rectangle,hg88,14.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1069,8060.0,same size as a circular object,False,52.0,15.0,1.0,8.0,13.0,0.975745348399073,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,15.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1070,8061.0,same size as a circular object,False,53.0,15.0,1.0,15.0,6.0,0.9986017958980256,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large green circle,hg88,15.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1071,8062.0,same size as a circular object,False,54.0,15.0,0.0,5.0,16.0,0.0212008554136673,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,15.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1072,8063.0,same size as a circular object,False,55.0,15.0,1.0,16.0,5.0,0.9940554398928044,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,15.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1073,8064.0,same size as a circular object,False,56.0,16.0,1.0,12.0,9.0,0.9828771241645882,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue rectangle,hg88,16.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1074,8065.0,same size as a circular object,False,57.0,16.0,1.0,12.0,9.0,0.9986929132138584,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,16.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1075,8066.0,same size as a circular object,False,58.0,17.0,1.0,16.0,5.0,0.9909796028726988,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow circle,hg88,17.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1076,8067.0,same size as a circular object,False,59.0,17.0,0.0,9.0,12.0,0.0176934427536252,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,17.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1077,8068.0,same size as a circular object,False,60.0,18.0,1.0,15.0,6.0,0.9952429206418856,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,18.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1078,8069.0,same size as a circular object,False,61.0,19.0,0.0,6.0,15.0,0.0508256594857812,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue triangle,hg88,19.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1079,8070.0,same size as a circular object,False,62.0,19.0,1.0,18.0,3.0,0.9643540713715312,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,19.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1080,8071.0,same size as a circular object,False,63.0,19.0,1.0,21.0,0.0,0.9956313766435868,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow circle,hg88,19.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1081,8072.0,same size as a circular object,False,64.0,19.0,0.0,6.0,15.0,0.0340283554822917,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,19.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1082,8073.0,same size as a circular object,False,65.0,19.0,1.0,16.0,5.0,0.9652474131544296,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green circle,hg88,19.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1083,8074.0,same size as a circular object,False,66.0,20.0,0.0,7.0,14.0,0.0173759805752524,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow rectangle,hg88,20.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1084,8075.0,same size as a circular object,False,67.0,20.0,0.0,7.0,14.0,0.0195217943205534,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,20.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1085,8076.0,same size as a circular object,False,68.0,21.0,0.0,8.0,13.0,0.0321327662270505,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium green triangle,hg88,21.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1086,8077.0,same size as a circular object,False,69.0,21.0,0.0,5.0,16.0,0.0032480177599154,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,21.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1087,8078.0,same size as a circular object,False,70.0,21.0,0.0,6.0,15.0,0.0436815770528937,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,21.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1088,8079.0,same size as a circular object,False,71.0,21.0,0.0,9.0,12.0,0.0072318784310709,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,21.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1089,8080.0,same size as a circular object,False,72.0,21.0,0.0,6.0,15.0,0.0439196177965186,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,21.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1090,8081.0,same size as a circular object,False,73.0,22.0,1.0,6.0,15.0,0.906825520490429,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,22.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1091,8082.0,same size as a circular object,False,74.0,22.0,0.0,4.0,17.0,0.0044458899193386,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow triangle,hg88,22.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1092,8083.0,same size as a circular object,False,75.0,22.0,1.0,7.0,14.0,0.9070743392858276,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue triangle,hg88,22.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1093,8084.0,same size as a circular object,False,76.0,22.0,1.0,14.0,7.0,0.9991075157118984,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow circle,hg88,22.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1094,8085.0,same size as a circular object,False,77.0,23.0,1.0,17.0,4.0,0.9984518630097908,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue circle,hg88,23.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1095,8086.0,same size as a circular object,False,78.0,23.0,1.0,17.0,4.0,0.9982844642152032,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue circle,hg88,23.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1096,8087.0,same size as a circular object,False,79.0,23.0,1.0,13.0,8.0,0.9846653005354256,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,23.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1097,8088.0,same size as a circular object,False,80.0,24.0,0.0,6.0,15.0,0.002381376823223,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium green triangle,hg88,24.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1098,8089.0,same size as a circular object,False,81.0,24.0,0.0,9.0,12.0,0.003738173011925,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large blue triangle,hg88,24.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1099,8090.0,same size as a circular object,False,82.0,24.0,0.0,8.0,13.0,0.0043108362257271,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small green rectangle,hg88,24.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1100,8091.0,same size as a circular object,False,83.0,25.0,0.0,4.0,17.0,0.0024124304175074,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",large yellow triangle,hg88,25.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1101,8092.0,same size as a circular object,False,84.0,25.0,0.0,3.0,18.0,0.0021716109409908,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium yellow rectangle,hg88,25.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1102,8093.0,same size as a circular object,False,85.0,25.0,1.0,14.0,7.0,0.9800260681581676,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small yellow rectangle,hg88,25.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1103,8094.0,same size as a circular object,False,86.0,25.0,1.0,15.0,6.0,0.9993814693391414,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",small blue circle,hg88,25.0,True,True,True,True,0.6708074534161491,0.512654958677686,1.0,1.0,True
1104,8095.0,same size as a circular object,False,87.0,25.0,0.0,7.0,14.0,0.0034319416064363,"""λx.exists(compose11(compose8(and,apply2(same_size,x.o)),circle), x.s)""
",same size as a circular object,"def is_rule(obj):
    return np.any([x.circle and (obj.size == x.size) for x in obj.current_set.objs])",medium blue rectangle,hg88,25.0,False,False,True,False,0.6708074534161491,0.512654958677686,1.0,1.0,True
1105,8396.0,blue or same shape as another object,False,0.0,1.0,1.0,11.0,11.0,0.4957054003017447,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg61,1.0,True,False,True,True,0.6844919786096256,0.625,,0.75,False
1106,8397.0,blue or same shape as another object,False,1.0,1.0,0.0,10.0,12.0,0.4366356623380625,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green triangle,hg61,1.0,False,False,True,True,0.6844919786096256,0.625,,0.75,False
1107,8398.0,blue or same shape as another object,False,2.0,1.0,1.0,12.0,10.0,0.476487868663753,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg61,1.0,True,False,True,True,0.6844919786096256,0.625,,0.75,False
1108,8399.0,blue or same shape as another object,False,3.0,2.0,1.0,12.0,10.0,0.6448422570040293,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large blue circle,hg61,2.0,True,True,True,True,0.6844919786096256,0.625,1.0,0.515625,True
1109,8400.0,blue or same shape as another object,False,4.0,2.0,1.0,13.0,9.0,0.6201062751605377,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small blue circle,hg61,2.0,True,True,True,True,0.6844919786096256,0.625,1.0,0.515625,True
1110,8401.0,blue or same shape as another object,False,5.0,2.0,1.0,12.0,10.0,0.4918040126187861,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green circle,hg61,2.0,True,False,True,True,0.6844919786096256,0.625,1.0,0.515625,False
1111,8402.0,blue or same shape as another object,False,6.0,3.0,1.0,14.0,8.0,0.6844253260936739,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium blue triangle,hg61,3.0,True,True,True,False,0.6844919786096256,0.625,1.0,0.515625,False
1112,8403.0,blue or same shape as another object,False,7.0,3.0,1.0,15.0,7.0,0.7423540926718033,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",large blue triangle,hg61,3.0,True,True,True,False,0.6844919786096256,0.625,1.0,0.515625,False
1113,8404.0,blue or same shape as another object,False,8.0,3.0,1.0,15.0,7.0,0.5363742970242811,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",medium green triangle,hg61,3.0,True,True,True,False,0.6844919786096256,0.625,1.0,0.515625,False
1114,8405.0,blue or same shape as another object,False,9.0,3.0,1.0,14.0,8.0,0.488064648998602,"""λx.apply7(not,apply1(triangle,x.o))""
",not triangle,"def is_rule(obj):
    return not obj.triangle",small green triangle,hg61,3.0,True,False,True,False,0.6844919786096256,0.625,1.0,0.515625,True
1115,8406.0,blue or same shape as another object,False,10.0,4.0,1.0,15.0,7.0,0.7931601901409522,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg61,4.0,True,True,True,True,0.6844919786096256,0.625,0.9,0.75,True
1116,8407.0,blue or same shape as another object,False,11.0,5.0,0.0,13.0,9.0,0.663335999683909,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,5.0,False,True,True,True,0.6844919786096256,0.625,0.9090909090909091,0.75,True
1117,8408.0,blue or same shape as another object,False,12.0,6.0,0.0,19.0,3.0,0.6019166582617572,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",large green rectangle,hg61,6.0,False,True,True,True,0.6844919786096256,0.625,0.9166666666666666,0.765625,True
1118,8409.0,blue or same shape as another object,False,13.0,7.0,0.0,2.0,20.0,0.3352043379089764,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg61,7.0,False,False,True,False,0.6844919786096256,0.625,0.6923076923076923,0.703125,True
1119,8410.0,blue or same shape as another object,False,14.0,7.0,1.0,21.0,1.0,0.8217181806064673,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,7.0,True,True,True,True,0.6844919786096256,0.625,0.6923076923076923,0.703125,True
1120,8411.0,blue or same shape as another object,False,15.0,7.0,1.0,21.0,1.0,0.6312329137432471,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg61,7.0,True,True,True,True,0.6844919786096256,0.625,0.6923076923076923,0.703125,True
1121,8412.0,blue or same shape as another object,False,16.0,7.0,1.0,13.0,9.0,0.495823753930722,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg61,7.0,True,False,True,True,0.6844919786096256,0.625,0.6923076923076923,0.703125,False
1122,8413.0,blue or same shape as another object,False,17.0,8.0,1.0,17.0,5.0,0.7908548298739788,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green circle,hg61,8.0,True,True,True,True,0.6844919786096256,0.625,0.7647058823529411,0.703125,True
1123,8414.0,blue or same shape as another object,False,18.0,8.0,1.0,15.0,7.0,0.6762486913694374,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow circle,hg61,8.0,True,True,True,True,0.6844919786096256,0.625,0.7647058823529411,0.703125,True
1124,8415.0,blue or same shape as another object,False,19.0,8.0,0.0,4.0,18.0,0.6918669689550825,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow triangle,hg61,8.0,False,True,True,True,0.6844919786096256,0.625,0.7647058823529411,0.703125,True
1125,8416.0,blue or same shape as another object,False,20.0,9.0,0.0,6.0,16.0,0.4559818423767865,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow circle,hg61,9.0,False,False,True,False,0.6844919786096256,0.625,0.75,0.703125,True
1126,8417.0,blue or same shape as another object,False,21.0,9.0,1.0,7.0,15.0,0.7884978407084873,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,9.0,True,True,True,True,0.6844919786096256,0.625,0.75,0.703125,True
1127,8418.0,blue or same shape as another object,False,22.0,10.0,1.0,22.0,0.0,0.9649953062432814,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,10.0,True,True,True,True,0.6844919786096256,0.625,0.7727272727272727,0.703125,True
1128,8419.0,blue or same shape as another object,False,23.0,10.0,1.0,21.0,1.0,0.876823365964924,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg61,10.0,True,True,True,True,0.6844919786096256,0.625,0.7727272727272727,0.703125,True
1129,8420.0,blue or same shape as another object,False,24.0,11.0,1.0,18.0,4.0,0.8371643710100898,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium green triangle,hg61,11.0,True,True,True,True,0.6844919786096256,0.625,0.7916666666666666,0.703125,True
1130,8421.0,blue or same shape as another object,False,25.0,11.0,1.0,19.0,3.0,0.91169010279782,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green triangle,hg61,11.0,True,True,True,True,0.6844919786096256,0.625,0.7916666666666666,0.703125,True
1131,8422.0,blue or same shape as another object,False,26.0,11.0,1.0,10.0,12.0,0.8073696852009107,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",medium blue circle,hg61,11.0,True,True,True,True,0.6844919786096256,0.625,0.7916666666666666,0.703125,True
1132,8423.0,blue or same shape as another object,False,27.0,12.0,1.0,18.0,4.0,0.6196190855768009,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small yellow rectangle,hg61,12.0,True,True,True,True,0.6844919786096256,0.625,0.8148148148148148,0.703125,True
1133,8424.0,blue or same shape as another object,False,28.0,12.0,1.0,13.0,9.0,0.3614223632924904,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",large yellow rectangle,hg61,12.0,True,False,True,False,0.6844919786096256,0.625,0.8148148148148148,0.703125,True
1134,8425.0,blue or same shape as another object,False,29.0,12.0,1.0,16.0,6.0,0.9873741012931988,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small blue triangle,hg61,12.0,True,True,True,True,0.6844919786096256,0.625,0.8148148148148148,0.703125,True
1135,8426.0,blue or same shape as another object,False,30.0,12.0,1.0,22.0,0.0,0.8356527654606225,"""λx.apply7(not,apply1(large,x.o))""
",not large,"def is_rule(obj):
    return not obj.large",small green rectangle,hg61,12.0,True,True,True,True,0.6844919786096256,0.625,0.8148148148148148,0.703125,True
1136,8427.0,blue or same shape as another object,False,31.0,13.0,1.0,21.0,1.0,0.8380450492412592,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green rectangle,hg61,13.0,True,True,True,True,0.6844919786096256,0.625,0.8064516129032258,0.75,True
1137,8428.0,blue or same shape as another object,False,32.0,13.0,1.0,22.0,0.0,0.9539897777353872,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small green rectangle,hg61,13.0,True,True,True,True,0.6844919786096256,0.625,0.8064516129032258,0.75,True
1138,8429.0,blue or same shape as another object,False,33.0,13.0,1.0,20.0,2.0,0.826929289631039,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue rectangle,hg61,13.0,True,True,True,True,0.6844919786096256,0.625,0.8064516129032258,0.75,True
1139,8430.0,blue or same shape as another object,False,34.0,13.0,1.0,22.0,0.0,0.9247836624401772,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green rectangle,hg61,13.0,True,True,True,True,0.6844919786096256,0.625,0.8064516129032258,0.75,True
1140,8431.0,blue or same shape as another object,False,35.0,14.0,1.0,21.0,1.0,0.9659178970923676,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium green triangle,hg61,14.0,True,True,True,True,0.6844919786096256,0.625,0.8285714285714286,0.75,True
1141,8432.0,blue or same shape as another object,False,36.0,14.0,1.0,18.0,4.0,0.8891069481655904,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow triangle,hg61,14.0,True,True,True,True,0.6844919786096256,0.625,0.8285714285714286,0.75,True
1142,8433.0,blue or same shape as another object,False,37.0,14.0,1.0,16.0,6.0,0.9537135634323022,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue circle,hg61,14.0,True,True,True,True,0.6844919786096256,0.625,0.8285714285714286,0.75,True
1143,8434.0,blue or same shape as another object,False,38.0,15.0,1.0,20.0,2.0,0.8068927645390431,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg61,15.0,True,True,True,True,0.6844919786096256,0.625,0.8421052631578947,0.75,True
1144,8435.0,blue or same shape as another object,False,39.0,15.0,1.0,19.0,3.0,0.8137347806599564,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg61,15.0,True,True,True,True,0.6844919786096256,0.625,0.8421052631578947,0.75,True
1145,8436.0,blue or same shape as another object,False,40.0,15.0,1.0,17.0,5.0,0.9670524596059522,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue rectangle,hg61,15.0,True,True,True,True,0.6844919786096256,0.625,0.8421052631578947,0.75,True
1146,8437.0,blue or same shape as another object,False,41.0,15.0,0.0,10.0,12.0,0.93261344913401,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg61,15.0,False,True,True,True,0.6844919786096256,0.625,0.8421052631578947,0.75,True
1147,8438.0,blue or same shape as another object,False,42.0,16.0,1.0,18.0,4.0,0.9055853709566009,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium blue circle,hg61,16.0,True,True,True,True,0.6844919786096256,0.625,0.8333333333333334,0.75,True
1148,8439.0,blue or same shape as another object,False,43.0,16.0,1.0,19.0,3.0,0.6764665366983991,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue triangle,hg61,16.0,True,True,True,True,0.6844919786096256,0.625,0.8333333333333334,0.75,True
1149,8440.0,blue or same shape as another object,False,44.0,17.0,1.0,20.0,2.0,0.9579181919922348,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue rectangle,hg61,17.0,True,True,True,True,0.6844919786096256,0.625,0.8409090909090909,0.75,True
1150,8441.0,blue or same shape as another object,False,45.0,18.0,1.0,21.0,1.0,0.7563861534829357,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large blue circle,hg61,18.0,True,True,True,True,0.6844919786096256,0.625,0.8444444444444444,0.75,True
1151,8442.0,blue or same shape as another object,False,46.0,18.0,1.0,22.0,0.0,0.991465224454828,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small blue triangle,hg61,18.0,True,True,True,True,0.6844919786096256,0.625,0.8444444444444444,0.75,True
1152,8443.0,blue or same shape as another object,False,47.0,19.0,1.0,16.0,6.0,0.9022853839497884,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green triangle,hg61,19.0,True,True,True,True,0.6844919786096256,0.625,0.851063829787234,0.75,True
1153,8444.0,blue or same shape as another object,False,48.0,19.0,0.0,10.0,12.0,0.8505280805605935,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow circle,hg61,19.0,False,True,True,True,0.6844919786096256,0.625,0.851063829787234,0.75,True
1154,8445.0,blue or same shape as another object,False,49.0,19.0,1.0,18.0,4.0,0.8266251022533879,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,19.0,True,True,True,True,0.6844919786096256,0.625,0.851063829787234,0.75,True
1155,8446.0,blue or same shape as another object,False,50.0,20.0,0.0,11.0,11.0,0.8708997394594462,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large yellow triangle,hg61,20.0,False,True,True,True,0.6844919786096256,0.625,0.84,0.75,True
1156,8447.0,blue or same shape as another object,False,51.0,20.0,0.0,11.0,11.0,0.6777239395930792,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow circle,hg61,20.0,False,True,True,True,0.6844919786096256,0.625,0.84,0.75,True
1157,8448.0,blue or same shape as another object,False,52.0,20.0,0.0,11.0,11.0,0.7829027245329598,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg61,20.0,False,True,True,True,0.6844919786096256,0.625,0.84,0.75,True
1158,8449.0,blue or same shape as another object,False,53.0,21.0,0.0,10.0,12.0,0.0838707435962078,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg61,21.0,False,False,True,False,0.6844919786096256,0.625,0.7924528301886793,0.765625,True
1159,8450.0,blue or same shape as another object,False,54.0,22.0,1.0,20.0,2.0,0.8702206005734752,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium green triangle,hg61,22.0,True,True,True,True,0.6844919786096256,0.625,0.7962962962962963,0.765625,True
1160,8451.0,blue or same shape as another object,False,55.0,22.0,1.0,17.0,5.0,0.5917047393033954,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow triangle,hg61,22.0,True,True,True,False,0.6844919786096256,0.625,0.7962962962962963,0.765625,False
1161,8452.0,blue or same shape as another object,False,56.0,23.0,1.0,19.0,3.0,0.9518266564543864,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",medium blue rectangle,hg61,23.0,True,True,True,True,0.6844919786096256,0.625,0.8035714285714286,0.765625,True
1162,8453.0,blue or same shape as another object,False,57.0,23.0,1.0,20.0,2.0,0.9522139212646152,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",small green rectangle,hg61,23.0,True,True,True,True,0.6844919786096256,0.625,0.8035714285714286,0.765625,True
1163,8454.0,blue or same shape as another object,False,58.0,23.0,0.0,9.0,13.0,0.847321839192432,"""λx.apply1(compose11(compose8(or,triangle),compose2(not,yellow)),x.o)""
",(not yellow) or triangle,"def is_rule(obj):
    return (not obj.yellow) or obj.triangle",medium green circle,hg61,23.0,False,True,True,True,0.6844919786096256,0.625,0.8035714285714286,0.765625,True
1164,8455.0,blue or same shape as another object,False,59.0,24.0,0.0,10.0,12.0,0.7444195847939454,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",small yellow triangle,hg61,24.0,False,True,True,True,0.6844919786096256,0.625,0.7796610169491526,0.75,True
1165,8456.0,blue or same shape as another object,False,60.0,24.0,0.0,9.0,13.0,0.6355342633560213,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",medium yellow rectangle,hg61,24.0,False,True,True,True,0.6844919786096256,0.625,0.7796610169491526,0.75,True
1166,8457.0,blue or same shape as another object,False,61.0,24.0,0.0,6.0,16.0,0.5703518226639517,"""λx.apply1(apply2(same_color,x.o),x.o)""
",same color as itself,"def is_rule(obj):
    return obj.color == obj.color",large green circle,hg61,24.0,False,True,True,True,0.6844919786096256,0.625,0.7796610169491526,0.75,True
1167,8458.0,blue or same shape as another object,False,62.0,25.0,1.0,17.0,5.0,0.4644404109001243,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium yellow circle,hg61,25.0,True,False,True,False,0.6844919786096256,0.625,0.7741935483870968,0.765625,True
1168,8459.0,blue or same shape as another object,False,63.0,25.0,1.0,18.0,4.0,0.8977066687168644,"""λx.apply7(not,apply1(yellow,x.o))""
",not yellow,"def is_rule(obj):
    return not obj.yellow",medium blue circle,hg61,25.0,True,True,True,True,0.6844919786096256,0.625,0.7741935483870968,0.765625,True

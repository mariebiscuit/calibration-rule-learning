{
    "hg01": "(lambda (x) (truethunk))",
    "hg02": "(lambda (x) (falsethunk))",
    "hg03": "(lambda (x) (eqv* (color* x) 'blue))",
    "hg04": "(lambda (x) (eqv* (shape* x) 'circle))",
    "hg05": "(lambda (x) (not* (eqv* (shape* x) 'circle)))",
    "hg06": "(lambda (x) (or* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)))",
    "hg07": "(lambda (x) (or* (eqv* (shape* x) 'circle) (eqv* (shape* x) 'triangle)))",
    "hg08": "(lambda (x) (or* (eqv* (color* x) 'blue) (eqv* (color* x) 'green)))",
    "hg09": "(lambda (x) (and* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)))",
    "hg10": "(lambda (x) (and* (eqv* (shape* x) 'circle) (not (eqv* (color* x) 'blue))))",
    "hg11": "(lambda (x) (not* (and* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue))))",
    "hg12": "(lambda (x) (not* (or* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue))))",
    "hg13": "(lambda (x) (not* (or* (not* (eqv* (shape* x) 'circle)) (eqv* (color* x) 'blue))))",
    "hg14": "(lambda (x) (or* (and* (eqv* (shape* x) 'circle) (not* (eqv* (color* x) 'blue))) (and* (not* (eqv* (shape* x) 'circle)) (eqv* (color* x) 'blue))))",
    "hg15": "(lambda (x) (not* (or* (and* (eqv* (shape* x) 'circle) (not* (eqv* (color* x) 'blue))) (and* (not* (eqv* (shape* x) 'circle)) (eqv* (color* x) 'blue)))))",
    "hg16": "(lambda (x) (or* (and* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)) (and* (not* (eqv* (shape* x) 'circle)) (not* (eqv* (color* x) 'blue)))))",
    "hg17": "(lambda (S) (lambda (x) (exists* (lambda (z) (eqv* (shape* z) 'triangle)) S)))",
    "hg18": "(lambda (x) (eqv* (size* x) 3))",
    "hg19": "(lambda (x) (eqv* (size* x) 2))",
    "hg20": "(lambda (x) (eqv* (size* x) 1))",
    "hg21": "(lambda (x) (or* (eqv* (size* x) 3) (eqv* (size* x) 1)))",
    "hg22": "(lambda (x) (or* (eqv* (size* x) 3) (eqv* (size* x) 2)))",
    "hg23": "(lambda (x) (or* (eqv* (size* x) 2) (eqv* (size* x) 1)))",
    "hg24": "(lambda (x) (and* (eqv* (color* x) 'blue) (eqv* (size* x) 1)))",
    "hg25": "(lambda (x) (or* (eqv* (color* x) 'blue) (eqv* (size* x) 1)))",
    "hg26": "(lambda (S) (lambda (x) (or* (contains-SFL-OBJECT* (largest-set* S) x) (contains-SFL-OBJECT* (smallest-set* S) x))))",
    "hg27": "(lambda (S) (lambda (x) (and* (not* (contains-SFL-OBJECT* (largest-set* S) x)) (not* (contains-SFL-OBJECT* (smallest-set* S) x)))))",
    "hg28": "(lambda (S) (lambda (x) (contains-SFL-OBJECT* (largest-set* (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S)) x)))",
    "hg29": "(lambda (S) (lambda (x) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (gt* (size* x) (size* y)))) S)))",
    "hg30": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'blue) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (gt* (size* x) (size* y)))) S))))",
    "hg31": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'blue) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (gt* (size* x) (size* y)))) S))))",
    "hg32": "(lambda (S) (lambda (x) (forall* (lambda (y) (geq* (size* x) (size* y))) S)))",
    "hg33": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'blue) (forall* (lambda (y) (geq* (size* x) (size* y))) S))))",
    "hg34": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'blue) (forall* (lambda (y) (geq* (size* x) (size* y))) S))))",
    "hg35": "(lambda (S) (lambda (x) (exists* (lambda (y) (gt* (size* x) (size* y))) S)))",
    "hg36": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (gt* (size* x) (size* y)) (eqv* (color* y) 'blue))) S)))",
    "hg37": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S)))",
    "hg38": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (or* (eqv* (color* y) 'blue) (eqv* (shape* y) 'circle)))) S)))",
    "hg39": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (or* (eqv* (color* y) 'blue) (eqv* (color* y) 'green)))) S)))",
    "hg40": "(lambda (S) (lambda (x) (and* (not* (eqv* (color* x) 'blue)) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S))))",
    "hg41": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'green) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S))))",
    "hg42": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'green) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S))))",
    "hg43": "(lambda (S) (lambda (x) (and* (eqv* (shape* x) 'circle) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S))))",
    "hg44": "(lambda (S) (lambda (x) (eqv* (shape* x) (shape* (unique-largest* S)))))",
    "hg45": "(lambda (S) (lambda (x) (exists* (lambda (y) (eqv* (shape* y) (shape* x))) (largest-set* S))))",
    "hg46": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'blue) (exists* (lambda (y) (eqv* (shape* y) (shape* x))) (largest-set* S)))))",
    "hg47": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'blue) (exists* (lambda (y) (eqv* (shape* y) (shape* x))) (largest-set* S)))))",
    "hg48": "(lambda (S) (lambda (x) (and* (not* (eqv-SFL-object* x (unique-largest* S))) (eqv* (shape* x) (shape* (unique-largest* S))))))",
    "hg49": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) (largest-set* S))))",
    "hg50": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'blue) (forall* (lambda (y) (or* (eqv-SFL-object* y x) (not* (eqv* (color* y) 'blue)))) S))))",
    "hg51": "(lambda (S) (lambda (x) (and* (eqv* (shape* x) 'circle) (forall* (lambda (y) (or* (eqv-SFL-object* y x) (not* (eqv* (shape* y) 'circle)))) S))))",
    "hg52": "(lambda (S) (lambda (x) (and* (or* (eqv* (color* x) 'blue) (eqv* (color* x) 'green)) (forall* (lambda (y) (or* (eqv-SFL-object* y x) (not* (or* (eqv* (color* x) 'blue) (eqv* (color* x) 'green))))) S))))",
    "hg53": "(lambda (S) (lambda (x) (and* (and* (eqv* (color* x) 'blue) (eqv* (shape* x) 'circle)) (forall* (lambda (y) (or* (eqv-SFL-object* y x) (not* (and* (eqv* (color* x) 'blue) (eqv* (shape* x) 'circle))))) S))))",
    "hg54": "(lambda (S) (lambda (x) (and* (or* (eqv* (color* x) 'blue) (eqv* (shape* x) 'circle)) (forall* (lambda (y) (or* (eqv-SFL-object* y x) (not* (or* (eqv* (color* x) 'blue) (eqv* (shape* x) 'circle))))) S))))",
    "hg55": "(lambda (S) (lambda (x) (eqv-SFL-object* x (unique-largest* (filter* (lambda (y) (eqv* (color* y) 'blue)) S)))))",
    "hg56": "(lambda (S) (lambda (x) (eqv-SFL-object* x (unique-largest* (filter* (lambda (y) (or* (eqv* (color* y) 'blue) (eqv* (color* y) 'green))) S)))))",
    "hg57": "(lambda (S) (lambda (x) (eqv* (shape* x) (shape* (unique-largest* (filter* (lambda (y) (eqv* (color* y) 'blue)) S))))))",
    "hg58": "(lambda (S) (lambda (x) (exists* (lambda (y) (eqv* (shape* y) (shape* x))) (largest-set* (filter* (lambda (y) (eqv* (color* y) 'blue)) S)))))",
    "hg59": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) S)))",
    "hg60": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (size* y) (size* x)))) S)))",
    "hg61": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'blue) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) S))))",
    "hg62": "(lambda (S) (lambda (x) (and* (eqv* (color* x) 'blue) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) S))))",
    "hg63": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (color* y) (color* x)))) S)))",
    "hg64": "(lambda (S) (lambda (x) (not* (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) S))))",
    "hg65": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) (color* x))))) S)))",
    "hg66": "(lambda (S) (lambda (x) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (eqv* (color* y) (color* x)))) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S))))",
    "hg67": "(lambda (S) (lambda (x) (or* (eqv* (color* x) 'blue) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (eqv* (color* y) (color* x)))) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S)))))",
    "hg68": "(lambda (S) (lambda (x) (or* (eqv* (shape* x) 'circle) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (eqv* (color* y) (color* x)))) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S)))))",
    "hg69": "(lambda (S) (lambda (x) (forall* (lambda (y) (eqv* (color* x) 'blue)) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S))))",
    "hg70": "(lambda (S) (lambda (x) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (eqv* (color* y) (color* x)))) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S))))",
    "hg71": "(lambda (S) (lambda (x) (forall* (lambda (y) (or* (eqv-SFL-object* x y) (not* (eqv* (color* y) (color* x))))) (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S))))",
    "hg72": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue)))) S)))",
    "hg73": "(lambda (S) (lambda (x) (and* (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (color* y) (color* x)))) S) (exists* (lambda (y) (and* (not* (eqv-SFL-object* x y)) (eqv* (shape* y) (shape* x)))) S))))",
    "hg74": "(lambda (S) (lambda (x) (exists* (lambda (y) (exists* (lambda (z) (and* (not* (eqv-SFL-object* x y)) (and* (not* (eqv-SFL-object* x z)) (and* (not* (eqv-SFL-object* y z)) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* z) (color* x))))))) S)) S)))",
    "hg75": "(lambda (S) (lambda (x) (exists* (lambda (y) (exists* (lambda (z) (and* (not* (eqv-SFL-object* x y)) (and* (not* (eqv-SFL-object* x z)) (and* (not* (eqv-SFL-object* y z)) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) (color* z))))))) S)) S)))",
    "hg76": "(lambda (S) (lambda (x) (forall* (lambda (y) (or* (eqv* (shape* x) (shape* y)) (or* (eqv* (color* x) (color* y)) (eqv* (size* x) (size* y))))) S)))",
    "hg77": "(lambda (x) (implies* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)))",
    "hg78": "(lambda (x) (implies* (eqv* (color* x) 'blue) (eqv* (shape* x) 'circle)))",
    "hg79": "(lambda (x) (implies* (not* (eqv* (color* x) 'blue)) (eqv* (shape* x) 'circle)))",
    "hg80": "(lambda (x) (implies* (not* (eqv* (color* x) 'blue)) (not* (eqv* (shape* x) 'circle))))",
    "hg81": "(lambda (x) (implies* (eqv* (color* x) 'blue) (eqv* (size* x) 1)))",
    "hg82": "(lambda (x) (implies* (or* (eqv* (shape* x) 'circle) (eqv* (shape* x) 'triangle)) (eqv* (color* x) 'blue)))",
    "hg83": "(lambda (x) (or* (and* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)) (and* (eqv* (shape* x) 'triangle) (eqv* (color* x) 'green))))",
    "hg84": "(lambda (x) (or* (or* (eqv* (shape* x) 'circle) (eqv* (color* x) 'blue)) (and* (eqv* (shape* x) 'triangle) (eqv* (color* x) 'green))))",
    "hg85": "(lambda (x) (or* (eqv* (shape* x) 'circle) (and* (eqv* (shape* x) 'triangle) (eqv* (color* x) 'blue))))",
    "hg86": "(lambda (x) (or* (eqv* (shape* x) 'circle) (implies* (eqv* (shape* x) 'triangle) (eqv* (color* x) 'blue))))",
    "hg87": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) S)))",
    "hg88": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (size* y) (size* x)) (eqv* (shape* y) 'circle))) S)))",
    "hg89": "(lambda (S) (lambda (x) (exists-other-SFL* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (eqv* (color* y) 'blue))) x S)))",
    "hg90": "(lambda (S) (lambda (x) (exists-other-SFL* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (or* (eqv* (color* y) 'blue) (eqv* (color* y) 'green)))) x S)))",
    "hg91": "(lambda (S) (lambda (x) (exists* (lambda (y) (and* (eqv* (shape* y) (shape* x)) (or* (eqv* (color* y) 'blue) (eqv* (color* y) 'green)))) S)))",
    "hg92": "(lambda (S) (lambda (x) (is-the-unique* x (lambda (y) (eqv* (color* y) 'blue)) S)))",
    "hg93": "(lambda (S) (lambda (x) (is-the-unique* x (lambda (y) (or* (eqv* (color* y) 'blue) (eqv* (shape* y) 'circle))) S)))",
    "hg94": "(lambda (S) (lambda (x) (is-the-unique* x (lambda (y) (or* (eqv* (color* y) 'blue) (eqv* (color* y) 'green))) S)))",
    "hg95": "(lambda (S) (lambda (x) (is-the-unique* x (lambda (y) (and* (eqv* (color* y) 'blue) (eqv* (shape* y) 'circle))) S)))",
    "hg96": "(lambda (S) (lambda (x) (eqv-SFL-object* (the-unique* (lambda (y) #t) S) x)))",
    "hg97": "(lambda (S) (lambda (x) (eqv-shape* x (the-unique* (lambda (y) (eqv* (color* y) 'blue)) S))))",
    "hg98": "(lambda (S) (lambda (x) (eqv-SFL-object* x (unique-smallest* S))))",
    "hg99": "(lambda (S) (lambda (x) (contains-SFL-OBJECT* (smallest-set* S) x)))",
    "hg100": "(lambda (S) (lambda (x) (contains-SFL-OBJECT* (smallest-set* (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S)) x)))",
    "hg101": "(lambda (S) (lambda (x) (eqv-SFL-object* (unique-smallest* (filter* (lambda (y) (eqv* (shape* y) (shape* x))) S)) x)))",
    "hg102": "(lambda (S) (lambda (x) (exists-exactly-one-other* (lambda (y) (eqv* (color* y) 'blue)) x S)))",
    "hg103": "(lambda (S) (lambda (x) (exists-exactly-one* (lambda (y) (eqv* (color* y) 'blue)) S)))",
    "hg104": "(lambda (S) (lambda (x) (exists-exactly-one-other* (lambda (y) (eqv* (color* y) (color* x))) x S)))",
    "hg105": "(lambda (S) (lambda (x) (exists-exactly-one* (lambda (y) (eqv-shape* y x)) (filter blue?* S))))",
    "hg106": "(lambda (S) (lambda (x) (exists-exactly-one-other* (lambda (y) (eqv-shape* y x)) x (filter blue?* S))))",
    "hg107": "(lambda (S) (lambda (x) (exists-exactly-one* (lambda (y) (eqv-shape* y x)) (filter blue?* S))))",
    "hg108": "(lambda (S) (lambda (x) (forall-other-SFL* blue?* x (filter (lambda (y) (eqv-shape* y x)) S))))",
    "hg109": "(lambda (S) (lambda (x) (forall* blue?* (filter (lambda (y) (eqv-shape* y x)) S))))",
    "hg110": "(lambda (S) (lambda (x) (forall-other-SFL-atleastone* blue?* x (filter (lambda (y) (eqv-shape* y x)) S))))",
    "hg111": "(lambda (S) (lambda (x) (forall-atleastone* (lambda (y) (eqv-color* y x)) (filter (lambda (y) (eqv-shape* y x)) S))))",
    "hg112": "(lambda (S) (lambda (x) (forall-other-SFL-atleastone* (lambda (y) (not* (eqv-color* y x))) x (filter (lambda (y) (eqv-shape* y x)) S))))"
}